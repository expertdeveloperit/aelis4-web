{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/eslint-loader/index.js??ref--13-0!/home/spineor/Downloads/aelis4-web/vue-client/src/api/orderService.js","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/api/orderService.js","mtime":1566984596000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import fileSaver from 'file-saver';\nimport moment from 'moment';\nimport request from '@/utils/request';\nimport apiConstants from '@/utils/apiConstants';\nimport constants from '@/utils/constants';\nvar suggestedFileNameHeader = 'suggested-file-name';\nvar typeApplicationPdfHeader = 'application/pdf';\n/*\n Helper method to put correct format in field shipDate for the actions that requires the page filters.\n*/\n\nvar getFiltersWithShipDateBackendFormat = function getFiltersWithShipDateBackendFormat(filters) {\n  var filtersUpdated = Object.assign({}, filters);\n  filtersUpdated.shipDate = filters.shipDate || new Date();\n  filtersUpdated.shipDate = moment(filtersUpdated.shipDate.getTime()).format(constants.DATES.DEFAULT_BACKEND_FORMAT);\n  return filtersUpdated;\n};\n\nvar saveFileBlob = function saveFileBlob(response) {\n  fileSaver.saveAs(response.data, response.headers[suggestedFileNameHeader]);\n  var file = new Blob([response.data], {\n    type: typeApplicationPdfHeader\n  });\n  var url = URL.createObjectURL(file);\n  window.open(url);\n};\n\nvar orderService = {\n  save: function save(orderToSave) {\n    return request({\n      url: apiConstants.END_POINTS.ORDER_ENTRY.SHIPMENTS,\n      method: 'post',\n      data: orderToSave\n    });\n  },\n  update: function update(unitsConsolidateId, orderToUpdate) {\n    return request({\n      url: \"\".concat(apiConstants.END_POINTS.ORDER_ENTRY.SHIPMENTS, \"/\").concat(unitsConsolidateId),\n      method: 'put',\n      data: orderToUpdate\n    });\n  },\n  search: function search(filters) {\n    var filtersUpdated = getFiltersWithShipDateBackendFormat(filters);\n    return request({\n      url: apiConstants.END_POINTS.ORDER_ENTRY.SHIPMENTS,\n      method: 'get',\n      params: filtersUpdated\n    });\n  },\n  finalizeShipments: function finalizeShipments(filters) {\n    var filtersUpdated = getFiltersWithShipDateBackendFormat(filters);\n    return request({\n      url: apiConstants.END_POINTS.ORDER_ENTRY.FINALIZE,\n      method: 'put',\n      data: filtersUpdated\n    });\n  },\n  changeShipDate: function changeShipDate(filters, newShipDate) {\n    var filtersUpdated = getFiltersWithShipDateBackendFormat(filters);\n    return request({\n      url: apiConstants.END_POINTS.ORDER_ENTRY.CHANGE_SHIP_DATE,\n      method: 'put',\n      data: filtersUpdated,\n      params: {\n        newShipDate: newShipDate\n      }\n    });\n  },\n  deleteShipments: function deleteShipments(unitsConsolidateId) {\n    return request({\n      url: apiConstants.END_POINTS.ORDER_ENTRY.SHIPMENTS,\n      method: 'delete',\n      params: {\n        unitsConsolidateId: unitsConsolidateId\n      }\n    });\n  },\n  getCutoffLimitDate: function getCutoffLimitDate(shipperAccountId, shipDate) {\n    return request({\n      url: apiConstants.END_POINTS.ORDER_ENTRY.CUTOFF,\n      method: 'get',\n      params: {\n        shipperAccountId: shipperAccountId,\n        shipDate: shipDate\n      }\n    });\n  },\n  getSettings: function getSettings(shipperAccountNumber) {\n    return request({\n      url: \"\".concat(apiConstants.END_POINTS.ORDER_ENTRY.SETTINGS, \"/\").concat(shipperAccountNumber),\n      method: 'get'\n    });\n  },\n  findUnits: function findUnits(filters) {\n    return request({\n      url: \"\".concat(apiConstants.END_POINTS.ORDER_ENTRY.SHIPMENTS, \"/\").concat(filters.unitsConsolidateId),\n      method: 'get',\n      params: filters\n    });\n  },\n  deleteUnit: function deleteUnit(unitId) {\n    return request({\n      url: \"\".concat(apiConstants.END_POINTS.ORDER_ENTRY.DELETE_UNIT, \"/\").concat(unitId),\n      method: 'delete'\n    });\n  },\n  printUnit: function printUnit(unitId) {\n    return request({\n      url: \"\".concat(apiConstants.END_POINTS.ORDER_ENTRY.PRINT_UNIT, \"/\").concat(unitId),\n      method: 'get',\n      responseType: 'blob'\n    }).then(saveFileBlob);\n  },\n  printUnitsConsolidate: function printUnitsConsolidate(unitsConsolidateId) {\n    return request({\n      url: \"\".concat(apiConstants.END_POINTS.ORDER_ENTRY.PRINT_UNIT_CONSOLIDTAE, \"/\").concat(unitsConsolidateId),\n      method: 'get',\n      responseType: 'blob'\n    }).then(saveFileBlob);\n  },\n  printLabelsMassive: function printLabelsMassive(filters) {\n    var filtersUpdated = getFiltersWithShipDateBackendFormat(filters);\n    return request({\n      url: \"\".concat(apiConstants.END_POINTS.ORDER_ENTRY.PRINT_UNIT_CONSOLIDTAE),\n      method: 'get',\n      responseType: 'blob',\n      params: filtersUpdated\n    }).then(saveFileBlob);\n  },\n  printShippingManifest: function printShippingManifest(filters) {\n    var filtersUpdated = getFiltersWithShipDateBackendFormat(filters);\n    return request({\n      url: \"\".concat(apiConstants.END_POINTS.ORDER_ENTRY.PRINT_SHIPPING_MANIFEST),\n      method: 'get',\n      responseType: 'blob',\n      params: filtersUpdated\n    }).then(saveFileBlob);\n  }\n};\nexport default orderService;",{"version":3,"sources":["/home/spineor/Downloads/aelis4-web/vue-client/src/api/orderService.js"],"names":["fileSaver","moment","request","apiConstants","constants","suggestedFileNameHeader","typeApplicationPdfHeader","getFiltersWithShipDateBackendFormat","filters","filtersUpdated","Object","assign","shipDate","Date","getTime","format","DATES","DEFAULT_BACKEND_FORMAT","saveFileBlob","response","saveAs","data","headers","file","Blob","type","url","URL","createObjectURL","window","open","orderService","save","orderToSave","END_POINTS","ORDER_ENTRY","SHIPMENTS","method","update","unitsConsolidateId","orderToUpdate","search","params","finalizeShipments","FINALIZE","changeShipDate","newShipDate","CHANGE_SHIP_DATE","deleteShipments","getCutoffLimitDate","shipperAccountId","CUTOFF","getSettings","shipperAccountNumber","SETTINGS","findUnits","deleteUnit","unitId","DELETE_UNIT","printUnit","PRINT_UNIT","responseType","then","printUnitsConsolidate","PRINT_UNIT_CONSOLIDTAE","printLabelsMassive","printShippingManifest","PRINT_SHIPPING_MANIFEST"],"mappings":"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","sourcesContent":["import fileSaver from 'file-saver';\nimport moment from 'moment';\nimport request from '@/utils/request';\nimport apiConstants from '@/utils/apiConstants';\nimport constants from '@/utils/constants';\n\nconst suggestedFileNameHeader = 'suggested-file-name';\nconst typeApplicationPdfHeader = 'application/pdf';\n/*\n Helper method to put correct format in field shipDate for the actions that requires the page filters.\n*/\nconst getFiltersWithShipDateBackendFormat = (filters) => {\n  const filtersUpdated = Object.assign({}, filters);\n  filtersUpdated.shipDate = filters.shipDate || new Date();\n  filtersUpdated.shipDate = moment(filtersUpdated.shipDate.getTime()).format(constants.DATES.DEFAULT_BACKEND_FORMAT);\n  return filtersUpdated;\n};\n\nconst saveFileBlob = (response) => {\n  fileSaver.saveAs(response.data, response.headers[suggestedFileNameHeader]);\n  const file = new Blob([response.data], { type: typeApplicationPdfHeader });\n  const url = URL.createObjectURL(file);\n  window.open(url);\n};\n\nconst orderService = {\n  save(orderToSave) {\n    return request({\n      url: apiConstants.END_POINTS.ORDER_ENTRY.SHIPMENTS,\n      method: 'post',\n      data: orderToSave\n    });\n  },\n  update(unitsConsolidateId, orderToUpdate) {\n    return request({\n      url: `${apiConstants.END_POINTS.ORDER_ENTRY.SHIPMENTS}/${unitsConsolidateId}`,\n      method: 'put',\n      data: orderToUpdate\n    });\n  },\n  search(filters) {\n    const filtersUpdated = getFiltersWithShipDateBackendFormat(filters);\n    return request({\n      url: apiConstants.END_POINTS.ORDER_ENTRY.SHIPMENTS,\n      method: 'get',\n      params: filtersUpdated\n    });\n  },\n  finalizeShipments(filters) {\n    const filtersUpdated = getFiltersWithShipDateBackendFormat(filters);\n    return request({\n      url: apiConstants.END_POINTS.ORDER_ENTRY.FINALIZE,\n      method: 'put',\n      data: filtersUpdated\n    });\n  },\n  changeShipDate(filters, newShipDate) {\n    const filtersUpdated = getFiltersWithShipDateBackendFormat(filters);\n    return request({\n      url: apiConstants.END_POINTS.ORDER_ENTRY.CHANGE_SHIP_DATE,\n      method: 'put',\n      data: filtersUpdated,\n      params: { newShipDate }\n    });\n  },\n  deleteShipments(unitsConsolidateId) {\n    return request({\n      url: apiConstants.END_POINTS.ORDER_ENTRY.SHIPMENTS,\n      method: 'delete',\n      params: { unitsConsolidateId }\n    });\n  },\n  getCutoffLimitDate(shipperAccountId, shipDate) {\n    return request({\n      url: apiConstants.END_POINTS.ORDER_ENTRY.CUTOFF,\n      method: 'get',\n      params: { shipperAccountId, shipDate }\n    });\n  },\n  getSettings(shipperAccountNumber) {\n    return request({\n      url: `${apiConstants.END_POINTS.ORDER_ENTRY.SETTINGS}/${shipperAccountNumber}`,\n      method: 'get'\n    });\n  },\n  findUnits(filters) {\n    return request({\n      url: `${apiConstants.END_POINTS.ORDER_ENTRY.SHIPMENTS}/${filters.unitsConsolidateId}`,\n      method: 'get',\n      params: filters\n    });\n  },\n  deleteUnit(unitId) {\n    return request({\n      url: `${apiConstants.END_POINTS.ORDER_ENTRY.DELETE_UNIT}/${unitId}`,\n      method: 'delete'\n    });\n  },\n  printUnit(unitId) {\n    return request({\n      url: `${apiConstants.END_POINTS.ORDER_ENTRY.PRINT_UNIT}/${unitId}`,\n      method: 'get',\n      responseType: 'blob'\n    }).then(saveFileBlob);\n  },\n  printUnitsConsolidate(unitsConsolidateId) {\n    return request({\n      url: `${apiConstants.END_POINTS.ORDER_ENTRY.PRINT_UNIT_CONSOLIDTAE}/${unitsConsolidateId}`,\n      method: 'get',\n      responseType: 'blob'\n    }).then(saveFileBlob);\n  },\n  printLabelsMassive(filters) {\n    const filtersUpdated = getFiltersWithShipDateBackendFormat(filters);\n    return request({\n      url: `${apiConstants.END_POINTS.ORDER_ENTRY.PRINT_UNIT_CONSOLIDTAE}`,\n      method: 'get',\n      responseType: 'blob',\n      params: filtersUpdated\n    }).then(saveFileBlob);\n  },\n  printShippingManifest(filters) {\n    const filtersUpdated = getFiltersWithShipDateBackendFormat(filters);\n    return request({\n      url: `${apiConstants.END_POINTS.ORDER_ENTRY.PRINT_SHIPPING_MANIFEST}`,\n      method: 'get',\n      responseType: 'blob',\n      params: filtersUpdated\n    }).then(saveFileBlob);\n  }\n};\n\nexport default orderService;\n"]}]}