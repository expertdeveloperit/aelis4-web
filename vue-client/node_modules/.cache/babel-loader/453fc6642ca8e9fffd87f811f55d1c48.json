{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/thread-loader/dist/cjs.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/eslint-loader/index.js??ref--13-0!/home/spineor/Downloads/aelis4-web/vue-client/tests/unit/views/warehouse/extensionRequest/SearchFilters.spec.js","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/tests/unit/views/warehouse/extensionRequest/SearchFilters.spec.js","mtime":1567146123091},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport ElementUI from 'element-ui';\nimport { mount, createLocalVue } from '@vue/test-utils';\nimport Vuex from 'vuex';\nimport SearchFilters from \"../../../../../src/views/warehouse/extensionRequest/SearchFilters\";\nimport store from \"../../../../../src/store\";\nimport i18n from \"../../../../../src/lang\";\nimport alphanumericValidation from \"../../../../../src/directives/alphanumericValidation\";\ndescribe('../../../../../src/views/warehouse/extensionRequest/SearchFilters', function () {\n  var localVue;\n  beforeEach(function () {\n    localVue = createLocalVue();\n    localVue.use(Vuex);\n    localVue.use(ElementUI);\n    localVue.directive('alphanumeric-validation', alphanumericValidation);\n  });\n  it('Renders SearchFilters succesfully', function () {\n    var element = mount(SearchFilters, {\n      store: store,\n      localVue: localVue,\n      i18n: i18n\n    });\n    expect(element.find('.el-collapse-item').exists()).toBe(true);\n    expect(element.find('#searchForm-shipper').exists()).toBe(true);\n    expect(element.find('#searchForm-aelTerminal').exists()).toBe(true);\n    expect(element.find('#searchForm-ship-date').exists()).toBe(true);\n    expect(element.find('#searchForm-status').exists()).toBe(true);\n    expect(element.find('#searchForm-order-number').exists()).toBe(true);\n  });\n  it('Calls handleSearch succesfully', function () {\n    var extensionRequestSearch = jest.fn().mockImplementation(function () {\n      return Promise.resolve({});\n    });\n    store._actions['extensionRequest/search'] = [extensionRequestSearch];\n    var element = mount(SearchFilters, {\n      store: store,\n      localVue: localVue,\n      i18n: i18n\n    });\n    element.vm.handleSearch();\n    expect(extensionRequestSearch).toHaveBeenCalled();\n  });\n  it('Calls handleChangeDate succesfully', function () {\n    var extensionRequestSearch = jest.fn().mockImplementation(function () {\n      return Promise.resolve({});\n    });\n    var focusFilterStatus = jest.fn();\n    store._actions['extensionRequest/search'] = [extensionRequestSearch];\n    var element = mount(SearchFilters, {\n      store: store,\n      localVue: localVue,\n      i18n: i18n\n    });\n    element.setData({\n      $refs: {\n        'filter-status': {\n          focus: focusFilterStatus\n        }\n      }\n    });\n    element.vm.handleChangeDate();\n    expect(extensionRequestSearch).toHaveBeenCalled();\n    expect(focusFilterStatus).toHaveBeenCalled();\n  });\n});",{"version":3,"sources":["/home/spineor/Downloads/aelis4-web/vue-client/tests/unit/views/warehouse/extensionRequest/SearchFilters.spec.js"],"names":["ElementUI","mount","createLocalVue","Vuex","SearchFilters","store","i18n","alphanumericValidation","describe","localVue","beforeEach","use","directive","it","element","expect","find","exists","toBe","extensionRequestSearch","jest","fn","mockImplementation","Promise","resolve","_actions","vm","handleSearch","toHaveBeenCalled","focusFilterStatus","setData","$refs","focus","handleChangeDate"],"mappings":"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","sourcesContent":["import ElementUI from 'element-ui';\nimport { mount, createLocalVue } from '@vue/test-utils';\nimport Vuex from 'vuex';\nimport SearchFilters from '../../../../../src/views/warehouse/extensionRequest/SearchFilters';\nimport store from '../../../../../src/store';\nimport i18n from '../../../../../src/lang';\nimport alphanumericValidation from '../../../../../src/directives/alphanumericValidation';\n\ndescribe('../../../../../src/views/warehouse/extensionRequest/SearchFilters', () => {\n  let localVue;\n  beforeEach(() => {\n    localVue = createLocalVue();\n    localVue.use(Vuex);\n    localVue.use(ElementUI);\n    localVue.directive('alphanumeric-validation', alphanumericValidation);\n  });\n\n  it('Renders SearchFilters succesfully', () => {\n    const element = mount(SearchFilters, { store, localVue, i18n });\n    expect(element.find('.el-collapse-item').exists()).toBe(true);\n    expect(element.find('#searchForm-shipper').exists()).toBe(true);\n    expect(element.find('#searchForm-aelTerminal').exists()).toBe(true);\n    expect(element.find('#searchForm-ship-date').exists()).toBe(true);\n    expect(element.find('#searchForm-status').exists()).toBe(true);\n    expect(element.find('#searchForm-order-number').exists()).toBe(true);\n  });\n\n  it('Calls handleSearch succesfully', () => {\n    const extensionRequestSearch = jest.fn().mockImplementation(() => Promise.resolve({}));\n    store._actions['extensionRequest/search'] = [extensionRequestSearch];\n    const element = mount(SearchFilters, { store, localVue, i18n });\n    element.vm.handleSearch();\n    expect(extensionRequestSearch).toHaveBeenCalled();\n  });\n\n  it('Calls handleChangeDate succesfully', () => {\n    const extensionRequestSearch = jest.fn().mockImplementation(() => Promise.resolve({}));\n    const focusFilterStatus = jest.fn();\n    store._actions['extensionRequest/search'] = [extensionRequestSearch];\n    const element = mount(SearchFilters, { store, localVue, i18n });\n    element.setData({ $refs: { 'filter-status': { focus: focusFilterStatus } } });\n    element.vm.handleChangeDate();\n    expect(extensionRequestSearch).toHaveBeenCalled();\n    expect(focusFilterStatus).toHaveBeenCalled();\n  });\n});\n"]}]}