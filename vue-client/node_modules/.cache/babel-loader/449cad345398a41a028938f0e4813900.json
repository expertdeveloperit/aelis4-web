{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/uploadXml/UploadDrop.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/uploadXml/UploadDrop.vue","mtime":1566297892000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport authService from '@/utils/auth/auth0Service';\nexport default {\n  name: 'UploadDrop',\n  computed: _objectSpread({}, mapGetters(['user'])),\n  data: function data() {\n    return {\n      isMinimized: false,\n      uploadProgress: 0,\n      processing: false,\n      actualFileProcessed: false,\n      url: '',\n      templateExampleUrl: '',\n      authorization: null\n    };\n  },\n  mounted: function mounted() {\n    this.url = \"\".concat(process.env.VUE_APP_BASE_API, \"/data-entry/shipment/upload\");\n    this.templateExampleUrl = \"\".concat(process.env.VUE_APP_BUCKET_ROOT, \"xml-upload-template.xml\");\n    this.authorization = \"Bearer \".concat(authService.accessToken);\n  },\n  methods: {\n    handleSuccess: function handleSuccess(response, file) {\n      this.$store.dispatch('SetUploadXmlResponse', _objectSpread({}, response, {\n        fileName: file.name\n      }));\n      this.isMinimized = true;\n      this.processing = false;\n      this.actualFileProcessed = true;\n      this.$refs.upload.clearFiles();\n    },\n    handleOpenSearchFile: function handleOpenSearchFile() {\n      this.isMinimized = false;\n      this.uploadProgress = 0;\n    },\n    handleMinimized: function handleMinimized() {\n      this.isMinimized = !this.isMinimized;\n    },\n    handleProgress: function handleProgress(event, file, fileList) {\n      if (!this.processing) {\n        this.processing = true;\n      }\n\n      this.uploadProgress = fileList[0].percentage;\n    },\n    handleError: function handleError(error) {\n      this.processing = false;\n      var message = JSON.parse(error.message);\n      this.$message.error(message.message || this.$t('common.errorServer'));\n    },\n    handleBeforeUpload: function handleBeforeUpload(file) {\n      var isXML = file.type === 'text/xml';\n      var isLt5M = file.size / 1024 / 1024 <= 5;\n\n      if (!isXML) {\n        this.$message.error(this.$t('uploadXmlFiles.errorExtension'));\n      }\n\n      if (!isLt5M) {\n        this.$message.error(this.$t('uploadXmlFiles.fileSizeExceed'));\n      }\n\n      return isXML && isLt5M;\n    }\n  }\n};",{"version":3,"sources":["UploadDrop.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,WAAA,MAAA,2BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,QAAA,oBACA,UAAA,CAAA,CACA,MADA,CAAA,CADA,CAFA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,KADA;AAEA,MAAA,cAAA,EAAA,CAFA;AAGA,MAAA,UAAA,EAAA,KAHA;AAIA,MAAA,mBAAA,EAAA,KAJA;AAKA,MAAA,GAAA,EAAA,EALA;AAMA,MAAA,kBAAA,EAAA,EANA;AAOA,MAAA,aAAA,EAAA;AAPA,KAAA;AASA,GAjBA;AAkBA,EAAA,OAlBA,qBAkBA;AACA,SAAA,GAAA,aAAA,OAAA,CAAA,GAAA,CAAA,gBAAA;AACA,SAAA,kBAAA,aAAA,OAAA,CAAA,GAAA,CAAA,mBAAA;AACA,SAAA,aAAA,oBAAA,WAAA,CAAA,WAAA;AACA,GAtBA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,QADA,EACA,IADA,EACA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,sBAAA,oBAAA,QAAA;AAAA,QAAA,QAAA,EAAA,IAAA,CAAA;AAAA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,UAAA,GAAA,KAAA;AACA,WAAA,mBAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,UAAA;AACA,KAPA;AAQA,IAAA,oBARA,kCAQA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,WAAA,cAAA,GAAA,CAAA;AACA,KAXA;AAYA,IAAA,eAZA,6BAYA;AACA,WAAA,WAAA,GAAA,CAAA,KAAA,WAAA;AACA,KAdA;AAeA,IAAA,cAfA,0BAeA,KAfA,EAeA,IAfA,EAeA,QAfA,EAeA;AACA,UAAA,CAAA,KAAA,UAAA,EAAA;AACA,aAAA,UAAA,GAAA,IAAA;AACA;;AACA,WAAA,cAAA,GAAA,QAAA,CAAA,CAAA,CAAA,CAAA,UAAA;AACA,KApBA;AAqBA,IAAA,WArBA,uBAqBA,KArBA,EAqBA;AACA,WAAA,UAAA,GAAA,KAAA;AACA,UAAA,OAAA,GAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA;AACA,WAAA,QAAA,CAAA,KAAA,CAAA,OAAA,CAAA,OAAA,IAAA,KAAA,EAAA,CAAA,oBAAA,CAAA;AACA,KAzBA;AA0BA,IAAA,kBA1BA,8BA0BA,IA1BA,EA0BA;AACA,UAAA,KAAA,GAAA,IAAA,CAAA,IAAA,KAAA,UAAA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,IAAA,GAAA,IAAA,GAAA,IAAA,IAAA,CAAA;;AACA,UAAA,CAAA,KAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,CAAA,KAAA,EAAA,CAAA,+BAAA,CAAA;AACA;;AACA,UAAA,CAAA,MAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,CAAA,KAAA,EAAA,CAAA,+BAAA,CAAA;AACA;;AACA,aAAA,KAAA,IAAA,MAAA;AACA;AApCA;AAvBA,CAAA","sourcesContent":["<template>\r\n  <div class=\"upload-drop-container\" :class=\"{ 'upload-drop-container-mini': isMinimized, 'upload-drop-container-max': !isMinimized }\">\r\n    <div class=\"upload-template-info\">\r\n      <i class=\"el-icon-info red-armellini\"></i>&nbsp;\r\n      <span class=\"font-gray info-text\"> {{ $t('uploadXmlFiles.youCanDownload') }} &nbsp;</span>\r\n      <a class=\"red-link-bold\" id=\"xml-upload-download-template-link\" :href=\"templateExampleUrl\" download> {{ $t('uploadXmlFiles.here') }} </a>\r\n    </div>\r\n    <span id=\"xml-loading\" class=\"xml-loading\" v-if=\"processing\">\r\n      <img src=\"@/assets/svg/loading.svg\"  v-bind:class=\"{ 'padding-left_28': actualFileProcessed }\" alt=\"loading\"/>\r\n    </span>\r\n    <div class=\"upload-dropzone-area\" @click=\"handleOpenSearchFile\" :class=\"{ 'upload-dropzone-area-mini': isMinimized, 'upload-dropzone-area-max': !isMinimized }\">\r\n      <i class=\"collapse-drop-zone el-icon-arrow-right\" id=\"collapse-drop-zone\" v-if=\"actualFileProcessed\" v-on:click.stop=\"handleMinimized\" ></i>\r\n      <el-upload\r\n      id=\"upload-xml\"\r\n      class=\"upload-xml\"\r\n      drag\r\n      :show-file-list=\"false\"\r\n      :action=\"url\"\r\n      :headers=\"{shipperAccountNumber: user.shipperAccountNumber,\r\n                  Authorization: authorization}\"\r\n      :on-success=\"handleSuccess\"\r\n      :on-progress=\"handleProgress\"\r\n      :on-error=\"handleError\"\r\n      :before-upload=\"handleBeforeUpload\"\r\n      :limit=\"1\"\r\n      accept=\".xml\"\r\n      ref=\"upload\"\r\n      >\r\n      <div class=\"upload-icon-container\">\r\n        <img src=\"@/assets/png/upload-icon.png\" alt=\"upload-icon\" class=\"upload-icon\">\r\n        <el-progress type=\"circle\" :percentage=\"uploadProgress\" :show-text=\"false\" v-if=\"!isMinimized\">\r\n        </el-progress>\r\n      </div>\r\n      <div class=\"el-upload__text\"> <div class=\"drag-and-drop-text\"> {{ $t('uploadXmlFiles.dragAndDrop') }} </div> {{ $t('uploadXmlFiles.yourFilesOr') }} <em>{{ $t('uploadXmlFiles.browse') }}</em></div>\r\n      </el-upload>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport authService from '@/utils/auth/auth0Service';\r\n\r\nexport default {\r\n  name: 'UploadDrop',\r\n  computed: {\r\n    ...mapGetters([\r\n      'user'\r\n    ])\r\n  },\r\n  data() {\r\n    return {\r\n      isMinimized: false,\r\n      uploadProgress: 0,\r\n      processing: false,\r\n      actualFileProcessed: false,\r\n      url: '',\r\n      templateExampleUrl: '',\r\n      authorization: null\r\n    };\r\n  },\r\n  mounted() {\r\n    this.url = `${process.env.VUE_APP_BASE_API}/data-entry/shipment/upload`;\r\n    this.templateExampleUrl = `${process.env.VUE_APP_BUCKET_ROOT}xml-upload-template.xml`;\r\n    this.authorization = `Bearer ${authService.accessToken}`;\r\n  },\r\n  methods: {\r\n    handleSuccess(response, file) {\r\n      this.$store.dispatch('SetUploadXmlResponse', { ...response, fileName: file.name });\r\n      this.isMinimized = true;\r\n      this.processing = false;\r\n      this.actualFileProcessed = true;\r\n      this.$refs.upload.clearFiles();\r\n    },\r\n    handleOpenSearchFile() {\r\n      this.isMinimized = false;\r\n      this.uploadProgress = 0;\r\n    },\r\n    handleMinimized() {\r\n      this.isMinimized = !this.isMinimized;\r\n    },\r\n    handleProgress(event, file, fileList) {\r\n      if (!this.processing) {\r\n        this.processing = true;\r\n      }\r\n      this.uploadProgress = fileList[0].percentage;\r\n    },\r\n    handleError(error) {\r\n      this.processing = false;\r\n      const message = JSON.parse(error.message);\r\n      this.$message.error(message.message || this.$t('common.errorServer'));\r\n    },\r\n    handleBeforeUpload(file) {\r\n      const isXML = file.type === 'text/xml';\r\n      const isLt5M = file.size / 1024 / 1024 <= 5;\r\n      if (!isXML) {\r\n        this.$message.error(this.$t('uploadXmlFiles.errorExtension'));\r\n      }\r\n      if (!isLt5M) {\r\n        this.$message.error(this.$t('uploadXmlFiles.fileSizeExceed'));\r\n      }\r\n      return isXML && isLt5M;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style rel=\"stylesheet/scss\" lang=\"scss\" >\r\n.upload-drop-container {\r\n  z-index: 1;\r\n  width: 100%;\r\n  height: 70%;\r\n  float: left;\r\n  position: absolute;\r\n  text-align: center;\r\n  bottom: 0px;\r\n  background-color: #374057;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &-mini {\r\n    position: relative;\r\n    height: 16%;\r\n    -webkit-transition: height 1s; /* For Safari 3.1 to 6.0 */\r\n    transition: height 1s;\r\n  }\r\n  &-max {\r\n    position: absolute;\r\n    height: 70%;\r\n    -webkit-transition: height 1s; /* For Safari 3.1 to 6.0 */\r\n    transition: height 1s;\r\n  }\r\n  .is-dragover {\r\n    background-color: #f5f5f5\r\n  }\r\n}\r\n\r\n.upload-template-info {\r\n  z-index: 1;\r\n  position: absolute;\r\n  top: 0px;\r\n  width: 100%;\r\n  height: 30px;\r\n  background-color: #CAD0D9;\r\n  font-size: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 40px;\r\n}\r\n\r\n.xml-loading {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 3;\r\n  background-color: rgba(255,255,255,0.4);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.upload-dropzone-area {\r\n  margin-top: 45px;\r\n  display: flex;\r\n  position: relative;\r\n  .el-upload-dragger {\r\n    border: 0px;\r\n    border-radius: 0px;\r\n    -webkit-transition: height 1s; /* For Safari 3.1 to 6.0 */\r\n    transition: height 1s;\r\n  }\r\n   &-mini {\r\n     margin-top: 35px;\r\n     .collapse-drop-zone {\r\n        margin-bottom: 0px;\r\n     }\r\n    .el-upload-dragger {\r\n      height: 50px;\r\n      width: 100%;\r\n      min-width: 52vw;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      .el-upload__text {\r\n        color: #01355F;\r\n        .drag-and-drop-text {\r\n          margin-left: 10px;\r\n          font-size: 16px;\r\n          font-weight: bold;\r\n          margin-top: 10px;\r\n          text-transform: uppercase;\r\n          display: inline;\r\n        }\r\n        em {\r\n          color: #ED1C25;\r\n          text-decoration: underline;\r\n        }\r\n      }\r\n      .upload-icon-container {\r\n        .upload-icon {\r\n          height: 40px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  &-max {\r\n     .collapse-drop-zone {\r\n        margin-bottom: 3px;\r\n        &:before {\r\n          transform: rotate(90deg);\r\n        }\r\n     }\r\n    .el-upload-dragger {\r\n      height: 260px;\r\n      width: 450px;\r\n      .el-upload__text {\r\n        font-size: 12px;\r\n        color: #01355F;\r\n        .drag-and-drop-text {\r\n          font-size: 18px;\r\n          font-weight: bold;\r\n          margin-top: 10px;\r\n          text-transform: uppercase;\r\n        }\r\n        em {\r\n          color: #ED1C25;\r\n          text-decoration: underline;\r\n        }\r\n      }\r\n      .upload-icon-container {\r\n        margin-top: 10%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        .upload-icon {\r\n          position: absolute;\r\n          height: 60px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .collapse-drop-zone {\r\n    background-color: white;\r\n    padding-top: 18px;\r\n    padding-left: 10px;\r\n    cursor: pointer;\r\n    -webkit-transition: height 1s; /* For Safari 3.1 to 6.0 */\r\n    transition: height 1s;\r\n  }\r\n}\r\n.padding-left_28 {\r\n  padding-left: 28px;\r\n}\r\n\r\n@media only screen and (max-width: 540px) {\r\n    .upload-dropzone-area {\r\n      .el-upload-dragger {\r\n        width: 340px;\r\n      }\r\n    }\r\n}\r\n\r\n@media only screen and (max-height: 540px) {\r\n    .upload-drop-container-mini {\r\n        position: relative;\r\n    }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/warehouse/uploadXml"}]}