{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/eslint-loader/index.js??ref--13-0!/home/spineor/Downloads/aelis4-web/vue-client/src/store/modules/warehouse/uploadXml.js","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/store/modules/warehouse/uploadXml.js","mtime":1566984596000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var collapsibleElement = 'xml-upload-response-collapsible';\nvar uploadXml = {\n  state: {\n    response: {\n      header: {},\n      details: [],\n      activeElement: []\n    }\n  },\n  mutations: {\n    SET_XML_RESPONSE: function SET_XML_RESPONSE(state, response) {\n      if (response) {\n        state.response.details = response.ResponseDetail || [];\n        state.response.header.fileName = response.fileName;\n        state.response.header.orderNumber = response.ResponseHeader.orderNumber;\n        state.response.header.shipdate = response.ResponseHeader.Shipdate;\n        state.response.header.shipper = response.ResponseHeader.Shipper;\n        state.response.header.totalUnitsInFile = response.ResponseHeader.totalUnitsInFile || 'N/A';\n        state.response.header.totalUnitsSuccess = response.ResponseHeader.totalUnitsSuccess || '0';\n        state.response.header.totalUnitsDuplicates = response.ResponseHeader.totalUnitsDuplicates || '0';\n        state.response.header.totalUnitsDiscrepancy = response.ResponseHeader.totalUnitsDiscrepancy || '0';\n        state.response.header.errorMessage = response.ResponseHeader.errorMessage;\n        state.response.activeElement = [collapsibleElement];\n      }\n    },\n    CLEAR_XML_RESPONSE: function CLEAR_XML_RESPONSE(state) {\n      state.response.details = [];\n      state.response.header = {};\n      state.response.activeElement = [];\n    }\n  },\n  actions: {\n    SetUploadXmlResponse: function SetUploadXmlResponse(_ref, response) {\n      var commit = _ref.commit;\n      commit('SET_XML_RESPONSE', response);\n    },\n    clearXmlResponse: function clearXmlResponse(_ref2) {\n      var commit = _ref2.commit;\n      commit('CLEAR_XML_RESPONSE');\n    }\n  }\n};\nexport default uploadXml;",{"version":3,"sources":["/home/spineor/Downloads/aelis4-web/vue-client/src/store/modules/warehouse/uploadXml.js"],"names":["collapsibleElement","uploadXml","state","response","header","details","activeElement","mutations","SET_XML_RESPONSE","ResponseDetail","fileName","orderNumber","ResponseHeader","shipdate","Shipdate","shipper","Shipper","totalUnitsInFile","totalUnitsSuccess","totalUnitsDuplicates","totalUnitsDiscrepancy","errorMessage","CLEAR_XML_RESPONSE","actions","SetUploadXmlResponse","commit","clearXmlResponse"],"mappings":"AAAA,IAAMA,kBAAkB,GAAG,iCAA3B;AACA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,MAAM,EAAE,EADA;AAERC,MAAAA,OAAO,EAAE,EAFD;AAGRC,MAAAA,aAAa,EAAE;AAHP;AADL,GADS;AAQhBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,gBAAgB,EAAE,0BAACN,KAAD,EAAQC,QAAR,EAAqB;AACrC,UAAIA,QAAJ,EAAc;AACZD,QAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,GAAyBF,QAAQ,CAACM,cAAT,IAA2B,EAApD;AACAP,QAAAA,KAAK,CAACC,QAAN,CAAeC,MAAf,CAAsBM,QAAtB,GAAiCP,QAAQ,CAACO,QAA1C;AACAR,QAAAA,KAAK,CAACC,QAAN,CAAeC,MAAf,CAAsBO,WAAtB,GAAoCR,QAAQ,CAACS,cAAT,CAAwBD,WAA5D;AACAT,QAAAA,KAAK,CAACC,QAAN,CAAeC,MAAf,CAAsBS,QAAtB,GAAiCV,QAAQ,CAACS,cAAT,CAAwBE,QAAzD;AACAZ,QAAAA,KAAK,CAACC,QAAN,CAAeC,MAAf,CAAsBW,OAAtB,GAAgCZ,QAAQ,CAACS,cAAT,CAAwBI,OAAxD;AACAd,QAAAA,KAAK,CAACC,QAAN,CAAeC,MAAf,CAAsBa,gBAAtB,GAAyCd,QAAQ,CAACS,cAAT,CAAwBK,gBAAxB,IAA4C,KAArF;AACAf,QAAAA,KAAK,CAACC,QAAN,CAAeC,MAAf,CAAsBc,iBAAtB,GAA0Cf,QAAQ,CAACS,cAAT,CAAwBM,iBAAxB,IAA6C,GAAvF;AACAhB,QAAAA,KAAK,CAACC,QAAN,CAAeC,MAAf,CAAsBe,oBAAtB,GAA6ChB,QAAQ,CAACS,cAAT,CAAwBO,oBAAxB,IAAgD,GAA7F;AACAjB,QAAAA,KAAK,CAACC,QAAN,CAAeC,MAAf,CAAsBgB,qBAAtB,GAA8CjB,QAAQ,CAACS,cAAT,CAAwBQ,qBAAxB,IAAiD,GAA/F;AACAlB,QAAAA,KAAK,CAACC,QAAN,CAAeC,MAAf,CAAsBiB,YAAtB,GAAqClB,QAAQ,CAACS,cAAT,CAAwBS,YAA7D;AACAnB,QAAAA,KAAK,CAACC,QAAN,CAAeG,aAAf,GAA+B,CAACN,kBAAD,CAA/B;AACD;AACF,KAfQ;AAgBTsB,IAAAA,kBAAkB,EAAE,4BAACpB,KAAD,EAAW;AAC7BA,MAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,GAAyB,EAAzB;AACAH,MAAAA,KAAK,CAACC,QAAN,CAAeC,MAAf,GAAwB,EAAxB;AACAF,MAAAA,KAAK,CAACC,QAAN,CAAeG,aAAf,GAA+B,EAA/B;AACD;AApBQ,GARK;AA8BhBiB,EAAAA,OAAO,EAAE;AACPC,IAAAA,oBAAoB,EAAE,oCAAarB,QAAb,EAA0B;AAAA,UAAvBsB,MAAuB,QAAvBA,MAAuB;AAC9CA,MAAAA,MAAM,CAAC,kBAAD,EAAqBtB,QAArB,CAAN;AACD,KAHM;AAIPuB,IAAAA,gBAAgB,EAAE,iCAAgB;AAAA,UAAbD,MAAa,SAAbA,MAAa;AAChCA,MAAAA,MAAM,CAAC,oBAAD,CAAN;AACD;AANM;AA9BO,CAAlB;AAwCA,eAAexB,SAAf","sourcesContent":["const collapsibleElement = 'xml-upload-response-collapsible';\nconst uploadXml = {\n  state: {\n    response: {\n      header: {},\n      details: [],\n      activeElement: []\n    }\n  },\n  mutations: {\n    SET_XML_RESPONSE: (state, response) => {\n      if (response) {\n        state.response.details = response.ResponseDetail || [];\n        state.response.header.fileName = response.fileName;\n        state.response.header.orderNumber = response.ResponseHeader.orderNumber;\n        state.response.header.shipdate = response.ResponseHeader.Shipdate;\n        state.response.header.shipper = response.ResponseHeader.Shipper;\n        state.response.header.totalUnitsInFile = response.ResponseHeader.totalUnitsInFile || 'N/A';\n        state.response.header.totalUnitsSuccess = response.ResponseHeader.totalUnitsSuccess || '0';\n        state.response.header.totalUnitsDuplicates = response.ResponseHeader.totalUnitsDuplicates || '0';\n        state.response.header.totalUnitsDiscrepancy = response.ResponseHeader.totalUnitsDiscrepancy || '0';\n        state.response.header.errorMessage = response.ResponseHeader.errorMessage;\n        state.response.activeElement = [collapsibleElement];\n      }\n    },\n    CLEAR_XML_RESPONSE: (state) => {\n      state.response.details = [];\n      state.response.header = {};\n      state.response.activeElement = [];\n    }\n  },\n  actions: {\n    SetUploadXmlResponse: ({ commit }, response) => {\n      commit('SET_XML_RESPONSE', response);\n    },\n    clearXmlResponse: ({ commit }) => {\n      commit('CLEAR_XML_RESPONSE');\n    }\n  }\n};\n\nexport default uploadXml;\n"]}]}