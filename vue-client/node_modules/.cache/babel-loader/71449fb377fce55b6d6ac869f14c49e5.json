{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/orderEntry/TableSummaryExtensions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/orderEntry/TableSummaryExtensions.vue","mtime":1566297892000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport constants from '@/utils/constants';\nimport SubmitExtensionButton from '@/views/warehouse/orderEntry/components/extensions/SubmitExtensionButton';\nexport default {\n  name: 'TableSummary',\n  components: {\n    SubmitExtensionButton: SubmitExtensionButton\n  },\n  computed: _objectSpread({}, mapGetters(['orderEntry', 'extensions'])),\n  data: function data() {\n    return {\n      sizes: constants.TABLES.DEFAULT_LIMIT_SIZES,\n      finalizedId: constants.ORDER_ENTRY.ORDER_STATUS[2].value,\n      extensionStatus: constants.ORDER_ENTRY.EXTENSION_STATUS,\n      extensionStatusRejected: constants.ORDER_ENTRY.EXTENSION_STATUS[2].index\n    };\n  },\n  methods: {\n    handleSearchChangePage: function handleSearchChangePage(val) {\n      this.$store.dispatch('orderEntry/search', {\n        page: val\n      });\n    },\n    handleSearchChangeLimit: function handleSearchChangeLimit(val) {\n      this.$store.dispatch('orderEntry/search', {\n        rows: val,\n        page: constants.TABLES.DEFAULT_PAGE\n      });\n    },\n    handleSortChange: function handleSortChange(data) {\n      var prop = data.prop;\n      var order = data.order;\n      prop = constants.TABLES.ORDER_ENTRY.COLUMNS_MAP_SORT[prop] || prop;\n      this.$store.dispatch('orderEntry/search', {\n        orderField: prop,\n        orderDirection: constants.TABLES.ORDER_DIRECTION[order]\n      });\n    },\n    showCheckbox: function showCheckbox(status, numberUnits, numberUnitsReceived, lastExtensionStatus) {\n      // Only Show Checkbox when status is finalized, the consolidation has units pending to receive.\n      // And This one does not have an extension, or if you have the status rejected (This check will not appear if you have an extension pending or approved).\n      var isStatusFinalized = status === this.finalizedId;\n      var hasUnitsPendingToReceive = numberUnits > numberUnitsReceived;\n      var noExtensionOrExtensionRejected = lastExtensionStatus === null || lastExtensionStatus === undefined || lastExtensionStatus === this.extensionStatusRejected;\n      return isStatusFinalized && hasUnitsPendingToReceive && noExtensionOrExtensionRejected;\n    },\n    isCheckedExtension: function isCheckedExtension(consigneeAccountId, consolidationId) {\n      if (Object.prototype.hasOwnProperty.call(this.extensions.selectedByConsignee, consigneeAccountId)) {\n        var consolidationSelectedExists = this.extensions.selectedByConsignee[consigneeAccountId].consolidations.find(function (c) {\n          return c.id === consolidationId;\n        });\n\n        if (consolidationSelectedExists && consolidationSelectedExists.total === consolidationSelectedExists.totalChecked) {\n          return true;\n        }\n\n        return false;\n      }\n\n      return false;\n    },\n    isIndeterminate: function isIndeterminate(consigneeAccountId, consolidationId) {\n      if (Object.prototype.hasOwnProperty.call(this.extensions.selectedByConsignee, consigneeAccountId)) {\n        var consolidationSelectedExists = this.extensions.selectedByConsignee[consigneeAccountId].consolidations.find(function (c) {\n          return c.id === consolidationId;\n        });\n\n        if (consolidationSelectedExists && consolidationSelectedExists.total !== consolidationSelectedExists.totalChecked) {\n          return true;\n        }\n\n        return false;\n      }\n\n      return false;\n    },\n    handleUpdateSelectedConsolidate: function handleUpdateSelectedConsolidate(consolidation) {\n      var consolidationSelected = {\n        consigneeAccountId: consolidation.consigneeAccountId,\n        consigneeAccountName: consolidation.consigneeName,\n        consolidateId: consolidation.id,\n        consolidateTotal: consolidation.numberUnits - consolidation.numberUnitsReceived\n      };\n      this.$store.dispatch('extensions/updateSelectedConsolidate', consolidationSelected);\n    },\n    cancelExtension: function () {\n      var _cancelExtension = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var confirmCancelExtension;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$confirm(this.$t('warehouse.orderEntry.extensions.confirmCancel'), {\n                  confirmButtonText: this.$t('common.yes')\n                }).catch(function () {});\n\n              case 2:\n                confirmCancelExtension = _context.sent;\n\n                if (confirmCancelExtension) {\n                  this.$store.dispatch('extensions/clearSelectedByConsignee');\n                  this.$store.dispatch('orderEntry/setFilterShipDateDisabled', false);\n                  this.$store.dispatch('orderEntry/setIsCreatingExtension', false);\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function cancelExtension() {\n        return _cancelExtension.apply(this, arguments);\n      }\n\n      return cancelExtension;\n    }()\n  },\n  mounted: function mounted() {\n    this.$store.dispatch('orderEntry/setFilterShipDateDisabled', true);\n  }\n};",{"version":3,"sources":["TableSummaryExtensions.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"order-table-container order-extensions-container bg-white\">\r\n        <div class=\"default-section-header\">\r\n          <div class=\"default-section-title\"> {{ $t('warehouse.orderEntry.extensions.titleSummary') }} </div>\r\n          <div class=\"default-section-actions\">\r\n              <el-button type=\"default\" size=\"mini\" @click=\"cancelExtension()\"> {{ $t('common.cancel') }} </el-button>\r\n              <submit-extension-button />\r\n          </div>\r\n        </div>\r\n        <div class=\"order-table\">\r\n            <div class=\"height-100-p\">\r\n                <el-table\r\n                    :data=\"orderEntry.list\"\r\n                    v-loading=\"orderEntry.loadingSearch\"\r\n                    id=\"order-data-list\"\r\n                    size=\"mini\"\r\n                    tooltip-effect=\"dark\"\r\n                    sortable\r\n                    class=\"dark-blue-table\"\r\n                    :empty-text=\"$t('common.notAbleToFindRecords')\"\r\n                    @sort-change=\"handleSortChange\"\r\n                    stripe>\r\n                    <el-table-column\r\n                        prop=\"orderNumber\"\r\n                        sortable=\"custom\"\r\n                        :min-width=\"15\"\r\n                        align=\"center\"\r\n                        :label=\"$t('warehouse.orderEntry.orderNumberShort')\">\r\n                        <template slot-scope=\"scope\">\r\n                        <el-tooltip class=\"item\" effect=\"dark\" :content=\"scope.row.orderNumber\" placement=\"top\">\r\n                            <span> {{ scope.row.orderNumber }} </span>\r\n                        </el-tooltip>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"consignee\"\r\n                        sortable=\"custom\"\r\n                        :min-width=\"30\"\r\n                        :label=\"$t('warehouse.orderEntry.consignee')\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-tooltip class=\"item\" effect=\"dark\" :content=\"`${scope.row.consigneeName} - ${ scope.row.consigneeAccount }`\" placement=\"top\">\r\n                            <span> {{ scope.row.consigneeName }} - {{ scope.row.consigneeAccount }}</span>\r\n                            </el-tooltip>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        :min-width=\"10\"\r\n                        prop=\"unitOfMeasureName\"\r\n                        :label=\"$t('warehouse.orderEntry.unitOfMeasureShort')\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        :min-width=\"8\"\r\n                        prop=\"numberUnits\"\r\n                        :label=\"$t('warehouse.orderEntry.numberOfUnitsShort')\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        :min-width=\"10\"\r\n                        prop=\"measure\"\r\n                        :label=\"$t('warehouse.orderEntry.measure')\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"length\"\r\n                        :min-width=\"8\"\r\n                        :label=\"$t('warehouse.orderEntry.length')\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"width\"\r\n                        :min-width=\"8\"\r\n                        :label=\"$t('warehouse.orderEntry.width')\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"height\"\r\n                        :min-width=\"8\"\r\n                        :label=\"$t('warehouse.orderEntry.height')\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        :min-width=\"10\"\r\n                        prop=\"productCode\"\r\n                        :label=\"$t('warehouse.orderEntry.product')\">\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        prop=\"productDescription\"\r\n                        sortable=\"custom\"\r\n                        :min-width=\"23\"\r\n                        :label=\"$t('warehouse.orderEntry.productDescription')\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-tooltip class=\"item\" effect=\"dark\" :content=\"scope.row.productDescription\" placement=\"top\">\r\n                            <span> {{ scope.row.productDescription }} </span>\r\n                            </el-tooltip>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        :min-width=\"8\"\r\n                        prop=\"poNumber\"\r\n                        :label=\"$t('warehouse.orderEntry.poNumber')\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-tooltip class=\"item\" effect=\"dark\" :content=\"scope.row.poNumber\" placement=\"top\">\r\n                            <span> {{ scope.row.poNumber }} </span>\r\n                            </el-tooltip>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        :min-width=\"15\"\r\n                        prop=\"farmName\"\r\n                        :label=\"$t('warehouse.orderEntry.farmBroker')\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-tooltip class=\"item\" effect=\"dark\" :content=\"scope.row.farmName\" placement=\"top\">\r\n                            <span> {{ scope.row.farmName }} </span>\r\n                            </el-tooltip>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column\r\n                        align=\"center\"\r\n                        :min-width=\"9\"\r\n                        prop=\"status\"\r\n                        :label=\"$t('warehouse.orderEntry.finalized')\">\r\n                        <template slot-scope=\"scope\">\r\n                        <span class=\"icon-status-span\">\r\n                            <i v-if=\"scope.row.status === finalizedId\" class=\"el-icon-success green-success\"></i>\r\n                        </span>\r\n                        <span class=\"icon-status-span\">\r\n                          <el-tooltip v-if=\"scope.row.lastExtensionNumber\" class=\"item\" effect=\"dark\" :content=\"`${extensionStatus[scope.row.lastExtensionStatus].name} - ${scope.row.lastExtensionNumber}`\" placement=\"top-start\">\r\n                              <i class=\"far fa-clock\"  :class=\"extensionStatus[scope.row.lastExtensionStatus].colorCssClass\"></i>\r\n                          </el-tooltip>\r\n                        </span>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column  :min-width=\"15\" :label=\"$t('warehouse.orderEntry.extensions.requestExtension')\" align=\"center\" class-name=\"fixed-width\">\r\n                    <template slot-scope=\"scope\">\r\n                        <span v-if=\"showCheckbox(scope.row.status, scope.row.numberUnits, scope.row.numberUnitsReceived, scope.row.lastExtensionStatus)\">\r\n                            <el-checkbox :value=\"isCheckedExtension(scope.row.consigneeAccountId, scope.row.id)\" :indeterminate=\"isIndeterminate(scope.row.consigneeAccountId, scope.row.id)\" @change=\"handleUpdateSelectedConsolidate(scope.row)\" label=\"\" class=\"green-indeterminate-checkbox\"></el-checkbox>\r\n                        </span>\r\n                    </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n                <el-pagination v-show=\"orderEntry.total > 0\"\r\n                @size-change=\"handleSearchChangeLimit\"\r\n                :page-sizes=\"sizes\"\r\n                :page-size=\"orderEntry.actualFilters.rows\"\r\n                :current-page.sync=\"orderEntry.actualFilters.page\"\r\n                @current-change=\"handleSearchChangePage\"\r\n                layout=\"total, sizes, prev, pager, next, jumper\"\r\n                :total=\"orderEntry.total\">\r\n                </el-pagination>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport constants from '@/utils/constants';\r\nimport SubmitExtensionButton from '@/views/warehouse/orderEntry/components/extensions/SubmitExtensionButton';\r\n\r\nexport default {\r\n  name: 'TableSummary',\r\n  components: { SubmitExtensionButton },\r\n  computed: {\r\n    ...mapGetters([\r\n      'orderEntry',\r\n      'extensions'\r\n    ])\r\n  },\r\n  data() {\r\n    return {\r\n      sizes: constants.TABLES.DEFAULT_LIMIT_SIZES,\r\n      finalizedId: constants.ORDER_ENTRY.ORDER_STATUS[2].value,\r\n      extensionStatus: constants.ORDER_ENTRY.EXTENSION_STATUS,\r\n      extensionStatusRejected: constants.ORDER_ENTRY.EXTENSION_STATUS[2].index\r\n    };\r\n  },\r\n  methods: {\r\n    handleSearchChangePage(val) {\r\n      this.$store.dispatch('orderEntry/search', { page: val });\r\n    },\r\n    handleSearchChangeLimit(val) {\r\n      this.$store.dispatch('orderEntry/search', { rows: val, page: constants.TABLES.DEFAULT_PAGE });\r\n    },\r\n    handleSortChange(data) {\r\n      let { prop } = data;\r\n      const { order } = data;\r\n      prop = constants.TABLES.ORDER_ENTRY.COLUMNS_MAP_SORT[prop] || prop;\r\n      this.$store.dispatch('orderEntry/search', { orderField: prop, orderDirection: constants.TABLES.ORDER_DIRECTION[order] });\r\n    },\r\n    showCheckbox(status, numberUnits, numberUnitsReceived, lastExtensionStatus) {\r\n      // Only Show Checkbox when status is finalized, the consolidation has units pending to receive.\r\n      // And This one does not have an extension, or if you have the status rejected (This check will not appear if you have an extension pending or approved).\r\n      const isStatusFinalized = status === this.finalizedId;\r\n      const hasUnitsPendingToReceive = numberUnits > numberUnitsReceived;\r\n      const noExtensionOrExtensionRejected = (lastExtensionStatus === null || lastExtensionStatus === undefined) || lastExtensionStatus === this.extensionStatusRejected;\r\n      return isStatusFinalized && hasUnitsPendingToReceive && noExtensionOrExtensionRejected;\r\n    },\r\n    isCheckedExtension(consigneeAccountId, consolidationId) {\r\n      if (Object.prototype.hasOwnProperty.call(this.extensions.selectedByConsignee, consigneeAccountId)) {\r\n        const consolidationSelectedExists = this.extensions.selectedByConsignee[consigneeAccountId].consolidations.find(c => c.id === consolidationId);\r\n        if (consolidationSelectedExists && consolidationSelectedExists.total === consolidationSelectedExists.totalChecked) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      return false;\r\n    },\r\n    isIndeterminate(consigneeAccountId, consolidationId) {\r\n      if (Object.prototype.hasOwnProperty.call(this.extensions.selectedByConsignee, consigneeAccountId)) {\r\n        const consolidationSelectedExists = this.extensions.selectedByConsignee[consigneeAccountId].consolidations.find(c => c.id === consolidationId);\r\n        if (consolidationSelectedExists && consolidationSelectedExists.total !== consolidationSelectedExists.totalChecked) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      return false;\r\n    },\r\n    handleUpdateSelectedConsolidate(consolidation) {\r\n      const consolidationSelected = {\r\n        consigneeAccountId: consolidation.consigneeAccountId,\r\n        consigneeAccountName: consolidation.consigneeName,\r\n        consolidateId: consolidation.id,\r\n        consolidateTotal: consolidation.numberUnits - consolidation.numberUnitsReceived\r\n      };\r\n      this.$store.dispatch('extensions/updateSelectedConsolidate', consolidationSelected);\r\n    },\r\n    async cancelExtension() {\r\n      const confirmCancelExtension = await this.$confirm(this.$t('warehouse.orderEntry.extensions.confirmCancel'), { confirmButtonText: this.$t('common.yes') }).catch(() => {});\r\n      if (confirmCancelExtension) {\r\n        this.$store.dispatch('extensions/clearSelectedByConsignee');\r\n        this.$store.dispatch('orderEntry/setFilterShipDateDisabled', false);\r\n        this.$store.dispatch('orderEntry/setIsCreatingExtension', false);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch('orderEntry/setFilterShipDateDisabled', true);\r\n  }\r\n};\r\n</script>\r\n\r\n<style rel=\"stylesheet/scss\" lang=\"scss\">\r\n.order-extensions-container {\r\n    box-shadow: 0px 0px 7px 4px #dfdede;\r\n    .icon-details-extensions {\r\n      margin-left: 10px;\r\n      i {\r\n        font-size: 15px !important;\r\n      }\r\n    }\r\n}\r\n\r\n</style>\r\n"],"sourceRoot":"src/views/warehouse/orderEntry"}]}