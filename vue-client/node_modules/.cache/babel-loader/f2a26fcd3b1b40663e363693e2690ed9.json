{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/thread-loader/dist/cjs.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/orderEntry/TableSummary.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/orderEntry/TableSummary.vue","mtime":1564385803006},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Message } from 'element-ui';\nimport moment from 'moment';\nimport { mapGetters } from 'vuex';\nimport constants from '@/utils/constants';\nimport apiConstants from '@/utils/apiConstants';\nimport Autocomplete from '@/components/Autocomplete';\nimport UnitsDetailDialog from \"./components/unitsDetail/UnitsDetailDialog\";\nimport PrintUnitConsolidateLabel from \"./components/tableSummary/PrintUnitConsolidateLabel\";\nexport default {\n  name: 'TableSummary',\n  components: {\n    Autocomplete: Autocomplete,\n    UnitsDetailDialog: UnitsDetailDialog,\n    PrintUnitConsolidateLabel: PrintUnitConsolidateLabel\n  },\n  computed: _objectSpread({}, mapGetters(['orderEntry'])),\n  filters: {\n    statusFilterType: function statusFilterType(id) {\n      return constants.ORDER_ENTRY.ORDER_STATUS.find(function (status) {\n        return status.value === id;\n      }).typeCss;\n    }\n  },\n  data: function data() {\n    return {\n      editForm: {\n        id: null,\n        shipDate: null,\n        consigneeAccountId: null,\n        unitOfMeasureName: null,\n        measure: null,\n        numberUnits: null,\n        length: null,\n        width: null,\n        height: null,\n        productCode: '',\n        productDescription: '',\n        poNumber: '',\n        farmName: ''\n      },\n      editFormRules: {\n        consigneeAccountId: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.consigneeRequired'),\n          trigger: 'submit'\n        }],\n        length: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.lengthRequired'),\n          trigger: 'blur'\n        }],\n        width: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.widthRequired'),\n          trigger: 'blur'\n        }],\n        height: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.heightRequired'),\n          trigger: 'blur'\n        }]\n      },\n      finalizedId: constants.ORDER_ENTRY.ORDER_STATUS[2].value,\n      unitOfMeasureOptions: constants.ORDER_ENTRY.UNIT_OF_MEASURE_LIST,\n      measureOptions: constants.ORDER_ENTRY.MEASURE_LIST,\n      urlConsignee: apiConstants.END_POINTS.ACCOUNTS.CONSIGNEE_BY_SHIPPER,\n      urlProduct: apiConstants.END_POINTS.PRODUCT_SEARCH,\n      sizes: constants.TABLES.DEFAULT_LIMIT_SIZES\n    };\n  },\n  methods: {\n    handleSearchChangePage: function handleSearchChangePage(val) {\n      this.$store.dispatch('orderEntry/search', {\n        page: val\n      });\n    },\n    handleSearchChangeLimit: function handleSearchChangeLimit(val) {\n      this.$store.dispatch('orderEntry/search', {\n        rows: val,\n        page: constants.TABLES.DEFAULT_PAGE\n      });\n    },\n    handleSortChange: function handleSortChange(data) {\n      var prop = data.prop;\n      var order = data.order;\n      prop = constants.TABLES.ORDER_ENTRY.COLUMNS_MAP_SORT[prop] || prop;\n      this.$store.dispatch('orderEntry/search', {\n        orderField: prop,\n        orderDirection: constants.TABLES.ORDER_DIRECTION[order]\n      });\n    },\n    handleEdit: function handleEdit(row) {\n      var _this = this;\n\n      this.$store.dispatch('orderEntry/setEditingRow', true);\n      row.edit = true;\n      this.editForm.id = row.id;\n      this.editForm.shipDate = row.shipDate;\n      this.editForm.consigneeAccountId = row.consigneeAccountId;\n      this.editForm.shipperAccountId = row.shipperAccountId;\n      this.editForm.unitOfMeasureName = row.unitOfMeasureName;\n      this.editForm.measure = row.measure;\n      this.editForm.numberUnits = row.numberUnits;\n      this.editForm.length = row.length;\n      this.editForm.width = row.width;\n      this.editForm.height = row.height;\n      this.editForm.productCode = row.productCode;\n      this.editForm.productDescription = row.productDescription;\n      this.editForm.poNumber = row.poNumber;\n      this.editForm.farmName = row.farmName;\n      this.editForm.status = row.status;\n      this.$nextTick(function () {\n        _this.$refs['row-consignee'].setLocalModel(\"\".concat(row.consigneeName, \" - \").concat(row.consigneeAccount));\n\n        _this.$refs['row-productCode'].setLocalModel(row.productCode);\n\n        if (_this.$refs['row-consignee'].$el) {\n          _this.$refs['row-consignee'].$el.getElementsByTagName('input')[0].focus();\n        }\n      });\n    },\n    handleUpdate: function () {\n      var _handleUpdate = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var minValue, _this$editForm, length, height, width, measure, volume, message, confirm, _message;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                minValue = this.orderEntry.settings.minCubesPerBox;\n                _this$editForm = this.editForm, length = _this$editForm.length, height = _this$editForm.height, width = _this$editForm.width;\n                measure = this.editForm.measure;\n\n                if (measure === constants.ORDER_ENTRY.MEASURE_LIST[1].value) {\n                  length *= constants.ORDER_ENTRY.CONST_VALUE;\n                  width *= constants.ORDER_ENTRY.CONST_VALUE;\n                  height *= constants.ORDER_ENTRY.CONST_VALUE;\n                }\n\n                volume = length * width * height;\n\n                if (!(volume <= minValue)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                message = this.$t('warehouse.orderEntry.error.minValueValidationError');\n                message = message.replace('[unit]', this.editForm.numberUnits).replace('[minValue]', minValue);\n                _context.next = 10;\n                return this.$confirm(message, {\n                  confirmButtonText: this.$t('OK')\n                });\n\n              case 10:\n                confirm = _context.sent;\n\n                if (!confirm) {\n                  _context.next = 13;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.getSubmitForm());\n\n              case 13:\n                return _context.abrupt(\"return\", false);\n\n              case 14:\n                if (!(volume > constants.ORDER_ENTRY.MAX_VALUE)) {\n                  _context.next = 19;\n                  break;\n                }\n\n                _message = this.$t('warehouse.orderEntry.error.maxValueValidationError');\n                _message = _message.replace('[minValue]', minValue).replace('[max_value]', constants.ORDER_ENTRY.MAX_VALUE);\n                this.$message.warning(_message);\n                return _context.abrupt(\"return\", false);\n\n              case 19:\n                return _context.abrupt(\"return\", this.getSubmitForm());\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleUpdate() {\n        return _handleUpdate.apply(this, arguments);\n      }\n\n      return handleUpdate;\n    }(),\n    clearEdit: function clearEdit() {\n      this.$store.dispatch('orderEntry/setEditingRow', false);\n      this.$refs.editForm.resetFields();\n      this.$refs['row-consignee'].clearLocalModel();\n      this.$refs['row-productCode'].clearLocalModel();\n    },\n    cancelEdit: function cancelEdit(row) {\n      row.edit = false;\n      this.clearEdit();\n    },\n    handleDelete: function handleDelete(id, numberUnits, shipDate) {\n      var _this2 = this;\n\n      var message = this.$t('warehouse.orderEntry.deleteConfirmation');\n      message = message.replace('[numberUnits]', numberUnits);\n      message = message.replace('[shipDate]', moment(shipDate, constants.DATES.DEFAULT_BACKEND_FORMAT).format(constants.DATES.DEFAULT_DISPLAY_FORMAT));\n      return this.$confirm(message, {\n        confirmButtonText: this.$t('common.yes')\n      }).then(function () {\n        Message.closeAll();\n\n        var loading = _this2.$loadingthis.orderEntry(constants.LOADING.DEFAULT_CONFIG);\n\n        _this2.$storethis.orderEntry.dispatch('orderEntry/deletthis.orderEntrye', id).then(function (response) {\n          loading.close();\n\n          _this2.$message.success(response.message);\n\n          _this2.$store.dispatch('orderEntry/search', {});\n        }).catch(function () {\n          loading.close();\n        });\n      }).catch(function () {});\n    },\n    showEditButton: function showEditButton(orderStatus) {\n      var hasEditPermission = this.$can(this.permissions.DATA_ENTRY.EDIT_AFTER_CUTOFF_FINALIZED, orderStatus) || this.$can(this.permissions.DATA_ENTRY.EDIT_AFTER_CUTOFF_PENDING, orderStatus) || this.$can(this.permissions.DATA_ENTRY.EDIT_BEFORE_CUTOFF_FINALIZED, orderStatus) || this.$can(this.permissions.DATA_ENTRY.EDIT_BEFORE_CUTOFF_PENDING, orderStatus);\n      return !this.orderEntry.isEditingRow && hasEditPermission;\n    },\n    showDeleteButton: function showDeleteButton(orderStatus) {\n      var hasDeletePermission = this.$can(this.permissions.DATA_ENTRY.DELETE_AFTER_CUTOFF_FINALIZED, orderStatus) || this.$can(this.permissions.DATA_ENTRY.DELETE_AFTER_CUTOFF_PENDING, orderStatus) || this.$can(this.permissions.DATA_ENTRY.DELETE_BEFORE_CUTOFF_FINALIZED, orderStatus) || this.$can(this.permissions.DATA_ENTRY.DELETE_BEFORE_CUTOFF_PENDING, orderStatus);\n      return hasDeletePermission;\n    },\n    getSubmitForm: function getSubmitForm() {\n      var _this3 = this;\n\n      this.$refs.editForm.validate(function (valid, validationsErrors) {\n        if (valid) {\n          Message.closeAll();\n\n          var loading = _this3.$loading(constants.LOADING.DEFAULT_CONFIG);\n\n          _this3.$store.dispatch('orderEntry/update', {\n            unitsConsolidateId: _this3.editForm.id,\n            orderToUpdate: _this3.editForm\n          }).then(function (response) {\n            loading.close();\n\n            _this3.$message.success(response.message);\n\n            _this3.clearEdit();\n\n            _this3.$store.dispatch('orderEntry/search', {});\n          }).catch(function () {\n            loading.close();\n          });\n        } else {\n          var errorMessage = '';\n          Object.keys(validationsErrors).forEach(function (key) {\n            validationsErrors[key].forEach(function (validation) {\n              errorMessage += \"\".concat(validation.message, \". \");\n            });\n          });\n\n          _this3.$message.warning(errorMessage);\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["TableSummary.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"height-100-p\">\n    <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editForm\">\n      <el-table\n        :data=\"orderEntry.list\"\n        v-loading=\"orderEntry.loadingSearch\"\n        id=\"order-data-list\"\n        size=\"mini\"\n        tooltip-effect=\"dark\"\n        sortable\n        class=\"dark-blue-table\"\n        :empty-text=\"$t('common.notAbleToFindRecords')\"\n        @sort-change=\"handleSortChange\"\n        stripe\n      >\n        <el-table-column\n          prop=\"orderNumber\"\n          sortable=\"custom\"\n          :min-width=\"15\"\n          align=\"center\"\n          :label=\"$t('warehouse.orderEntry.orderNumberShort')\"\n        >\n          <template slot-scope=\"scope\">\n            <el-tooltip class=\"item\" effect=\"dark\" :content=\"scope.row.orderNumber\" placement=\"top\">\n              <span>{{ scope.row.orderNumber }}</span>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n        <el-table-column\n          prop=\"consignee\"\n          sortable=\"custom\"\n          :min-width=\"30\"\n          :label=\"$t('warehouse.orderEntry.consignee')\"\n        >\n          <template slot-scope=\"scope\">\n            <template v-if=\"scope.row.edit\">\n              <el-form-item prop=\"consigneeAccountId\">\n                <autocomplete\n                  :model.sync=\"editForm.consigneeAccountId\"\n                  :shipperAccountId=\"orderEntry.settings.shipperAccountId\"\n                  labelFieldLastWithDash=\"number\"\n                  popperAppendToBody\n                  :url=\"urlConsignee\"\n                  labelField=\"name\"\n                  valueField=\"id\"\n                  id=\"row-consignee\"\n                  ref=\"row-consignee\"\n                />\n              </el-form-item>\n            </template>\n            <template v-else>\n              <el-tooltip\n                class=\"item\"\n                effect=\"dark\"\n                :content=\"`${scope.row.consigneeName} - ${ scope.row.consigneeAccount }`\"\n                placement=\"top\"\n              >\n                <span>{{ scope.row.consigneeName }} - {{ scope.row.consigneeAccount }}</span>\n              </el-tooltip>\n            </template>\n          </template>\n        </el-table-column>\n        <el-table-column\n          :min-width=\"10\"\n          prop=\"unitOfMeasure\"\n          :label=\"$t('warehouse.orderEntry.unitOfMeasureShort')\"\n        >\n          <template slot-scope=\"scope\">\n            <template v-if=\"scope.row.edit\">\n              <el-form-item prop=\"unitOfMeasureName\">\n                <el-select\n                  v-model=\"editForm.unitOfMeasureName\"\n                  id=\"row-unitOfMeasureName\"\n                  ref=\"row-unitOfMeasureName\"\n                  size=\"mini\"\n                >\n                  <el-option\n                    v-for=\"item in unitOfMeasureOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                  ></el-option>\n                </el-select>\n              </el-form-item>\n            </template>\n            <span v-else>{{scope.row.unitOfMeasureName}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column\n          :min-width=\"8\"\n          prop=\"numberUnits\"\n          :label=\"$t('warehouse.orderEntry.numberOfUnitsShort')\"\n        >\n          <template slot-scope=\"scope\">\n            <template v-if=\"scope.row.edit && scope.row.status !== finalizedId\">\n              <el-form-item prop=\"numberUnits\">\n                <el-input-number\n                  v-model=\"editForm.numberUnits\"\n                  v-numeric-validation\n                  :precision=\"0\"\n                  :min=\"1\"\n                  :max=\"999\"\n                  :maxlength=\"3\"\n                  :controls=\"false\"\n                  size=\"mini\"\n                  class=\"inline-input width-100p\"\n                  id=\"row-number-units\"\n                ></el-input-number>\n              </el-form-item>\n            </template>\n            <span v-else>{{scope.row.numberUnits}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column :min-width=\"10\" prop=\"measure\" :label=\"$t('warehouse.orderEntry.measure')\">\n          <template slot-scope=\"scope\">\n            <template v-if=\"scope.row.edit\">\n              <el-form-item prop=\"measure\">\n                <el-select\n                  v-model=\"editForm.measure\"\n                  id=\"row-measure\"\n                  ref=\"row-measure\"\n                  size=\"mini\"\n                >\n                  <el-option\n                    v-for=\"item in measureOptions\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\"\n                  ></el-option>\n                </el-select>\n              </el-form-item>\n            </template>\n            <span v-else>{{scope.row.measure}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"length\" :min-width=\"8\" :label=\"$t('warehouse.orderEntry.length')\">\n          <template slot-scope=\"scope\">\n            <template v-if=\"scope.row.edit\">\n              <el-form-item prop=\"length\">\n                <el-input-number\n                  v-model=\"editForm.length\"\n                  v-numeric-validation\n                  :controls=\"false\"\n                  :precision=\"3\"\n                  :min=\"0\"\n                  :max=\"999.999\"\n                  size=\"mini\"\n                  class=\"inline-input width-100p\"\n                  id=\"row-length\"\n                  ref=\"row-length\"\n                ></el-input-number>\n              </el-form-item>\n            </template>\n            <span v-else>{{scope.row.length}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"width\" :min-width=\"8\" :label=\"$t('warehouse.orderEntry.width')\">\n          <template slot-scope=\"scope\">\n            <template v-if=\"scope.row.edit\">\n              <el-form-item prop=\"width\">\n                <el-input-number\n                  v-model=\"editForm.width\"\n                  v-numeric-validation\n                  :controls=\"false\"\n                  :precision=\"3\"\n                  :min=\"0\"\n                  :max=\"999.999\"\n                  size=\"mini\"\n                  class=\"inline-input width-100p\"\n                  id=\"row-width\"\n                  ref=\"row-width\"\n                ></el-input-number>\n              </el-form-item>\n            </template>\n            <span v-else>{{scope.row.width}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"height\" :min-width=\"8\" :label=\"$t('warehouse.orderEntry.height')\">\n          <template slot-scope=\"scope\">\n            <template v-if=\"scope.row.edit\">\n              <el-form-item prop=\"height\">\n                <el-input-number\n                  v-model=\"editForm.height\"\n                  v-numeric-validation\n                  :controls=\"false\"\n                  :precision=\"3\"\n                  :min=\"0\"\n                  :max=\"999.999\"\n                  size=\"mini\"\n                  class=\"inline-input width-100p\"\n                  id=\"row-height\"\n                  ref=\"row-height\"\n                ></el-input-number>\n              </el-form-item>\n            </template>\n            <span v-else>{{scope.row.height}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column\n          :min-width=\"10\"\n          prop=\"productCode\"\n          :label=\"$t('warehouse.orderEntry.product')\"\n        >\n          <template slot-scope=\"scope\">\n            <template v-if=\"scope.row.edit\">\n              <el-form-item prop=\"productCode\">\n                <autocomplete\n                  :model.sync=\"editForm.productCode\"\n                  :modelAdditional.sync=\"editForm.productDescription\"\n                  popperAppendToBody\n                  :strict=\"false\"\n                  :url=\"urlProduct\"\n                  labelField=\"description\"\n                  labelfieldSelected=\"code\"\n                  valueField=\"code\"\n                  valueFieldAdditional=\"description\"\n                  :maxlength=\"5\"\n                  id=\"row-productCode\"\n                  ref=\"row-productCode\"\n                />\n              </el-form-item>\n            </template>\n            <span v-else>{{scope.row.productCode}}</span>\n          </template>\n        </el-table-column>\n        <el-table-column\n          prop=\"productDescription\"\n          sortable=\"custom\"\n          :min-width=\"20\"\n          :label=\"$t('warehouse.orderEntry.productDescription')\"\n        >\n          <template slot-scope=\"scope\">\n            <template v-if=\"scope.row.edit\">\n              <el-form-item prop=\"productDescription\">\n                <el-input\n                  v-model=\"editForm.productDescription\"\n                  v-alphanumeric-validation\n                  clearable\n                  maxlength=\"30\"\n                  size=\"mini\"\n                  class=\"inline-input\"\n                  id=\"row-product-description\"\n                  ref=\"row-product-description\"\n                ></el-input>\n              </el-form-item>\n            </template>\n            <template v-else>\n              <el-tooltip\n                class=\"item\"\n                effect=\"dark\"\n                :content=\"scope.row.productDescription\"\n                placement=\"top\"\n              >\n                <span>{{ scope.row.productDescription }}</span>\n              </el-tooltip>\n            </template>\n          </template>\n        </el-table-column>\n        <el-table-column\n          :min-width=\"8\"\n          prop=\"poNumber\"\n          :label=\"$t('warehouse.orderEntry.poNumber')\"\n        >\n          <template slot-scope=\"scope\">\n            <template v-if=\"scope.row.edit\">\n              <el-form-item prop=\"poNumber\">\n                <el-input\n                  v-model=\"editForm.poNumber\"\n                  v-alphanumeric-validation\n                  clearable\n                  maxlength=\"25\"\n                  size=\"mini\"\n                  class=\"inline-input\"\n                  id=\"row-po-number\"\n                  ref=\"row-po-number\"\n                ></el-input>\n              </el-form-item>\n            </template>\n            <template v-else>\n              <el-tooltip class=\"item\" effect=\"dark\" :content=\"scope.row.poNumber\" placement=\"top\">\n                <span>{{ scope.row.poNumber }}</span>\n              </el-tooltip>\n            </template>\n          </template>\n        </el-table-column>\n        <el-table-column\n          :min-width=\"15\"\n          prop=\"farmName\"\n          :label=\"$t('warehouse.orderEntry.farmBroker')\"\n        >\n          <template slot-scope=\"scope\">\n            <template v-if=\"scope.row.edit\">\n              <el-form-item prop=\"poNumber\">\n                <el-input\n                  v-model=\"editForm.farmName\"\n                  v-alphanumeric-validation\n                  maxlength=\"25\"\n                  size=\"mini\"\n                  class=\"inline-input\"\n                  id=\"row-farm-broker\"\n                  ref=\"row-farm-broker\"\n                ></el-input>\n              </el-form-item>\n            </template>\n            <template v-else>\n              <el-tooltip class=\"item\" effect=\"dark\" :content=\"scope.row.farmName\" placement=\"top\">\n                <span>{{ scope.row.farmName }}</span>\n              </el-tooltip>\n            </template>\n          </template>\n        </el-table-column>\n        <el-table-column\n          align=\"center\"\n          :min-width=\"9\"\n          prop=\"status\"\n          :label=\"$t('warehouse.orderEntry.finalized')\"\n        >\n          <template slot-scope=\"scope\">\n            <span v-if=\"scope.row.status === finalizedId\">\n              <i class=\"el-icon-success green-success\"></i>\n            </span>\n          </template>\n        </el-table-column>\n        <el-table-column\n          :min-width=\"15\"\n          :label=\"$t('common.options')\"\n          align=\"center\"\n          class-name=\"fixed-width\"\n        >\n          <template slot-scope=\"scope\">\n            <el-tooltip\n              v-if=\"showEditButton(scope.row.status)\"\n              class=\"item\"\n              effect=\"dark\"\n              :content=\"$t('warehouse.orderEntry.edit')\"\n              placement=\"top-start\"\n            >\n              <i class=\"el-icon-edit icon-action\" @click=\"handleEdit(scope.row)\"></i>\n            </el-tooltip>\n            <template v-else-if=\"scope.row.edit\">\n              <el-button icon=\"el-icon-success\" circle size=\"mini\" @click=\"handleUpdate()\"></el-button>\n              <el-button\n                icon=\"el-icon-circle-close\"\n                circle\n                size=\"mini\"\n                @click=\"cancelEdit(scope.row)\"\n              ></el-button>\n            </template>\n            <template v-if=\"!scope.row.edit\">\n              <el-tooltip\n                v-if=\"scope.row.status === finalizedId\"\n                class=\"item\"\n                effect=\"dark\"\n                :content=\"$t('warehouse.orderEntry.details')\"\n                placement=\"top-start\"\n              >\n                <units-detail-dialog :unitsConsolidateId=\"scope.row.id\" />\n              </el-tooltip>\n              <el-tooltip\n                v-if=\"scope.row.status === finalizedId\"\n                :unitsConsolidateId=\"scope.row.id\"\n                class=\"item\"\n                effect=\"dark\"\n                :content=\"$t('warehouse.orderEntry.print')\"\n                placement=\"top-start\"\n              >\n                <print-unit-consolidate-label\n                  :unitsConsolidateId=\"scope.row.id\"\n                  :labelPrinted.sync=\"scope.row.labelPrinted\"\n                />\n              </el-tooltip>\n              <el-tooltip\n                v-if=\"showDeleteButton(scope.row.status)\"\n                class=\"item\"\n                effect=\"dark\"\n                :content=\"$t('warehouse.orderEntry.delete')\"\n                placement=\"top-start\"\n              >\n                <i\n                  class=\"el-icon-delete icon-action\"\n                  type=\"primary\"\n                  size=\"mini\"\n                  @click=\"handleDelete(scope.row.id, scope.row.numberUnits, scope.row.shipDate)\"\n                ></i>\n              </el-tooltip>\n            </template>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-form>\n    <el-pagination\n      v-show=\"orderEntry.total > 0\"\n      @size-change=\"handleSearchChangeLimit\"\n      :page-sizes=\"sizes\"\n      :page-size=\"orderEntry.actualFilters.rows\"\n      :current-page.sync=\"orderEntry.actualFilters.page\"\n      @current-change=\"handleSearchChangePage\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      :total=\"orderEntry.total\"\n    ></el-pagination>\n  </div>\n</template>\n\n<script>\nimport { Message } from 'element-ui';\nimport moment from 'moment';\nimport { mapGetters } from 'vuex';\nimport constants from '@/utils/constants';\nimport apiConstants from '@/utils/apiConstants';\nimport Autocomplete from '@/components/Autocomplete';\nimport UnitsDetailDialog from './components/unitsDetail/UnitsDetailDialog';\nimport PrintUnitConsolidateLabel from './components/tableSummary/PrintUnitConsolidateLabel';\n\nexport default {\n  name: 'TableSummary',\n  components: { Autocomplete, UnitsDetailDialog, PrintUnitConsolidateLabel },\n  computed: {\n    ...mapGetters(['orderEntry'])\n  },\n  filters: {\n    statusFilterType(id) {\n      return constants.ORDER_ENTRY.ORDER_STATUS.find(\n        status => status.value === id\n      ).typeCss;\n    }\n  },\n  data() {\n    return {\n      editForm: {\n        id: null,\n        shipDate: null,\n        consigneeAccountId: null,\n        unitOfMeasureName: null,\n        measure: null,\n        numberUnits: null,\n        length: null,\n        width: null,\n        height: null,\n        productCode: '',\n        productDescription: '',\n        poNumber: '',\n        farmName: ''\n      },\n      editFormRules: {\n        consigneeAccountId: [\n          {\n            required: true,\n            message: this.$t('warehouse.orderEntry.error.consigneeRequired'),\n            trigger: 'submit'\n          }\n        ],\n        length: [\n          {\n            required: true,\n            message: this.$t('warehouse.orderEntry.error.lengthRequired'),\n            trigger: 'blur'\n          }\n        ],\n        width: [\n          {\n            required: true,\n            message: this.$t('warehouse.orderEntry.error.widthRequired'),\n            trigger: 'blur'\n          }\n        ],\n        height: [\n          {\n            required: true,\n            message: this.$t('warehouse.orderEntry.error.heightRequired'),\n            trigger: 'blur'\n          }\n        ]\n      },\n      finalizedId: constants.ORDER_ENTRY.ORDER_STATUS[2].value,\n      unitOfMeasureOptions: constants.ORDER_ENTRY.UNIT_OF_MEASURE_LIST,\n      measureOptions: constants.ORDER_ENTRY.MEASURE_LIST,\n      urlConsignee: apiConstants.END_POINTS.ACCOUNTS.CONSIGNEE_BY_SHIPPER,\n      urlProduct: apiConstants.END_POINTS.PRODUCT_SEARCH,\n      sizes: constants.TABLES.DEFAULT_LIMIT_SIZES\n    };\n  },\n  methods: {\n    handleSearchChangePage(val) {\n      this.$store.dispatch('orderEntry/search', { page: val });\n    },\n    handleSearchChangeLimit(val) {\n      this.$store.dispatch('orderEntry/search', {\n        rows: val,\n        page: constants.TABLES.DEFAULT_PAGE\n      });\n    },\n    handleSortChange(data) {\n      let { prop } = data;\n      const { order } = data;\n      prop = constants.TABLES.ORDER_ENTRY.COLUMNS_MAP_SORT[prop] || prop;\n      this.$store.dispatch('orderEntry/search', {\n        orderField: prop,\n        orderDirection: constants.TABLES.ORDER_DIRECTION[order]\n      });\n    },\n    handleEdit(row) {\n      this.$store.dispatch('orderEntry/setEditingRow', true);\n      row.edit = true;\n      this.editForm.id = row.id;\n      this.editForm.shipDate = row.shipDate;\n      this.editForm.consigneeAccountId = row.consigneeAccountId;\n      this.editForm.shipperAccountId = row.shipperAccountId;\n      this.editForm.unitOfMeasureName = row.unitOfMeasureName;\n      this.editForm.measure = row.measure;\n      this.editForm.numberUnits = row.numberUnits;\n      this.editForm.length = row.length;\n      this.editForm.width = row.width;\n      this.editForm.height = row.height;\n      this.editForm.productCode = row.productCode;\n      this.editForm.productDescription = row.productDescription;\n      this.editForm.poNumber = row.poNumber;\n      this.editForm.farmName = row.farmName;\n      this.editForm.status = row.status;\n      this.$nextTick(() => {\n        this.$refs['row-consignee'].setLocalModel(\n          `${row.consigneeName} - ${row.consigneeAccount}`\n        );\n        this.$refs['row-productCode'].setLocalModel(row.productCode);\n        if (this.$refs['row-consignee'].$el) {\n          this.$refs['row-consignee'].$el\n            .getElementsByTagName('input')[0]\n            .focus();\n        }\n      });\n    },\n    async handleUpdate() {\n      const minValue = this.orderEntry.settings.minCubesPerBox;\n      let {\n        length, height, width\n      } = this.editForm;\n      const { measure } = this.editForm;\n\n      if (measure === constants.ORDER_ENTRY.MEASURE_LIST[1].value) {\n        length *= constants.ORDER_ENTRY.CONST_VALUE;\n        width *= constants.ORDER_ENTRY.CONST_VALUE;\n        height *= constants.ORDER_ENTRY.CONST_VALUE;\n      }\n      const volume = length * width * height;\n      if (volume <= minValue) {\n        let message = this.$t('warehouse.orderEntry.error.minValueValidationError');\n        message = message.replace('[unit]', this.editForm.numberUnits).replace('[minValue]', minValue);\n        const confirm = await this.$confirm(message, { confirmButtonText: this.$t('OK') });\n        if (confirm) { return this.getSubmitForm(); }\n        return false;\n      } if (volume > constants.ORDER_ENTRY.MAX_VALUE) {\n        let message = this.$t('warehouse.orderEntry.error.maxValueValidationError');\n        message = message.replace('[minValue]', minValue).replace('[max_value]', constants.ORDER_ENTRY.MAX_VALUE);\n        this.$message.warning(message);\n        return false;\n      }\n      return this.getSubmitForm();\n    },\n    clearEdit() {\n      this.$store.dispatch('orderEntry/setEditingRow', false);\n      this.$refs.editForm.resetFields();\n      this.$refs['row-consignee'].clearLocalModel();\n      this.$refs['row-productCode'].clearLocalModel();\n    },\n    cancelEdit(row) {\n      row.edit = false;\n      this.clearEdit();\n    },\n    handleDelete(id, numberUnits, shipDate) {\n      let message = this.$t('warehouse.orderEntry.deleteConfirmation');\n      message = message.replace('[numberUnits]', numberUnits);\n      message = message.replace(\n        '[shipDate]',\n        moment(shipDate, constants.DATES.DEFAULT_BACKEND_FORMAT).format(\n          constants.DATES.DEFAULT_DISPLAY_FORMAT\n        )\n      );\n      return this.$confirm(message, {\n        confirmButtonText: this.$t('common.yes')\n      })\n        .then(() => {\n          Message.closeAll();\n          const loading = this.$loadingthis.orderEntry(constants.LOADING.DEFAULT_CONFIG);\n          this.$storethis.orderEntry\n            .dispatch('orderEntry/deletthis.orderEntrye', id)\n            .then((response) => {\n              loading.close();\n              this.$message.success(response.message);\n              this.$store.dispatch('orderEntry/search', {});\n            })\n            .catch(() => {\n              loading.close();\n            });\n        })\n        .catch(() => {});\n    },\n    showEditButton(orderStatus) {\n      const hasEditPermission = this.$can(\n        this.permissions.DATA_ENTRY.EDIT_AFTER_CUTOFF_FINALIZED, orderStatus\n      )\n        || this.$can(\n          this.permissions.DATA_ENTRY.EDIT_AFTER_CUTOFF_PENDING, orderStatus\n        )\n        || this.$can(\n          this.permissions.DATA_ENTRY.EDIT_BEFORE_CUTOFF_FINALIZED, orderStatus\n        )\n        || this.$can(\n          this.permissions.DATA_ENTRY.EDIT_BEFORE_CUTOFF_PENDING, orderStatus\n        );\n      return !this.orderEntry.isEditingRow && hasEditPermission;\n    },\n    showDeleteButton(orderStatus) {\n      const hasDeletePermission = this.$can(\n        this.permissions.DATA_ENTRY.DELETE_AFTER_CUTOFF_FINALIZED, orderStatus\n      )\n        || this.$can(\n          this.permissions.DATA_ENTRY.DELETE_AFTER_CUTOFF_PENDING, orderStatus\n        )\n        || this.$can(\n          this.permissions.DATA_ENTRY.DELETE_BEFORE_CUTOFF_FINALIZED, orderStatus\n        )\n        || this.$can(\n          this.permissions.DATA_ENTRY.DELETE_BEFORE_CUTOFF_PENDING, orderStatus\n        );\n      return hasDeletePermission;\n    },\n    getSubmitForm() {\n      this.$refs.editForm.validate((valid, validationsErrors) => {\n        if (valid) {\n          Message.closeAll();\n          const loading = this.$loading(constants.LOADING.DEFAULT_CONFIG);\n          this.$store\n            .dispatch('orderEntry/update', {\n              unitsConsolidateId: this.editForm.id,\n              orderToUpdate: this.editForm\n            })\n            .then((response) => {\n              loading.close();\n              this.$message.success(response.message);\n              this.clearEdit();\n              this.$store.dispatch('orderEntry/search', {});\n            })\n            .catch(() => {\n              loading.close();\n            });\n        } else {\n          let errorMessage = '';\n          Object.keys(validationsErrors).forEach((key) => {\n            validationsErrors[key].forEach((validation) => {\n              errorMessage += `${validation.message}. `;\n            });\n          });\n          this.$message.warning(errorMessage);\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\">\n</style>\n"],"sourceRoot":"src/views/warehouse/orderEntry"}]}