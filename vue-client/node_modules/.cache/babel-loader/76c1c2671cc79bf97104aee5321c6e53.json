{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/thread-loader/dist/cjs.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/orderEntry/components/AddDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/orderEntry/components/AddDialog.vue","mtime":1563965804039},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Message } from 'element-ui';\nimport moment from 'moment';\nimport { mapGetters } from 'vuex';\nimport constants from '@/utils/constants';\nimport apiConstants from '@/utils/apiConstants';\nimport Autocomplete from '@/components/Autocomplete';\nvar formConsignee = 'form-consignee';\nexport default {\n  components: {\n    Autocomplete: Autocomplete\n  },\n  computed: _objectSpread({}, mapGetters(['orderEntry'])),\n  data: function data() {\n    return {\n      dialogVisible: false,\n      form: {\n        consigneeAccountId: null,\n        unitOfMeasure: constants.ORDER_ENTRY.UNIT_OF_MEASURE_LIST[0].value,\n        measure: constants.ORDER_ENTRY.MEASURE_LIST[0].value,\n        shipDate: new Date(),\n        totalUnits: null,\n        length: null,\n        width: null,\n        height: null,\n        productCode: '',\n        productDescription: '',\n        po: '',\n        farmName: ''\n      },\n      formRules: {\n        consigneeAccountId: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.consigneeRequired'),\n          trigger: 'submit'\n        }],\n        unitOfMeasure: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.unitOfMeasureRequired'),\n          trigger: 'blur'\n        }],\n        shipDate: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.shipDateRequired'),\n          trigger: 'blur'\n        }],\n        length: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.lengthRequired'),\n          trigger: 'blur'\n        }],\n        width: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.widthRequired'),\n          trigger: 'blur'\n        }],\n        height: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.heightRequired'),\n          trigger: 'blur'\n        }],\n        totalUnits: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.numberUnitsRequired'),\n          trigger: 'blur'\n        }]\n      },\n      unitOfMeasureOptions: constants.ORDER_ENTRY.UNIT_OF_MEASURE_LIST,\n      measureOptions: constants.ORDER_ENTRY.MEASURE_LIST,\n      urlConsignee: apiConstants.END_POINTS.ACCOUNTS.CONSIGNEE_BY_SHIPPER,\n      urlProduct: apiConstants.END_POINTS.PRODUCT_SEARCH\n    };\n  },\n  methods: {\n    handleOpen: function handleOpen() {\n      var _this = this;\n\n      this.form.shipDate = moment(this.orderEntry.actualFilters.shipDate, 'YYYY-MM-DD').toDate();\n      this.$nextTick(function () {\n        _this.form.consigneeAccountId = _this.orderEntry.actualFilters.consigneeAccountId;\n\n        _this.$refs[formConsignee].setLocalModel(_this.orderEntry.actualFilters.consigneeName);\n\n        _this.$refs.form.$el[0].focus();\n      });\n    },\n    handleClose: function handleClose(done) {\n      this.resetForm();\n      done();\n    },\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var minValue, length, width, height, volume, message, confirm, _message;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                minValue = this.orderEntry.settings.minCubesPerBox;\n\n                if (this.form.measure === constants.ORDER_ENTRY.MEASURE_LIST[1].value) {\n                  length = this.$refs.length.value * constants.ORDER_ENTRY.CONST_VALUE;\n                  width = this.$refs.width.value * constants.ORDER_ENTRY.CONST_VALUE;\n                  height = this.$refs.height.value * constants.ORDER_ENTRY.CONST_VALUE;\n                } else {\n                  length = this.$refs.length.value;\n                  width = this.$refs.width.value;\n                  height = this.$refs.height.value;\n                }\n\n                volume = length * width * height;\n\n                if (!(volume <= minValue)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                message = this.$t('warehouse.orderEntry.error.minValueValidationError');\n                message = message.replace('[unit]', this.$refs.unit.value).replace('[minValue]', minValue);\n                _context.next = 8;\n                return this.$confirm(message, {\n                  confirmButtonText: this.$t('OK')\n                });\n\n              case 8:\n                confirm = _context.sent;\n\n                if (!confirm) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.getSubmitForm());\n\n              case 11:\n                return _context.abrupt(\"return\", false);\n\n              case 12:\n                if (!(volume > constants.ORDER_ENTRY.MAX_VALUE)) {\n                  _context.next = 17;\n                  break;\n                }\n\n                _message = this.$t('warehouse.orderEntry.error.maxValueValidationError');\n                _message = _message.replace('[minValue]', minValue).replace('[max_value]', constants.ORDER_ENTRY.MAX_VALUE);\n                this.$message.warning(_message);\n                return _context.abrupt(\"return\", false);\n\n              case 17:\n                return _context.abrupt(\"return\", this.getSubmitForm());\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function submitForm() {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }(),\n    resetForm: function resetForm() {\n      var _this2 = this;\n\n      this.$refs.form.resetFields();\n      this.form.consigneeId = null;\n      this.form.productCode = '';\n      this.form.productDescription = '';\n      this.$refs['form-product'].clearLocalModel();\n      this.$refs[formConsignee].clearLocalModel();\n      this.form.shipDate = moment(this.orderEntry.actualFilters.shipDate, 'YYYY-MM-DD').toDate();\n      this.$nextTick(function () {\n        _this2.form.consigneeAccountId = _this2.orderEntry.actualFilters.consigneeAccountId;\n\n        _this2.$refs[formConsignee].setLocalModel(_this2.orderEntry.actualFilters.consigneeName);\n      });\n      this.$refs.form.$el[0].focus();\n    },\n\n    /* The datepicker has an issue when change manually, the focus is lost. */\n    handleChangeDate: function handleChangeDate() {\n      this.$refs.form.$el[4].focus();\n    },\n    isVisible: function isVisible() {\n      return this.$can(this.permissions.DATA_ENTRY.ADD_SHIPMENT) || this.$can(this.permissions.DATA_ENTRY.ADD_SHIPMENT_AFTER_CUTOFF);\n    },\n    getSubmitForm: function getSubmitForm() {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this3.$refs.form.validate(function (valid) {\n          if (valid) {\n            Message.closeAll();\n\n            var loading = _this3.$loading(constants.LOADING.DEFAULT_CONFIG);\n\n            _this3.$store.dispatch('orderEntry/save', _this3.form).then(function (response) {\n              loading.close();\n\n              _this3.$message.success(response.message);\n\n              _this3.resetForm();\n\n              _this3.$refs.form.$el[0].focus();\n\n              _this3.$store.dispatch('orderEntry/search', {});\n\n              resolve(response);\n            }).catch(function (error) {\n              loading.close();\n              reject(error);\n            });\n          } else {\n            reject(new Error(_this3.$t('common.invalid')));\n          }\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["AddDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <span v-if=\"isVisible()\">\n    <el-button\n      id=\"btn-add-order\"\n      type=\"success\"\n      plain\n      @click=\"dialogVisible = true\"\n      size=\"mini\"\n      icon=\"el-icon-plus\"\n    >{{ $t('warehouse.orderEntry.addOrder') }}</el-button>\n    <el-dialog\n      :close-on-click-modal=\"false\"\n      v-on:open=\"handleOpen\"\n      :title=\"$t('warehouse.orderEntry.addOrder')\"\n      :visible.sync=\"dialogVisible\"\n      width=\"85%\"\n      :before-close=\"handleClose\"\n    >\n      <el-form\n        :model=\"form\"\n        :rules=\"formRules\"\n        ref=\"form\"\n        v-circular-tab-navigation-dialog\n        label-position=\"top\"\n        size=\"mini\"\n      >\n        <el-col :span=\"24\">\n          <el-col :md=\"9\" :sm=\"12\" :xs=\"24\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.consignee')\" prop=\"consigneeAccountId\">\n              <autocomplete\n                :model.sync=\"form.consigneeAccountId\"\n                :url=\"urlConsignee\"\n                :shipperAccountId=\"orderEntry.settings.shipperAccountId\"\n                labelField=\"name\"\n                labelFieldLastWithDash=\"number\"\n                valueField=\"id\"\n                id=\"form-consignee\"\n                ref=\"form-consignee\"\n              />\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"4\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.unitOfMeasure')\" prop=\"unitOfMeasure\">\n              <el-select v-model=\"form.unitOfMeasure\" id=\"form-unit-of-measure\">\n                <el-option\n                  v-for=\"item in unitOfMeasureOptions\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"3\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.measure')\" prop=\"measure\">\n              <el-select v-model=\"form.measure\" id=\"form-measure\">\n                <el-option\n                  v-for=\"item in measureOptions\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                  ref=\"measure\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"5\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.shipDate')\" prop=\"shipDate\">\n              <el-date-picker\n                v-model=\"form.shipDate\"\n                @change=\"handleChangeDate\"\n                :default-value=\"orderEntry.actualFilters.shipDate\"\n                style=\"width: 100%\"\n                format=\"MM/dd/yyyy\"\n                :picker-options=\"orderEntry.shipDatePickerOptions\"\n                type=\"date\"\n                id=\"form-ship-date\"\n              ></el-date-picker>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"3\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.numberOfUnitsShort')\" prop=\"totalUnits\">\n              <el-input-number\n                v-model=\"form.totalUnits\"\n                v-numeric-validation\n                :precision=\"0\"\n                :min=\"0\"\n                :max=\"999\"\n                class=\"inline-input width-100p\"\n                id=\"form-number-units\"\n                ref=\"unit\"\n              ></el-input-number>\n            </el-form-item>\n          </el-col>\n        </el-col>\n        <el-col :span=\"24\">\n          <el-col :md=\"2\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.length')\" prop=\"length\">\n              <el-input-number\n                v-model=\"form.length\"\n                v-numeric-validation\n                :controls=\"false\"\n                :precision=\"3\"\n                :min=\"0\"\n                :max=\"999.999\"\n                class=\"inline-input width-100p\"\n                id=\"form-length\"\n                ref=\"length\"\n              ></el-input-number>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"2\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.width')\" prop=\"width\">\n              <el-input-number\n                v-model=\"form.width\"\n                v-numeric-validation\n                :controls=\"false\"\n                :precision=\"3\"\n                :min=\"0\"\n                :max=\"999.999\"\n                class=\"inline-input width-100p\"\n                id=\"form-width\"\n                ref=\"width\"\n              ></el-input-number>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"2\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.height')\" prop=\"height\">\n              <el-input-number\n                v-model=\"form.height\"\n                v-numeric-validation\n                :controls=\"false\"\n                :precision=\"3\"\n                :min=\"0\"\n                :max=\"999.999\"\n                class=\"inline-input width-100p\"\n                id=\"form-height\"\n                ref=\"height\"\n              ></el-input-number>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"3\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.product')\" prop=\"productCode\">\n              <autocomplete\n                :model.sync=\"form.productCode\"\n                :modelAdditional.sync=\"form.productDescription\"\n                :strict=\"false\"\n                :url=\"urlProduct\"\n                labelField=\"description\"\n                labelfieldSelected=\"code\"\n                valueField=\"code\"\n                valueFieldAdditional=\"description\"\n                :maxlength=\"5\"\n                id=\"form-product\"\n                ref=\"form-product\"\n              />\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"6\" :sm=\"24\" :xs=\"24\" class=\"form-vertical-item\">\n            <el-form-item\n              :label=\"$t('warehouse.orderEntry.productDescription')\"\n              prop=\"productDescription\"\n            >\n              <el-input\n                v-model=\"form.productDescription\"\n                v-alphanumeric-validation\n                maxlength=\"30\"\n                clearable\n                class=\"inline-input\"\n                id=\"form-product-description\"\n              ></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"3\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.poNumber')\" prop=\"po\">\n              <el-input\n                v-model=\"form.po\"\n                v-alphanumeric-validation\n                maxlength=\"25\"\n                clearable\n                class=\"inline-input\"\n                id=\"form-po-number\"\n              ></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"3\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.farmName')\" prop=\"farmName\">\n              <el-input\n                v-model=\"form.farmName\"\n                v-alphanumeric-validation\n                maxlength=\"100\"\n                clearable\n                class=\"inline-input\"\n                id=\"form-farm-name\"\n              ></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"3\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <div class=\"el-form-item el-form-item--mini\">\n              <el-tooltip\n                class=\"item\"\n                effect=\"dark\"\n                :content=\"$t('warehouse.orderEntry.addOrder')\"\n                placement=\"top-start\"\n              >\n                <el-button\n                  id=\"form-save-button\"\n                  @click=\"submitForm()\"\n                  icon=\"el-icon-plus\"\n                  size=\"mini\"\n                  class=\"button-action-default margin-t-38\"\n                ></el-button>\n              </el-tooltip>\n              <el-tooltip\n                class=\"item\"\n                effect=\"dark\"\n                :content=\"$t('warehouse.orderEntry.clear')\"\n                placement=\"top-start\"\n              >\n                <el-button\n                  id=\"form-refresh-button\"\n                  @click=\"resetForm()\"\n                  icon=\"fa fa-eraser\"\n                  size=\"mini\"\n                  class=\"button-action-default\"\n                ></el-button>\n              </el-tooltip>\n            </div>\n          </el-col>\n        </el-col>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">&nbsp;</span>\n    </el-dialog>\n  </span>\n</template>\n\n<script>\nimport { Message } from 'element-ui';\nimport moment from 'moment';\nimport { mapGetters } from 'vuex';\nimport constants from '@/utils/constants';\nimport apiConstants from '@/utils/apiConstants';\nimport Autocomplete from '@/components/Autocomplete';\n\nconst formConsignee = 'form-consignee';\n\nexport default {\n  components: { Autocomplete },\n  computed: {\n    ...mapGetters(['orderEntry'])\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      form: {\n        consigneeAccountId: null,\n        unitOfMeasure: constants.ORDER_ENTRY.UNIT_OF_MEASURE_LIST[0].value,\n        measure: constants.ORDER_ENTRY.MEASURE_LIST[0].value,\n        shipDate: new Date(),\n        totalUnits: null,\n        length: null,\n        width: null,\n        height: null,\n        productCode: '',\n        productDescription: '',\n        po: '',\n        farmName: ''\n      },\n      formRules: {\n        consigneeAccountId: [\n          {\n            required: true,\n            message: this.$t('warehouse.orderEntry.error.consigneeRequired'),\n            trigger: 'submit'\n          }\n        ],\n        unitOfMeasure: [\n          {\n            required: true,\n            message: this.$t(\n              'warehouse.orderEntry.error.unitOfMeasureRequired'\n            ),\n            trigger: 'blur'\n          }\n        ],\n        shipDate: [\n          {\n            required: true,\n            message: this.$t('warehouse.orderEntry.error.shipDateRequired'),\n            trigger: 'blur'\n          }\n        ],\n        length: [\n          {\n            required: true,\n            message: this.$t('warehouse.orderEntry.error.lengthRequired'),\n            trigger: 'blur'\n          }\n        ],\n        width: [\n          {\n            required: true,\n            message: this.$t('warehouse.orderEntry.error.widthRequired'),\n            trigger: 'blur'\n          }\n        ],\n        height: [\n          {\n            required: true,\n            message: this.$t('warehouse.orderEntry.error.heightRequired'),\n            trigger: 'blur'\n          }\n        ],\n        totalUnits: [\n          {\n            required: true,\n            message: this.$t('warehouse.orderEntry.error.numberUnitsRequired'),\n            trigger: 'blur'\n          }\n        ]\n      },\n      unitOfMeasureOptions: constants.ORDER_ENTRY.UNIT_OF_MEASURE_LIST,\n      measureOptions: constants.ORDER_ENTRY.MEASURE_LIST,\n      urlConsignee: apiConstants.END_POINTS.ACCOUNTS.CONSIGNEE_BY_SHIPPER,\n      urlProduct: apiConstants.END_POINTS.PRODUCT_SEARCH\n    };\n  },\n  methods: {\n    handleOpen() {\n      this.form.shipDate = moment(\n        this.orderEntry.actualFilters.shipDate,\n        'YYYY-MM-DD'\n      ).toDate();\n      this.$nextTick(() => {\n        this.form.consigneeAccountId = this.orderEntry.actualFilters.consigneeAccountId;\n        this.$refs[formConsignee].setLocalModel(\n          this.orderEntry.actualFilters.consigneeName\n        );\n        this.$refs.form.$el[0].focus();\n      });\n    },\n    handleClose(done) {\n      this.resetForm();\n      done();\n    },\n    async submitForm() {\n      const minValue = this.orderEntry.settings.minCubesPerBox;\n\n      let length;\n      let width;\n      let height;\n\n      if (this.form.measure === constants.ORDER_ENTRY.MEASURE_LIST[1].value) {\n        length = this.$refs.length.value * constants.ORDER_ENTRY.CONST_VALUE;\n        width = this.$refs.width.value * constants.ORDER_ENTRY.CONST_VALUE;\n        height = this.$refs.height.value * constants.ORDER_ENTRY.CONST_VALUE;\n      } else {\n        length = this.$refs.length.value;\n        width = this.$refs.width.value;\n        height = this.$refs.height.value;\n      }\n      const volume = length * width * height;\n      if (volume <= minValue) {\n        let message = this.$t('warehouse.orderEntry.error.minValueValidationError');\n        message = message.replace('[unit]', this.$refs.unit.value).replace('[minValue]', minValue);\n        const confirm = await this.$confirm(message, { confirmButtonText: this.$t('OK') });\n        if (confirm) {\n          return this.getSubmitForm();\n        }\n        return false;\n      } if (volume > constants.ORDER_ENTRY.MAX_VALUE) {\n        let message = this.$t('warehouse.orderEntry.error.maxValueValidationError');\n        message = message.replace('[minValue]', minValue).replace('[max_value]', constants.ORDER_ENTRY.MAX_VALUE);\n        this.$message.warning(message);\n        return false;\n      }\n      return this.getSubmitForm();\n    },\n    resetForm() {\n      this.$refs.form.resetFields();\n      this.form.consigneeId = null;\n      this.form.productCode = '';\n      this.form.productDescription = '';\n      this.$refs['form-product'].clearLocalModel();\n      this.$refs[formConsignee].clearLocalModel();\n      this.form.shipDate = moment(\n        this.orderEntry.actualFilters.shipDate,\n        'YYYY-MM-DD'\n      ).toDate();\n      this.$nextTick(() => {\n        this.form.consigneeAccountId = this.orderEntry.actualFilters.consigneeAccountId;\n        this.$refs[formConsignee].setLocalModel(\n          this.orderEntry.actualFilters.consigneeName\n        );\n      });\n      this.$refs.form.$el[0].focus();\n    },\n    /* The datepicker has an issue when change manually, the focus is lost. */\n    handleChangeDate() {\n      this.$refs.form.$el[4].focus();\n    },\n    isVisible() {\n      return (\n        this.$can(this.permissions.DATA_ENTRY.ADD_SHIPMENT)\n        || this.$can(this.permissions.DATA_ENTRY.ADD_SHIPMENT_AFTER_CUTOFF)\n      );\n    },\n    getSubmitForm() {\n      return new Promise((resolve, reject) => {\n        this.$refs.form.validate((valid) => {\n          if (valid) {\n            Message.closeAll();\n            const loading = this.$loading(constants.LOADING.DEFAULT_CONFIG);\n            this.$store\n              .dispatch('orderEntry/save', this.form)\n              .then((response) => {\n                loading.close();\n                this.$message.success(response.message);\n                this.resetForm();\n                this.$refs.form.$el[0].focus();\n                this.$store.dispatch('orderEntry/search', {});\n                resolve(response);\n              })\n              .catch((error) => {\n                loading.close();\n                reject(error);\n              });\n          } else {\n            reject(new Error(this.$t('common.invalid')));\n          }\n        });\n      });\n    }\n  }\n};\n</script>\n<style rel=\"stylesheet/scss\" lang=\"scss\">\n</style>\n"],"sourceRoot":"src/views/warehouse/orderEntry/components"}]}