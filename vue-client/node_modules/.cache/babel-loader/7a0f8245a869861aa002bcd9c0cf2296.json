{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/uploadXml/UploadResponse.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/uploadXml/UploadResponse.vue","mtime":1566297892000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'UploadResponse',\n  computed: _objectSpread({}, mapGetters(['uploadXmlResponse'])),\n  data: function data() {\n    return {};\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$store.dispatch('clearXmlResponse');\n  }\n};",{"version":3,"sources":["UploadResponse.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,QAAA,oBACA,UAAA,CAAA,CACA,mBADA,CAAA,CADA,CAFA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA,EAAA;AACA,GATA;AAUA,EAAA,aAVA,2BAUA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,kBAAA;AACA;AAZA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <el-collapse v-show=\"uploadXmlResponse.details.length || uploadXmlResponse.header.errorMessage || uploadXmlResponse.header.fileName\" v-model=\"uploadXmlResponse.activeElement\">\r\n    <el-collapse-item :title=\"$t('uploadXmlFiles.xmlResponse')\" name=\"xml-upload-response-collapsible\" id=\"xml-upload-response-collapsible\">\r\n        <div class=\"header-response\" id=\"header-response\">\r\n            <span class=\"response-field\">{{ $t('common.orderNumberShort') }}: {{ uploadXmlResponse.header.orderNumber }}</span>\r\n            <span class=\"response-field\">{{ $t('common.shipdate') }}: {{ uploadXmlResponse.header.shipdate }}</span>\r\n            <span class=\"response-field\">{{ $t('common.shipper') }}: {{ uploadXmlResponse.header.shipper }}</span>\r\n            <span class=\"response-field\">{{ $t('common.unitsInFile') }}: {{ uploadXmlResponse.header.totalUnitsInFile }}</span>\r\n            <span class=\"response-field\">{{ $t('common.unitsSuccess') }}: {{ uploadXmlResponse.header.totalUnitsSuccess }}</span>\r\n            <span class=\"response-field\">{{ $t('common.unitsDuplicates') }}: {{ uploadXmlResponse.header.totalUnitsDuplicates }}</span>\r\n            <span class=\"response-field\">{{ $t('common.unitsDiscrepancy') }}: {{ uploadXmlResponse.header.totalUnitsDiscrepancy }}</span>\r\n        </div>\r\n        <div class=\"header-response-message\" id=\"header-response-message\" >\r\n          <div v-if=\"uploadXmlResponse.header.errorMessage\"><i class=\"el-icon-warning yellow-warning\"></i> &nbsp; <span>{{ uploadXmlResponse.header.errorMessage }}</span></div>\r\n          <div v-if=\"!uploadXmlResponse.details.length && !uploadXmlResponse.header.errorMessage && uploadXmlResponse.header.fileName\"><i class=\"el-icon-success green-success\"></i>&nbsp;<span>{{ $t('uploadXmlFiles.uploadSuccess') }}</span></div>\r\n        </div>\r\n        <div class=\"xml-table-response-data-container\">\r\n            <el-table v-if=\"uploadXmlResponse.details.length\"\r\n                id=\"response-data\"\r\n                size=\"mini\"\r\n                tooltip-effect=\"dark\"\r\n                class=\"xml-table-response-data\"\r\n                sortable\r\n                :data=\"uploadXmlResponse.details\">\r\n                <el-table-column\r\n                    prop=\"consignee\"\r\n                    width=\"270\"\r\n                    :label=\"$t('common.consigneeAccount')\">\r\n                    <template slot-scope=\"scope\">\r\n                        <span> {{ scope.row.consignee_name }} - {{ scope.row.consignee }}</span>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"unitsFailed\"\r\n                    width=\"100\"\r\n                    :label=\"$t('uploadXmlFiles.failedUnits')\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"unitFailedDetail.unitID[0]\"\r\n                    width=\"120\"\r\n                    :label=\"$t('uploadXmlFiles.unitIds')\">\r\n                    <template slot-scope=\"scope\">\r\n                        <span v-if=\"scope.row.unitFailedDetail.unitID.length === 1\">{{scope.row.unitFailedDetail.unitID[0]}}</span>\r\n                        <template v-else>\r\n                            <el-popover\r\n                                placement=\"right\"\r\n                                width=\"100\"\r\n                                trigger=\"hover\">\r\n                                <el-table :data=\"scope.row.unitFailedDetail.unitID\" max-height=\"500\">\r\n                                    <el-table-column width=\"300\" :label=\"$t('uploadXmlFiles.unitIds')\">\r\n                                        <template slot-scope=\"scopei\">\r\n                                            {{scopei.row}}\r\n                                        </template>\r\n                                    </el-table-column>\r\n                                </el-table>\r\n                                <el-button slot=\"reference\" type=\"text\" class=\"pop-over-unitIds-error\">{{scope.row.unitFailedDetail.unitID[0]}}...</el-button>\r\n                            </el-popover>\r\n                        </template>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    prop=\"message\"\r\n                    :label=\"$t('common.message')\">\r\n                </el-table-column>\r\n            </el-table>\r\n        </div>\r\n    </el-collapse-item>\r\n    </el-collapse>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  name: 'UploadResponse',\r\n  computed: {\r\n    ...mapGetters([\r\n      'uploadXmlResponse'\r\n    ])\r\n  },\r\n  data() {\r\n    return {};\r\n  },\r\n  beforeDestroy() {\r\n    this.$store.dispatch('clearXmlResponse');\r\n  }\r\n};\r\n</script>\r\n\r\n<style rel=\"stylesheet/scss\" lang=\"scss\">\r\n.header-response {\r\n    height: 30px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    background-color: rgba(0, 51, 91, 1);\r\n    .response-field {\r\n        font-size: 12px;\r\n        font-weight: bold;\r\n        color: rgba(255, 255, 255, 1);\r\n        margin-left: 10px;\r\n        max-width: 160px;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n}\r\n\r\n.header-response-message {\r\n  position: sticky;\r\n  div {\r\n    padding-top: 10px;\r\n  }\r\n}\r\n.xml-table-response-data-container {\r\n    height: 100%;\r\n    overflow: auto;\r\n    .xml-table-response-data.el-table {\r\n        th.is-leaf{\r\n            font-size: 11px;\r\n            color: rgba(0, 51, 91, 1);\r\n            border-bottom: 2px solid rgba(0, 51, 91, 1);\r\n        }\r\n    }\r\n}\r\n\r\n.pop-over-unitIds-error {\r\n    color: #606266;\r\n    font-size: 11px;\r\n}\r\n\r\n.upload-response {\r\n  margin-top: 17px;\r\n  height: 100%;\r\n  .el-collapse-item__wrap {\r\n      height: 100%;\r\n  }\r\n  .el-collapse {\r\n      height: 100%;\r\n  }\r\n  .el-collapse-item {\r\n      height: 100%;\r\n  }\r\n  .el-collapse-item__content {\r\n      height: 100%;\r\n      overflow: scroll\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 830px) {\r\n    .header-response {\r\n        height: 100%;\r\n        width: 100%;\r\n        display: block;\r\n        padding-left: 10px;\r\n        padding-right: 10px;\r\n        height: 90px;\r\n        background-color: #00335b;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        .response-field {\r\n            display: inline;\r\n        }\r\n    }\r\n    .upload-response {\r\n        height: 270px;\r\n    }\r\n}\r\n\r\n@media only screen and (min-width: 1420px ) {\r\n    .header-response {\r\n        .response-field {\r\n            max-width: 180px;\r\n            white-space: nowrap;\r\n            overflow: hidden;\r\n            text-overflow: ellipsis;\r\n        }\r\n    }\r\n    .upload-response {\r\n        height: 400px;\r\n    }\r\n}\r\n\r\n</style>\r\n"],"sourceRoot":"src/views/warehouse/uploadXml"}]}