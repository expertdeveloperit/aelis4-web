{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/thread-loader/dist/cjs.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/eslint-loader/index.js??ref--13-0!/home/spineor/Downloads/aelis4-web/vue-client/src/store/modules/warehouse/account.js","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/store/modules/warehouse/account.js","mtime":1566984596000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport accountApiService from '@/api/accountService';\nimport constants from '@/utils/constants';\n\nvar getDefaultStateShippers = function getDefaultStateShippers() {\n  return {\n    filters: {\n      page: constants.TABLES.DEFAULT_PAGE,\n      rows: constants.TABLES.DEFAULT_LIMIT_MINI,\n      search: null,\n      pageResults: true\n    },\n    loading: false,\n    list: [],\n    totalRows: 0,\n    multipleShippers: false\n  };\n};\n\nvar account = {\n  namespaced: true,\n  state: {\n    shippers: getDefaultStateShippers()\n  },\n  mutations: {\n    SET_SHIPPERS_SCROLL: function SET_SHIPPERS_SCROLL(state, data) {\n      state.shippers.list = state.shippers.list.concat(data.shippers.data);\n      state.shippers.totalRows = data.shippers.totalRows; // This flag allows identify that the user has multiple shippers, regardless of whether because of the filters it only shows 1 or less later\n\n      if (state.shippers.totalRows > 1) {\n        state.shippers.multipleShippers = true;\n      }\n\n      state.shippers.filters.page = data.filters.page + 1;\n    },\n    SET_LOADING: function SET_LOADING(state, loading) {\n      state.shippers.loading = loading;\n    },\n    RESET_SHIPPERS_STATE: function RESET_SHIPPERS_STATE(state) {\n      // we save this value of the user because is the only that not must be reset.\n      var multipleShippers = state.shippers.multipleShippers;\n      Object.assign(state.shippers, getDefaultStateShippers());\n      state.shippers.multipleShippers = multipleShippers;\n    }\n  },\n  actions: {\n    addConsigneeShipperRelation: function addConsigneeShipperRelation(store, _ref) {\n      var shipperAccountId = _ref.shipperAccountId,\n          consigneeAccountId = _ref.consigneeAccountId;\n      return new Promise(function (resolve, reject) {\n        accountApiService.addConsigneeShipperRelation(shipperAccountId, consigneeAccountId).then(function (response) {\n          resolve(response);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getShipperListScroll: function () {\n      var _getShipperListScroll = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref2, search) {\n        var commit, state, filtersUpdated, response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref2.commit, state = _ref2.state;\n                commit('SET_LOADING', true);\n                filtersUpdated = Object.assign(state.shippers.filters, {\n                  search: search\n                });\n                _context.next = 5;\n                return accountApiService.getShippers(filtersUpdated);\n\n              case 5:\n                response = _context.sent;\n                commit('SET_SHIPPERS_SCROLL', {\n                  shippers: response,\n                  filters: filtersUpdated\n                });\n                commit('SET_LOADING', false);\n                return _context.abrupt(\"return\", response);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getShipperListScroll(_x, _x2) {\n        return _getShipperListScroll.apply(this, arguments);\n      }\n\n      return getShipperListScroll;\n    }(),\n    resetShipperList: function resetShipperList(_ref3) {\n      var commit = _ref3.commit;\n      commit('RESET_SHIPPERS_STATE');\n    }\n  }\n};\nexport default account;",{"version":3,"sources":["/home/spineor/Downloads/aelis4-web/vue-client/src/store/modules/warehouse/account.js"],"names":["accountApiService","constants","getDefaultStateShippers","filters","page","TABLES","DEFAULT_PAGE","rows","DEFAULT_LIMIT_MINI","search","pageResults","loading","list","totalRows","multipleShippers","account","namespaced","state","shippers","mutations","SET_SHIPPERS_SCROLL","data","concat","SET_LOADING","RESET_SHIPPERS_STATE","Object","assign","actions","addConsigneeShipperRelation","store","shipperAccountId","consigneeAccountId","Promise","resolve","reject","then","response","catch","error","getShipperListScroll","commit","filtersUpdated","getShippers","resetShipperList"],"mappings":"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","sourcesContent":["import accountApiService from '@/api/accountService';\nimport constants from '@/utils/constants';\n\nconst getDefaultStateShippers = () => ({\n  filters: {\n    page: constants.TABLES.DEFAULT_PAGE,\n    rows: constants.TABLES.DEFAULT_LIMIT_MINI,\n    search: null,\n    pageResults: true\n  },\n  loading: false,\n  list: [],\n  totalRows: 0,\n  multipleShippers: false\n});\n\nconst account = {\n  namespaced: true,\n  state: {\n    shippers: getDefaultStateShippers()\n  },\n  mutations: {\n    SET_SHIPPERS_SCROLL: (state, data) => {\n      state.shippers.list = state.shippers.list.concat(data.shippers.data);\n      state.shippers.totalRows = data.shippers.totalRows;\n      // This flag allows identify that the user has multiple shippers, regardless of whether because of the filters it only shows 1 or less later\n      if (state.shippers.totalRows > 1) {\n        state.shippers.multipleShippers = true;\n      }\n      state.shippers.filters.page = data.filters.page + 1;\n    },\n    SET_LOADING: (state, loading) => {\n      state.shippers.loading = loading;\n    },\n    RESET_SHIPPERS_STATE: (state) => {\n      // we save this value of the user because is the only that not must be reset.\n      const { multipleShippers } = state.shippers;\n      Object.assign(state.shippers, getDefaultStateShippers());\n      state.shippers.multipleShippers = multipleShippers;\n    }\n  },\n  actions: {\n    addConsigneeShipperRelation(store, { shipperAccountId, consigneeAccountId }) {\n      return new Promise((resolve, reject) => {\n        accountApiService.addConsigneeShipperRelation(shipperAccountId, consigneeAccountId).then((response) => {\n          resolve(response);\n        }).catch((error) => {\n          reject(error);\n        });\n      });\n    },\n    async getShipperListScroll({ commit, state }, search) {\n      commit('SET_LOADING', true);\n      const filtersUpdated = Object.assign(state.shippers.filters, { search });\n      const response = await accountApiService.getShippers(filtersUpdated);\n      commit('SET_SHIPPERS_SCROLL', { shippers: response, filters: filtersUpdated });\n      commit('SET_LOADING', false);\n      return response;\n    },\n    resetShipperList({ commit }) {\n      commit('RESET_SHIPPERS_STATE');\n    }\n  }\n};\n\nexport default account;\n"]}]}