{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/orderEntry/components/AddDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/orderEntry/components/AddDialog.vue","mtime":1566297892000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Message } from 'element-ui';\nimport moment from 'moment';\nimport { mapGetters } from 'vuex';\nimport constants from '@/utils/constants';\nimport apiConstants from '@/utils/apiConstants';\nimport Autocomplete from '@/components/Autocomplete';\nvar formConsignee = 'form-consignee';\nexport default {\n  components: {\n    Autocomplete: Autocomplete\n  },\n  computed: _objectSpread({}, mapGetters(['orderEntry'])),\n  data: function data() {\n    return {\n      dialogVisible: false,\n      form: {\n        consigneeAccountId: null,\n        unitOfMeasure: constants.ORDER_ENTRY.UNIT_OF_MEASURE_LIST[0].value,\n        measure: constants.ORDER_ENTRY.MEASURE_LIST[0].value,\n        shipDate: new Date(),\n        totalUnits: null,\n        length: null,\n        width: null,\n        height: null,\n        productCode: '',\n        productDescription: '',\n        po: '',\n        farmName: ''\n      },\n      formRules: {\n        consigneeAccountId: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.consigneeRequired'),\n          trigger: 'submit'\n        }],\n        unitOfMeasure: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.unitOfMeasureRequired'),\n          trigger: 'blur'\n        }],\n        shipDate: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.shipDateRequired'),\n          trigger: 'blur'\n        }],\n        length: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.lengthRequired'),\n          trigger: 'blur'\n        }],\n        width: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.widthRequired'),\n          trigger: 'blur'\n        }],\n        height: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.heightRequired'),\n          trigger: 'blur'\n        }],\n        totalUnits: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.numberUnitsRequired'),\n          trigger: 'blur'\n        }]\n      },\n      unitOfMeasureOptions: constants.ORDER_ENTRY.UNIT_OF_MEASURE_LIST,\n      measureOptions: constants.ORDER_ENTRY.MEASURE_LIST,\n      urlConsignee: apiConstants.END_POINTS.ACCOUNTS.CONSIGNEE_BY_SHIPPER,\n      urlProduct: apiConstants.END_POINTS.PRODUCT_SEARCH,\n      urlFarmName: apiConstants.END_POINTS.ACCOUNTS.FARM_NAME_SEARCH\n    };\n  },\n  methods: {\n    handleOpen: function handleOpen() {\n      var _this = this;\n\n      this.form.shipDate = moment(this.orderEntry.actualFilters.shipDate, 'YYYY-MM-DD').toDate();\n      this.$nextTick(function () {\n        _this.form.consigneeAccountId = _this.orderEntry.actualFilters.consigneeAccountId;\n\n        _this.$refs[formConsignee].setLocalModel(_this.orderEntry.actualFilters.consigneeName);\n\n        _this.$refs.form.$el[0].focus();\n      });\n    },\n    handleClose: function handleClose(done) {\n      this.resetForm();\n      done();\n    },\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var minValue, _this$form, length, width, height, volume, message, confirm;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                minValue = this.orderEntry.settings.minCubesPerBox;\n                _this$form = this.form, length = _this$form.length, width = _this$form.width, height = _this$form.height;\n\n                if (this.form.measure === constants.ORDER_ENTRY.MEASURE_LIST[1].value) {\n                  length = this.form.length * constants.ORDER_ENTRY.INCH_CONVERSION_VALUE;\n                  width = this.form.width * constants.ORDER_ENTRY.INCH_CONVERSION_VALUE;\n                  height = this.form.height * constants.ORDER_ENTRY.INCH_CONVERSION_VALUE;\n                }\n\n                volume = length * width * height;\n\n                if (!(volume <= minValue)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                message = this.$t('warehouse.orderEntry.error.minValueValidationError');\n                message = message.replace('[unit]', this.$refs.unit.value).replace('[minValue]', minValue);\n                _context.next = 9;\n                return this.$confirm(message, {\n                  confirmButtonText: this.$t('OK')\n                });\n\n              case 9:\n                confirm = _context.sent;\n\n                if (!confirm) {\n                  _context.next = 12;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.getSubmitForm());\n\n              case 12:\n                return _context.abrupt(\"return\", false);\n\n              case 13:\n                return _context.abrupt(\"return\", this.getSubmitForm());\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function submitForm() {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }(),\n    resetForm: function resetForm() {\n      var _this2 = this;\n\n      this.$refs.form.resetFields();\n      this.form.consigneeId = null;\n      this.form.productCode = '';\n      this.form.productDescription = '';\n      this.$refs['form-product'].clearLocalModel();\n      this.$refs[formConsignee].clearLocalModel();\n      this.$refs['form-farm-name'].clearLocalModel();\n      this.form.shipDate = moment(this.orderEntry.actualFilters.shipDate, 'YYYY-MM-DD').toDate();\n      this.$nextTick(function () {\n        _this2.form.consigneeAccountId = _this2.orderEntry.actualFilters.consigneeAccountId;\n\n        _this2.$refs[formConsignee].setLocalModel(_this2.orderEntry.actualFilters.consigneeName);\n      });\n      this.$refs.form.$el[0].focus();\n    },\n\n    /* The datepicker has an issue when change manually, the focus is lost. */\n    handleChangeDate: function handleChangeDate() {\n      this.$refs.form.$el[4].focus();\n    },\n    isVisible: function isVisible() {\n      return this.$can(this.permissions.DATA_ENTRY.ADD_SHIPMENT) || this.$can(this.permissions.DATA_ENTRY.ADD_SHIPMENT_AFTER_CUTOFF);\n    },\n    getSubmitForm: function getSubmitForm() {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this3.$refs.form.validate(function (valid) {\n          if (valid) {\n            Message.closeAll();\n\n            var loading = _this3.$loading(constants.LOADING.DEFAULT_CONFIG);\n\n            _this3.$store.dispatch('orderEntry/save', _this3.form).then(function (response) {\n              loading.close();\n\n              _this3.$message.success(response.message);\n\n              _this3.resetForm();\n\n              _this3.$refs.form.$el[0].focus();\n\n              _this3.$store.dispatch('orderEntry/search', {});\n\n              resolve(response);\n            }).catch(function (error) {\n              loading.close();\n              reject(error);\n            });\n          } else {\n            reject(new Error(_this3.$t('common.invalid')));\n          }\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["AddDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<span v-if=\"isVisible()\">\r\n  <el-button id=\"btn-add-order\" type=\"success\" plain @click=\"dialogVisible = true\" size=\"mini\">{{ $t('warehouse.orderEntry.addOrder') }}</el-button>\r\n  <el-dialog\r\n  :close-on-click-modal=\"false\"\r\n  v-on:open=\"handleOpen\"\r\n  :title=\"$t('warehouse.orderEntry.addOrder')\"\r\n  :visible.sync=\"dialogVisible\"\r\n  width=\"85%\"\r\n  class=\"dialog-with-cols\"\r\n  :before-close=\"handleClose\">\r\n  <el-form :model=\"form\" :rules=\"formRules\" ref=\"form\" label-position=\"top\" size=\"mini\">\r\n      <el-row>\r\n          <el-col :md=\"9\" :sm=\"12\" :xs=\"24\" class=\"form-vertical-item\">\r\n              <el-form-item :label=\"$t('warehouse.orderEntry.consignee')\" prop=\"consigneeAccountId\">\r\n                  <autocomplete :model.sync=\"form.consigneeAccountId\"\r\n                      :url=\"urlConsignee\"\r\n                      :shipperAccountId=\"orderEntry.settings.shipperAccountId\"\r\n                      labelField=\"name\"\r\n                      labelFieldLastWithDash=\"number\"\r\n                      valueField=\"id\"\r\n                      id=\"form-consignee\"\r\n                      ref=\"form-consignee\" />\r\n              </el-form-item>\r\n          </el-col>\r\n          <el-col :md=\"5\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\r\n              <el-form-item :label=\"$t('warehouse.orderEntry.shipDate')\" prop=\"shipDate\">\r\n                  <el-date-picker\r\n                  v-model=\"form.shipDate\"\r\n                  @change=\"handleChangeDate\"\r\n                  :default-value=\"orderEntry.actualFilters.shipDate\"\r\n                  style=\"width: 100%\"\r\n                  format=\"MM/dd/yyyy\"\r\n                  :picker-options=\"orderEntry.shipDatePickerOptions\"\r\n                  type=\"date\"\r\n                  id=\"form-ship-date\">\r\n                  </el-date-picker>\r\n              </el-form-item>\r\n          </el-col>\r\n          <el-col :md=\"3\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\r\n              <el-form-item :label=\"$t('warehouse.orderEntry.numberOfUnitsShort')\"  prop=\"totalUnits\">\r\n                  <el-input-number\r\n                  v-model=\"form.totalUnits\"\r\n                  v-numeric-validation\r\n                  :precision=\"0\"\r\n                  :min=\"0\" :max=\"999\"\r\n                  class=\"inline-input width-100p\"\r\n                  id=\"form-number-units\"\r\n                  ref=\"unit\"\r\n                  ></el-input-number>\r\n              </el-form-item>\r\n          </el-col>\r\n          <el-col :md=\"4\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\r\n              <el-form-item :label=\"$t('warehouse.orderEntry.farmName')\" prop=\"farmName\">\r\n                  <autocomplete\r\n                  :model.sync=\"form.farmName\"\r\n                  :strict=\"false\"\r\n                  :url=\"urlFarmName\"\r\n                  labelField=\"name\"\r\n                  labelfieldSelected=\"name\"\r\n                  valueField=\"id\"\r\n                  valueFieldAdditional=\"name\"\r\n                  :maxlength=\"100\"\r\n                  id=\"form-farm-name\"\r\n                  ref=\"form-farm-name\"\r\n                  />\r\n              </el-form-item>\r\n          </el-col>\r\n          <el-col :md=\"3\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\r\n              <el-form-item :label=\"$t('warehouse.orderEntry.poNumber')\" prop=\"po\">\r\n                  <el-input\r\n                  v-model=\"form.po\"\r\n                  v-alphanumeric-validation\r\n                  maxlength=\"25\"\r\n                  clearable\r\n                  class=\"inline-input\"\r\n                  id=\"form-po-number\"\r\n                  ></el-input>\r\n              </el-form-item>\r\n          </el-col>\r\n      </el-row>\r\n      <el-row>\r\n          <el-col :md=\"4\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\r\n              <el-form-item :label=\"$t('warehouse.orderEntry.unitOfMeasure')\" prop=\"unitOfMeasure\">\r\n                  <el-select v-model=\"form.unitOfMeasure\" id=\"form-unit-of-measure\" >\r\n                      <el-option\r\n                      v-for=\"item in unitOfMeasureOptions\"\r\n                      :key=\"item.value\"\r\n                      :label=\"item.label\"\r\n                      :value=\"item.value\">\r\n                      </el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n          </el-col>\r\n          <el-col :md=\"3\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\r\n              <el-form-item :label=\"$t('warehouse.orderEntry.measure')\" prop=\"measure\">\r\n                  <el-select v-model=\"form.measure\" id=\"form-measure\">\r\n                      <el-option\r\n                      v-for=\"item in measureOptions\"\r\n                      :key=\"item.value\"\r\n                      :label=\"item.label\"\r\n                      :value=\"item.value\">\r\n                      </el-option>\r\n                  </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :md=\"2\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\r\n              <el-form-item :label=\"$t('warehouse.orderEntry.length')\" prop=\"length\">\r\n                  <el-input-number\r\n                  v-model=\"form.length\"\r\n                  v-numeric-validation\r\n                  :controls=\"false\"\r\n                  :precision=\"2\"\r\n                  :min=\"0\" :max=\"999.99\"\r\n                  class=\"inline-input width-100p\"\r\n                  id=\"form-length\"\r\n                  ref=\"length\"\r\n                  ></el-input-number>\r\n              </el-form-item>\r\n          </el-col>\r\n          <el-col :md=\"2\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\r\n              <el-form-item :label=\"$t('warehouse.orderEntry.width')\"  prop=\"width\">\r\n                  <el-input-number\r\n                  v-model=\"form.width\"\r\n                  v-numeric-validation\r\n                  :controls=\"false\"\r\n                  :precision=\"2\"\r\n                  :min=\"0\" :max=\"999.99\"\r\n                  class=\"inline-input width-100p\"\r\n                  id=\"form-width\"\r\n                  ref=\"width\"\r\n                  ></el-input-number>\r\n              </el-form-item>\r\n          </el-col>\r\n          <el-col :md=\"2\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\r\n              <el-form-item :label=\"$t('warehouse.orderEntry.height')\" prop=\"height\">\r\n                  <el-input-number\r\n                  v-model=\"form.height\"\r\n                  v-numeric-validation\r\n                  :controls=\"false\"\r\n                  :precision=\"2\"\r\n                  :min=\"0\" :max=\"999.99\"\r\n                  class=\"inline-input width-100p\"\r\n                  id=\"form-height\"\r\n                  ref=\"height\"\r\n                  ></el-input-number>\r\n              </el-form-item>\r\n          </el-col>\r\n          <el-col :md=\"4\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\r\n              <el-form-item :label=\"$t('warehouse.orderEntry.product')\" prop=\"productCode\">\r\n                  <autocomplete\r\n                  :model.sync=\"form.productCode\"\r\n                  :modelAdditional.sync=\"form.productDescription\"\r\n                  :strict=\"false\"\r\n                  :url=\"urlProduct\"\r\n                  labelField=\"code\"\r\n                  labelFieldLastWithDash=\"description\"\r\n                  labelfieldSelected=\"code\"\r\n                  valueField=\"code\"\r\n                  valueFieldAdditional=\"description\"\r\n                  :maxlength=\"5\"\r\n                  id=\"form-product\"\r\n                  ref=\"form-product\"\r\n                  />\r\n              </el-form-item>\r\n          </el-col>\r\n          <el-col :md=\"7\" :sm=\"24\" :xs=\"24\" class=\"form-vertical-item\">\r\n              <el-form-item :label=\"$t('warehouse.orderEntry.productDescription')\" prop=\"productDescription\">\r\n                  <el-input\r\n                      v-model=\"form.productDescription\"\r\n                      v-alphanumeric-validation\r\n                      maxlength=\"30\"\r\n                      clearable\r\n                      class=\"inline-input\"\r\n                      id=\"form-product-description\"\r\n                  ></el-input>\r\n              </el-form-item>\r\n          </el-col>\r\n      </el-row>\r\n  </el-form>\r\n  <div id=\"add-dialog-footer\" slot=\"footer\" class=\"dialog-footer form-vertical-item\">\r\n      <el-button type=\"primary\" id=\"form-save-button\" @click=\"submitForm()\" size=\"mini\">{{ $t('warehouse.orderEntry.addOrder') }}</el-button>\r\n      <el-button id=\"form-refresh-button\" @click=\"resetForm()\" size=\"mini\">{{ $t('warehouse.orderEntry.clear') }}</el-button>\r\n  </div>\r\n  </el-dialog>\r\n</span>\r\n</template>\r\n\r\n<script>\r\nimport { Message } from 'element-ui';\r\nimport moment from 'moment';\r\nimport { mapGetters } from 'vuex';\r\nimport constants from '@/utils/constants';\r\nimport apiConstants from '@/utils/apiConstants';\r\nimport Autocomplete from '@/components/Autocomplete';\r\n\r\nconst formConsignee = 'form-consignee';\r\n\r\nexport default {\r\n  components: { Autocomplete },\r\n  computed: {\r\n    ...mapGetters([\r\n      'orderEntry'\r\n    ])\r\n  },\r\n  data() {\r\n    return {\r\n      dialogVisible: false,\r\n      form: {\r\n        consigneeAccountId: null,\r\n        unitOfMeasure: constants.ORDER_ENTRY.UNIT_OF_MEASURE_LIST[0].value,\r\n        measure: constants.ORDER_ENTRY.MEASURE_LIST[0].value,\r\n        shipDate: new Date(),\r\n        totalUnits: null,\r\n        length: null,\r\n        width: null,\r\n        height: null,\r\n        productCode: '',\r\n        productDescription: '',\r\n        po: '',\r\n        farmName: ''\r\n      },\r\n      formRules: {\r\n        consigneeAccountId: [\r\n          { required: true, message: this.$t('warehouse.orderEntry.error.consigneeRequired'), trigger: 'submit' }\r\n        ],\r\n        unitOfMeasure: [\r\n          { required: true, message: this.$t('warehouse.orderEntry.error.unitOfMeasureRequired'), trigger: 'blur' }\r\n        ],\r\n        shipDate: [\r\n          { required: true, message: this.$t('warehouse.orderEntry.error.shipDateRequired'), trigger: 'blur' }\r\n        ],\r\n        length: [\r\n          { required: true, message: this.$t('warehouse.orderEntry.error.lengthRequired'), trigger: 'blur' }\r\n        ],\r\n        width: [\r\n          { required: true, message: this.$t('warehouse.orderEntry.error.widthRequired'), trigger: 'blur' }\r\n        ],\r\n        height: [\r\n          { required: true, message: this.$t('warehouse.orderEntry.error.heightRequired'), trigger: 'blur' }\r\n        ],\r\n        totalUnits: [\r\n          { required: true, message: this.$t('warehouse.orderEntry.error.numberUnitsRequired'), trigger: 'blur' }\r\n        ]\r\n      },\r\n      unitOfMeasureOptions: constants.ORDER_ENTRY.UNIT_OF_MEASURE_LIST,\r\n      measureOptions: constants.ORDER_ENTRY.MEASURE_LIST,\r\n      urlConsignee: apiConstants.END_POINTS.ACCOUNTS.CONSIGNEE_BY_SHIPPER,\r\n      urlProduct: apiConstants.END_POINTS.PRODUCT_SEARCH,\r\n      urlFarmName: apiConstants.END_POINTS.ACCOUNTS.FARM_NAME_SEARCH\r\n    };\r\n  },\r\n  methods: {\r\n    handleOpen() {\r\n      this.form.shipDate = moment(this.orderEntry.actualFilters.shipDate, 'YYYY-MM-DD').toDate();\r\n      this.$nextTick(() => {\r\n        this.form.consigneeAccountId = this.orderEntry.actualFilters.consigneeAccountId;\r\n        this.$refs[formConsignee].setLocalModel(this.orderEntry.actualFilters.consigneeName);\r\n        this.$refs.form.$el[0].focus();\r\n      });\r\n    },\r\n    handleClose(done) {\r\n      this.resetForm();\r\n      done();\r\n    },\r\n    async submitForm() {\r\n      const minValue = this.orderEntry.settings.minCubesPerBox;\r\n\r\n      let { length, width, height } = this.form;\r\n\r\n      if (this.form.measure === constants.ORDER_ENTRY.MEASURE_LIST[1].value) {\r\n        length = this.form.length * constants.ORDER_ENTRY.INCH_CONVERSION_VALUE;\r\n        width = this.form.width * constants.ORDER_ENTRY.INCH_CONVERSION_VALUE;\r\n        height = this.form.height * constants.ORDER_ENTRY.INCH_CONVERSION_VALUE;\r\n      }\r\n\r\n      const volume = length * width * height;\r\n      if (volume <= minValue) {\r\n        let message = this.$t('warehouse.orderEntry.error.minValueValidationError');\r\n        message = message.replace('[unit]', this.$refs.unit.value).replace('[minValue]', minValue);\r\n        const confirm = await this.$confirm(message, { confirmButtonText: this.$t('OK') });\r\n        if (confirm) {\r\n          return this.getSubmitForm();\r\n        }\r\n        return false;\r\n      }\r\n      return this.getSubmitForm();\r\n    },\r\n    resetForm() {\r\n      this.$refs.form.resetFields();\r\n      this.form.consigneeId = null;\r\n      this.form.productCode = '';\r\n      this.form.productDescription = '';\r\n      this.$refs['form-product'].clearLocalModel();\r\n      this.$refs[formConsignee].clearLocalModel();\r\n      this.$refs['form-farm-name'].clearLocalModel();\r\n      this.form.shipDate = moment(this.orderEntry.actualFilters.shipDate, 'YYYY-MM-DD').toDate();\r\n      this.$nextTick(() => {\r\n        this.form.consigneeAccountId = this.orderEntry.actualFilters.consigneeAccountId;\r\n        this.$refs[formConsignee].setLocalModel(this.orderEntry.actualFilters.consigneeName);\r\n      });\r\n      this.$refs.form.$el[0].focus();\r\n    },\r\n    /* The datepicker has an issue when change manually, the focus is lost. */\r\n    handleChangeDate() {\r\n      this.$refs.form.$el[4].focus();\r\n    },\r\n    isVisible() {\r\n      return this.$can(this.permissions.DATA_ENTRY.ADD_SHIPMENT) || this.$can(this.permissions.DATA_ENTRY.ADD_SHIPMENT_AFTER_CUTOFF);\r\n    },\r\n    getSubmitForm() {\r\n      return new Promise((resolve, reject) => {\r\n        this.$refs.form.validate((valid) => {\r\n          if (valid) {\r\n            Message.closeAll();\r\n            const loading = this.$loading(constants.LOADING.DEFAULT_CONFIG);\r\n            this.$store\r\n              .dispatch('orderEntry/save', this.form)\r\n              .then((response) => {\r\n                loading.close();\r\n                this.$message.success(response.message);\r\n                this.resetForm();\r\n                this.$refs.form.$el[0].focus();\r\n                this.$store.dispatch('orderEntry/search', {});\r\n                resolve(response);\r\n              })\r\n              .catch((error) => {\r\n                loading.close();\r\n                reject(error);\r\n              });\r\n          } else {\r\n            reject(new Error(this.$t('common.invalid')));\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style rel=\"stylesheet/scss\" lang=\"scss\">\r\ndiv#add-dialog-footer {\r\n  display: -webkit-flex;\r\n  -webkit-flex-direction: row-reverse;\r\n  display: flex;\r\n  flex-direction: row-reverse;\r\n}\r\n\r\nbutton#form-save-button {\r\n  margin-left: 10px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/warehouse/orderEntry/components"}]}