{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/src/components/ShipperList/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/components/ShipperList/index.vue","mtime":1565008433514},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.search\";\nimport _defineProperty from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { Loading } from 'element-ui';\nimport constants from '@/utils/constants';\nexport default {\n  name: 'shipperList',\n  props: {\n    /* The vuex string array actions to be called when select, this actions will be called in the order position in waterfall mode. */\n    actionStrSelectChained: {\n      type: Array,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      show: false,\n      searchText: ''\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['shippers', 'user', 'orderEntry']), {\n    noMore: function noMore() {\n      return this.shippers.list.length >= this.shippers.totalRows;\n    },\n    disabled: function disabled() {\n      return this.shippers.loading || this.noMore;\n    }\n  }),\n  methods: {\n    search: function search(resetSearch) {\n      // If sarch text is changed or reset search is mandatory we call to resetShipperList\n      if (this.searchText !== this.shippers.filters.search || resetSearch) {\n        this.$store.dispatch('account/resetShipperList');\n      }\n\n      return this.$store.dispatch('account/getShipperListScroll', this.searchText);\n    },\n    change: function () {\n      var _change = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(shipperSelected) {\n        var loading;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$store.dispatch('setUserShipperAccount', shipperSelected);\n                loading = Loading.service(constants.LOADING.DEFAULT_CONFIG);\n                _context.next = 4;\n                return this.callSelectAction();\n\n              case 4:\n                loading.close();\n                this.show = false;\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function change(_x) {\n        return _change.apply(this, arguments);\n      }\n\n      return change;\n    }(),\n    openList: function openList() {\n      var _this = this;\n\n      this.show = !this.show; // Its necessary nextTick because we need to wait the component render.\n\n      if (this.show) {\n        this.$nextTick(function () {\n          _this.$refs['search-shipper-list'].focus();\n        });\n      }\n    },\n    callSelectAction: function () {\n      var _callSelectAction = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, action, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.actionStrSelectChained) {\n                  _context2.next = 34;\n                  break;\n                }\n\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context2.prev = 4;\n                _iterator = this.actionStrSelectChained[Symbol.iterator]();\n\n              case 6:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context2.next = 20;\n                  break;\n                }\n\n                action = _step.value;\n\n                if (!(action === 'orderEntry/getSettings')) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                _context2.next = 11;\n                return this.$store.dispatch(action);\n\n              case 11:\n                res = _context2.sent;\n                this.orderEntry.settings.minCubesPerBox = res.__ob__.value.minCubesPerBox; // this.orderEntry.settings.minCubesPerBox = res.__ob__.value.minCubesPerBox ? res.__ob__.value : '0.9461';\n\n                _context2.next = 17;\n                break;\n\n              case 15:\n                _context2.next = 17;\n                return this.$store.dispatch(action);\n\n              case 17:\n                _iteratorNormalCompletion = true;\n                _context2.next = 6;\n                break;\n\n              case 20:\n                _context2.next = 26;\n                break;\n\n              case 22:\n                _context2.prev = 22;\n                _context2.t0 = _context2[\"catch\"](4);\n                _didIteratorError = true;\n                _iteratorError = _context2.t0;\n\n              case 26:\n                _context2.prev = 26;\n                _context2.prev = 27;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 29:\n                _context2.prev = 29;\n\n                if (!_didIteratorError) {\n                  _context2.next = 32;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 32:\n                return _context2.finish(29);\n\n              case 33:\n                return _context2.finish(26);\n\n              case 34:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[4, 22, 26, 34], [27,, 29, 33]]);\n      }));\n\n      function callSelectAction() {\n        return _callSelectAction.apply(this, arguments);\n      }\n\n      return callSelectAction;\n    }()\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3() {\n      var _this2 = this;\n\n      var resetSearch, loading;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              resetSearch = true;\n\n              if (!this.user.shipperAccountNumber) {\n                _context3.next = 6;\n                break;\n              }\n\n              this.callSelectAction(); // Call reset search but without loading because the shippers is already selected, and no need await.\n\n              this.search(resetSearch);\n              _context3.next = 12;\n              break;\n\n            case 6:\n              loading = Loading.service(constants.LOADING.DEFAULT_CONFIG);\n              _context3.next = 9;\n              return this.search(resetSearch);\n\n            case 9:\n              this.show = this.shippers.list && this.shippers.list.length > 1; // SHIPPERS Users Normal Flow: If the list of shippers only returns 1, then we select it by default.\n\n              if (this.shippers.list && this.shippers.list.length === 1) {\n                this.change(this.shippers.list[0]);\n              }\n\n              loading.close();\n\n            case 12:\n              // Its necessary nextTick because we need to wait the component render.\n              if (this.show) {\n                this.$nextTick(function () {\n                  _this2.$refs['search-shipper-list'].focus();\n                });\n              }\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }()\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"shipper-container\">\n    <div class=\"shipper-group\">\n      <transition name=\"slide\">\n        <div class=\"shipper-list\" v-if=\"show\">\n          <div class=\"title\">{{ $t('shipperComponent.shipperList') }}</div>\n          <div class=\"search-shippers-div\">\n            <el-input\n              v-model=\"searchText\"\n              v-alphanumeric-validation\n              maxlength=\"50\"\n              clearable\n              @change=\"search\"\n              class=\"inline-input\"\n              size=\"mini\"\n              suffix-icon=\"el-icon-search\"\n              id=\"search-shipper-list\"\n              ref=\"search-shipper-list\"\n            ></el-input>\n          </div>\n          <div\n            class=\"list\"\n            infinite-scroll-immediate\n            infinite-scroll-distance=\"100\"\n            v-infinite-scroll=\"search\"\n            infinite-scroll-disabled=\"disabled\"\n          >\n            <div v-bind:key=\"shipper.id\" v-for=\"shipper in shippers.list\" class=\"list-item\">\n              <span class=\"span-name\">{{ shipper.name }} - {{ shipper.number }}</span>\n              <span class=\"span-check\">\n                <el-radio\n                  v-model=\"user.shipperAccountNumber\"\n                  :label=\"shipper.number\"\n                  @change=\"change(shipper)\"\n                >&nbsp;</el-radio>\n              </span>\n            </div>\n          </div>\n          <p class=\"loading-shippers\" v-if=\"shippers.loading\">\n            <img src=\"@/assets/svg/loading.svg\" alt=\"loading\" />\n          </p>\n          <p class=\"scroll-ellipsis\" v-if=\"!noMore && !shippers.loading\">...</p>\n        </div>\n      </transition>\n      <div class=\"shipper-selected\">\n        <span class=\"shipper-label\">{{ user.shipperAccountLabel }}</span>\n        <span class=\"shipper-change\">\n          <el-button\n            icon=\"fa fa-random\"\n            size=\"mini\"\n            circle\n            @click=\"openList\"\n            v-if=\"shippers.multipleShippers && user.shipperAccountNumber\"\n          ></el-button>\n        </span>\n      </div>\n    </div>\n    <div class=\"shipper-container-overlay\" v-if=\"show\"></div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { Loading } from 'element-ui';\nimport constants from '@/utils/constants';\n\nexport default {\n  name: 'shipperList',\n  props: {\n    /* The vuex string array actions to be called when select, this actions will be called in the order position in waterfall mode. */\n    actionStrSelectChained: {\n      type: Array,\n      default: null\n    }\n  },\n  data() {\n    return {\n      show: false,\n      searchText: ''\n    };\n  },\n  computed: {\n    ...mapGetters([\n      'shippers',\n      'user',\n      'orderEntry'\n    ]),\n    noMore() {\n      return this.shippers.list.length >= this.shippers.totalRows;\n    },\n    disabled() {\n      return this.shippers.loading || this.noMore;\n    }\n  },\n  methods: {\n    search(resetSearch) {\n      // If sarch text is changed or reset search is mandatory we call to resetShipperList\n      if ((this.searchText !== this.shippers.filters.search) || resetSearch) {\n        this.$store.dispatch('account/resetShipperList');\n      }\n      return this.$store.dispatch('account/getShipperListScroll', this.searchText);\n    },\n    async change(shipperSelected) {\n      this.$store.dispatch('setUserShipperAccount', shipperSelected);\n      const loading = Loading.service(constants.LOADING.DEFAULT_CONFIG);\n      await this.callSelectAction();\n      loading.close();\n      this.show = false;\n    },\n    openList() {\n      this.show = !this.show;\n      // Its necessary nextTick because we need to wait the component render.\n      if (this.show) {\n        this.$nextTick(() => {\n          this.$refs['search-shipper-list'].focus();\n        });\n      }\n    },\n    async callSelectAction() {\n      if (this.actionStrSelectChained) {\n        for (const action of this.actionStrSelectChained) {\n          if (action === 'orderEntry/getSettings') {\n            const res = await this.$store.dispatch(action);\n            this.orderEntry.settings.minCubesPerBox = res.__ob__.value.minCubesPerBox;\n            // this.orderEntry.settings.minCubesPerBox = res.__ob__.value.minCubesPerBox ? res.__ob__.value : '0.9461';\n          } else {\n            await this.$store.dispatch(action);\n          }\n        }\n      }\n    }\n  },\n  async mounted() {\n    const resetSearch = true;\n    if (this.user.shipperAccountNumber) {\n      this.callSelectAction();\n      // Call reset search but without loading because the shippers is already selected, and no need await.\n      this.search(resetSearch);\n    } else {\n      const loading = Loading.service(constants.LOADING.DEFAULT_CONFIG);\n      await this.search(resetSearch);\n      this.show = this.shippers.list && this.shippers.list.length > 1;\n\n      // SHIPPERS Users Normal Flow: If the list of shippers only returns 1, then we select it by default.\n      if (this.shippers.list && this.shippers.list.length === 1) {\n        this.change(this.shippers.list[0]);\n      }\n      loading.close();\n    }\n\n    // Its necessary nextTick because we need to wait the component render.\n    if (this.show) {\n      this.$nextTick(() => {\n        this.$refs['search-shipper-list'].focus();\n      });\n    }\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\">\n    .shipper-container {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n        align-content: center;\n        .shipper-group {\n            position: fixed;\n            width: 600px;\n            z-index: 1000;\n            display: flex;\n            flex-wrap: wrap;\n            justify-content: center;\n            align-content: center;\n            .shipper-selected {\n                text-align: center;\n                width: 300px;\n                color: #43425D;\n                font-size: 10px;\n                font-weight: bold;\n                position: relative;\n                border-radius: 5px;\n                display: flex;\n                flex-wrap: wrap;\n                justify-content: center;\n                align-content: center;\n                .is-circle {\n                    padding: 1px 2px 2px 2px;\n                    background-color: #43425D;\n                    color: white;\n                    margin-left: 7px;\n                }\n                i {\n                    font-size: 9px;\n                    cursor: pointer;\n                    padding: 1px 1px 0px 1px;\n                }\n                &:before {\n                    content: \"\";\n                    position: absolute;\n                    background-color: #cdd7df;\n                    top: -4%;\n                    bottom: -11%; left: -3%; right: -3%;\n                    border-radius: 5px;\n                    z-index: -1;\n                    height: 35px;\n                    box-shadow: 2px 2px 3px rgba(0, 0, 0, 0.16);\n                    transform: perspective(10em) rotateX(-30deg);\n                }\n                .shipper-label {\n                    white-space: nowrap;\n                    overflow: hidden;\n                    text-overflow: ellipsis;\n                    max-width: 260px;\n                    display: inline-block;\n                    margin-top: 9px;\n                }\n                .shipper-change {\n                    margin-top: 7px;\n                }\n            }\n            .shipper-list {\n                width: 400px;\n                height: 440px;\n                background-color: white;\n                border-radius: 10px;\n                box-shadow: 6px 6px 15px rgba(0, 0, 0, 0.16);\n                .title {\n                    display: flex;\n                    flex-wrap: wrap;\n                    justify-content: center;\n                    align-content: center;\n                    height: 60px;\n                    background-color: #00335B;\n                    color: white;\n                    font-size: 18px;\n                }\n                .search-shippers-div {\n                    padding: 20px 40px 10px 40px;\n                }\n                .list {\n                    background-color: white;\n                    color: #00335B;\n                    height: 280px;\n                    overflow: auto;\n                    font-size: 12px;\n                    .list-item {\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        height: 35px;\n                        border-bottom: solid 1px #dbd9d9;\n                        margin: 0px 25px;\n                        .span-name {\n                            width: 90%;\n                            text-align: right;\n                            overflow: hidden;\n                            text-overflow: ellipsis;\n                            white-space: nowrap;\n                            padding: 0px 20px;\n                        }\n                        .span-check {\n                            width: 10%;\n                            text-align: left;\n                        }\n                    }\n                }\n                .loading-shippers {\n                    text-align: center;\n                    margin-top: 0px;\n                    img {\n                        width: 40px;\n                    }\n                }\n                .scroll-ellipsis {\n                    text-align: center;\n                    margin-top: 0px;\n                }\n            }\n        }\n    }\n    .shipper-container-overlay {\n        min-height: calc(100vh - 50px);\n        width: 100%;\n        position: fixed;\n        overflow: hidden;\n        background-color: #d3d2d2;\n        opacity: 0.5;\n        z-index: 2;\n    }\n</style>\n"],"sourceRoot":"src/components/ShipperList"}]}