{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/orderEntry/components/unitsDetail/UnitsDetailDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/orderEntry/components/unitsDetail/UnitsDetailDialog.vue","mtime":1566297892000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _defineProperty from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport constants from '@/utils/constants';\nimport PrintUnitLabel from \"./PrintUnitLabel\";\nexport default {\n  components: {\n    PrintUnitLabel: PrintUnitLabel\n  },\n  computed: _objectSpread({}, mapGetters(['orderEntry', 'extensions'])),\n  props: {\n    unitsConsolidateId: {\n      type: Number,\n      default: null\n    },\n    consigneeAccountId: {\n      type: Number,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      dialogVisible: false,\n      sizes: constants.TABLES.DEFAULT_LIMIT_SIZES,\n      search: ''\n    };\n  },\n  methods: {\n    handleClose: function handleClose(done) {\n      this.$store.dispatch('orderEntry/search', {});\n      done();\n    },\n    handleOpenDialog: function handleOpenDialog() {\n      this.dialogVisible = true;\n      this.findUnitsByConsignee(constants.TABLES.DEFAULT_PAGE);\n    },\n    handleSearchChangeLimit: function handleSearchChangeLimit(val) {\n      this.$store.dispatch('orderEntry/findUnits', {\n        rows: val,\n        page: constants.TABLES.DEFAULT_PAGE\n      });\n    },\n    handleSearchUnit: function handleSearchUnit() {\n      this.findUnitsByConsignee(constants.TABLES.DEFAULT_PAGE);\n    },\n    findUnitsByConsignee: function findUnitsByConsignee(page) {\n      var _this = this;\n\n      var loading = this.$loading(constants.LOADING.DEFAULT_CONFIG);\n      return this.$store.dispatch('orderEntry/findUnits', {\n        unitsConsolidateId: this.unitsConsolidateId,\n        unitId: this.search,\n        page: page,\n        returnAllUnitIds: this.getReturnAllUnitIdsExtensions()\n      }).then(function (_ref) {\n        var data = _ref.data;\n        loading.close(); // if we are in extensions mode and unitIds comes, then we need to update the unitIds selected for consolidate,\n        // this happens when it checks the consolidate, then when we open this detail dialog the selected unitIds are filled.\n\n        if (_this.orderEntry.isCreatingExtension && data.unitIds) {\n          _this.$store.dispatch('extensions/updateUnitsAfterLoadDetail', {\n            consolidateId: _this.unitsConsolidateId,\n            consigneeAccountId: _this.consigneeAccountId,\n            unitIds: data.unitIds\n          });\n        }\n      }).catch(function (error) {\n        _this.$message({\n          showClose: true,\n          message: error.response.data.message,\n          type: 'error',\n          duration: constants.duration\n        });\n\n        loading.close();\n      });\n    },\n    handleDeleteAction: function handleDeleteAction(id, close) {\n      var _this2 = this;\n\n      var loading = this.$loading(constants.LOADING.DEFAULT_CONFIG);\n      this.$store.dispatch('orderEntry/deleteUnit', id).then(function (response) {\n        loading.close();\n\n        _this2.$message.success(response.message);\n\n        _this2.$store.dispatch('orderEntry/search', {});\n\n        if (close) {\n          _this2.dialogVisible = false;\n        } else {\n          _this2.$store.dispatch('orderEntry/findUnits', {\n            id: _this2.unitsConsolidateId\n          });\n        }\n      }).catch(function (error) {\n        loading.close();\n\n        _this2.$message({\n          showClose: true,\n          message: error.response.data.message,\n          type: 'error',\n          duration: constants.MESSAGES.LONG_DURATION\n        });\n      });\n    },\n    handleDelete: function handleDelete(id, shipDate) {\n      var _this3 = this;\n\n      var message = this.$t('warehouse.orderEntry.unitDeleteConfirmation');\n      message = message.replace('[id]', id).replace('[shipDate]', shipDate);\n\n      if (this.orderEntry.searchUnitResponse.data.length === 1) {\n        return this.$confirm(this.$t('warehouse.orderEntry.lastUnitDeleteConfirmation'), {\n          confirmButtonText: this.$t('common.yes')\n        }).then(function () {\n          _this3.handleDeleteAction(id, true);\n        }).catch(function () {});\n      }\n\n      return this.$confirm(message, {\n        confirmButtonText: this.$t('common.yes')\n      }).then(function () {\n        _this3.handleDeleteAction(id);\n      });\n    },\n    showDeleteButton: function showDeleteButton() {\n      var hasDeletePermission = this.$can(this.permissions.DATA_ENTRY.DELETE_AFTER_CUTOFF_FINALIZED, this.orderEntry.headerUnitList.status) || this.$can(this.permissions.DATA_ENTRY.DELETE_AFTER_CUTOFF_PENDING, this.orderEntry.headerUnitList.status) || this.$can(this.permissions.DATA_ENTRY.DELETE_BEFORE_CUTOFF_FINALIZED, this.orderEntry.headerUnitList.status) || this.$can(this.permissions.DATA_ENTRY.DELETE_BEFORE_CUTOFF_PENDING, this.orderEntry.headerUnitList.status);\n      return hasDeletePermission;\n    },\n    getActualConsolidateExtensions: function getActualConsolidateExtensions() {\n      var _this4 = this;\n\n      if (Object.prototype.hasOwnProperty.call(this.extensions.selectedByConsignee, this.consigneeAccountId)) {\n        var consolidationSelected = this.extensions.selectedByConsignee[this.consigneeAccountId].consolidations.find(function (c) {\n          return c.id === _this4.unitsConsolidateId;\n        });\n        return consolidationSelected;\n      }\n\n      return null;\n    },\n    getReturnAllUnitIdsExtensions: function getReturnAllUnitIdsExtensions() {\n      var returnAllUnitIds = false;\n\n      if (this.orderEntry.isCreatingExtension) {\n        var consolidationSelectedExists = this.getActualConsolidateExtensions();\n\n        if (consolidationSelectedExists) {\n          returnAllUnitIds = consolidationSelectedExists.allDetailsCheckedInitially;\n        }\n      }\n\n      return returnAllUnitIds;\n    },\n    isCheckedExtension: function isCheckedExtension(unitId) {\n      var consolidationSelectedExists = this.getActualConsolidateExtensions();\n\n      if (consolidationSelectedExists) {\n        var unitIdSelected = consolidationSelectedExists.units.find(function (u) {\n          return u === unitId;\n        });\n\n        if (unitIdSelected) {\n          return true;\n        }\n\n        return false;\n      }\n\n      return false;\n    },\n    handleUpdateSelectedUnitConsolidate: function handleUpdateSelectedUnitConsolidate(unitId) {\n      var unitConsolidationSelected = {\n        consigneeAccountId: this.orderEntry.headerUnitList.consigneeAccountId,\n        consigneeAccountName: this.orderEntry.headerUnitList.consigneeName,\n        consolidateId: this.unitsConsolidateId,\n        consolidateTotal: this.orderEntry.headerUnitList.numberUnits,\n        unitId: unitId\n      };\n      this.$store.dispatch('extensions/updateSelecteUnit', unitConsolidationSelected);\n    }\n  }\n};",{"version":3,"sources":["UnitsDetailDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<span>\r\n    <i class=\"el-icon-search header-info-dialog-value icon-action\" id=\"btn-units-detail\" @click=\"handleOpenDialog\" size=\"mini\" icon=\"el-icon-plus\"></i>\r\n    <el-dialog\r\n    :close-on-click-modal=\"false\"\r\n    :title=\"orderEntry.isCreatingExtension ? $t('warehouse.orderEntry.extensions.selectDetails') : $t('warehouse.orderEntry.unitsDetailTitle')\"\r\n    :visible.sync=\"dialogVisible\"\r\n    width=\"77%\"\r\n    :before-close=\"handleClose\">\r\n    <el-col :span=\"4\">\r\n      <label class=\"margin-bottom-small-list\">{{ $t('warehouse.orderEntry.orderNumber') }}</label>\r\n    </el-col>\r\n    <el-col :span=\"4\">\r\n      <span class=\"span-small-list \"> {{ orderEntry.headerUnitList.orderNumber }} </span>\r\n    </el-col>\r\n      <el-col :span=\"4\">\r\n        <label class=\"margin-bottom-small-list\">{{ $t('warehouse.orderEntry.shipDate') }}</label>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <span class=\"span-small-list\"> {{ orderEntry.headerUnitList.shipDate | moment(\"MM/DD/YYYY\") }} </span>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <label class=\"margin-bottom-small-list\">{{ $t('warehouse.orderEntry.consignee') }}</label>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <span class=\"span-small-list\"> {{ orderEntry.headerUnitList.consigneeName }} </span>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <label class=\"margin-bottom-small-list\">{{ $t('warehouse.orderEntry.height') }}</label>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <span class=\"span-small-list\"> {{ orderEntry.headerUnitList.height }} </span>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <label class=\"margin-bottom-small-list\">{{ $t('warehouse.orderEntry.length') }}</label>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <span class=\"span-small-list\"> {{ orderEntry.headerUnitList.length }} </span>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <label class=\"margin-bottom-small-list\">{{ $t('warehouse.orderEntry.width') }}</label>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <span class=\"span-small-list\"> {{ orderEntry.headerUnitList.width }} </span>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <label class=\"margin-bottom-small-list\">{{ $t('warehouse.orderEntry.productLong') }}</label>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <span class=\"span-small-list\"> {{ orderEntry.headerUnitList.productCode }} </span>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <label class=\"margin-bottom-small-list\">{{ $t('warehouse.orderEntry.productDescription') }}</label>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <span class=\"span-small-list\"> {{ orderEntry.headerUnitList.productDescription }} </span>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <label class=\"margin-bottom-small-list\">{{ $t('warehouse.orderEntry.numberOfUnits') }}</label>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <span class=\"span-small-list\"> {{ orderEntry.headerUnitList.numberUnits }} </span>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <label class=\"margin-bottom-small-list\">{{ $t('warehouse.orderEntry.unitOfMeasure') }}</label>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <span class=\"span-small-list\"> {{ orderEntry.headerUnitList.unitOfMeasureName }} </span>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <label class=\"margin-bottom-small-list\">{{ $t('warehouse.orderEntry.measure') }}</label>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <span class=\"span-small-list\"> {{ orderEntry.headerUnitList.measure }} </span>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <label class=\"margin-bottom-small-list\">{{ $t('warehouse.orderEntry.poNumber') }}</label>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <span class=\"span-small-list\"> {{ orderEntry.headerUnitList.poNumber }} </span>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <label class=\"margin-bottom-small-list\">{{ $t('warehouse.orderEntry.status') }}</label>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <span class=\"span-small-list\">{{ $t('warehouse.orderEntry.finalized') }}</span>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <label class=\"margin-bottom-small-list\">{{ $t('warehouse.orderEntry.farmBroker') }}</label>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <span class=\"span-small-list\">{{ orderEntry.headerUnitList.farmName }}</span>\r\n      </el-col>\r\n      <div>\r\n        <span class=\"title-list\">{{ $t('warehouse.orderEntry.units') }}</span>\r\n        <div>\r\n          <el-col :span=\"3\" class=\"search-unitid-div\">\r\n            <label class=\"margin-bottom-small-list label-search-unitid\">{{ $t('warehouse.orderEntry.findUnit') }}</label>\r\n          </el-col>\r\n          <el-col :span=\"4\">\r\n            <div>\r\n              <el-input\r\n                v-model=\"search\"\r\n                v-alphanumeric-validation\r\n                maxlength=\"50\"\r\n                clearable\r\n                @change=\"handleSearchUnit\"\r\n                class=\"inline-input\"\r\n                size=\"mini\"\r\n                suffix-icon=\"el-icon-search\"\r\n                id=\"search-unitid\"\r\n                ref=\"search-unitid\"\r\n                ></el-input>\r\n            </div>\r\n          </el-col>\r\n          <el-button id=\"btn-ok-dialog-extensions-top\" class=\"btn-ok-dialog-extensions\" type=\"primary\" size=\"mini\" @click=\"dialogVisible = false\" v-if=\"orderEntry.isCreatingExtension\"> {{ $t('common.ok') }}</el-button>\r\n        </div>\r\n      </div>\r\n        <el-table\r\n          stripe\r\n          v-loading=\"orderEntry.loadingSearch\"\r\n          id=\"units-data-list\"\r\n          size=\"mini\"\r\n          tooltip-effect=\"dark\"\r\n          sortable\r\n          width=\"80%\"\r\n          class=\"dark-blue-table\"\r\n          :empty-text=\"$t('common.notAbleToFindRecords')\"\r\n          :data=\"orderEntry.searchUnitResponse.data\">\r\n          <el-table-column\r\n              prop=\"unitId\"\r\n              :label=\"$t('common.unit')\"\r\n              align=\"center\"\r\n              min-width=\"100\">\r\n              <template slot-scope=\"scope\">\r\n                <span class=\"font-size-14px\"> {{ scope.row.unitId }} </span>\r\n              </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            align=\"center\" min-width=\"100\"\r\n            :label=\"$t('common.options')\"\r\n            v-if=\"!orderEntry.isCreatingExtension\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tooltip class=\"item\" effect=\"dark\" :content=\"$t('warehouse.orderEntry.print')\" placement=\"top-start\">\r\n                <print-unit-label :unitId=\"scope.row.unitId\" :labelPrinted.sync=\"scope.row.labelPrinted\" />\r\n              </el-tooltip>\r\n              <el-tooltip class=\"item\" effect=\"dark\" :content=\"$t('warehouse.orderEntry.delete')\" placement=\"top-start\">\r\n                <i v-if=\"showDeleteButton()\" class=\"el-icon-delete icon-action\" type=\"primary\" size=\"mini\" @click=\"handleDelete(scope.row.unitId, scope.row.shipDate, orderEntry.searchUnitResponse.data)\"></i>\r\n              </el-tooltip>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            align=\"center\" min-width=\"100\"\r\n            :label=\"$t('warehouse.orderEntry.extensions.requestExtension')\"\r\n            v-if=\"orderEntry.isCreatingExtension\">\r\n            <template slot-scope=\"scope\">\r\n                <el-checkbox :value=\"isCheckedExtension(scope.row.id)\" @change=\"handleUpdateSelectedUnitConsolidate(scope.row.id)\"  label=\"\" class=\"green-indeterminate-checkbox\"></el-checkbox>\r\n            </template>\r\n          </el-table-column>\r\n      </el-table>\r\n      <el-pagination\r\n        @size-change=\"handleSearchChangeLimit\"\r\n        @current-change=\"findUnitsByConsignee\"\r\n        :current-page.sync=\"orderEntry.actualFiltersUnits.page\"\r\n        :page-size=\"orderEntry.actualFiltersUnits.rows\"\r\n        :page-sizes=\"sizes\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"orderEntry.searchUnitResponse.totalRows\">\r\n      </el-pagination>\r\n      <el-button id=\"btn-ok-dialog-extensions-bottom\" class=\"btn-ok-dialog-extensions\" type=\"primary\" size=\"mini\" @click=\"dialogVisible = false\" v-if=\"orderEntry.isCreatingExtension\"> {{ $t('common.ok') }}</el-button>\r\n    </el-dialog>\r\n</span>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport constants from '@/utils/constants';\r\nimport PrintUnitLabel from './PrintUnitLabel';\r\n\r\nexport default {\r\n  components: { PrintUnitLabel },\r\n  computed: {\r\n    ...mapGetters([\r\n      'orderEntry',\r\n      'extensions'\r\n    ])\r\n  },\r\n  props: {\r\n    unitsConsolidateId: {\r\n      type: Number,\r\n      default: null\r\n    },\r\n    consigneeAccountId: {\r\n      type: Number,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      dialogVisible: false,\r\n      sizes: constants.TABLES.DEFAULT_LIMIT_SIZES,\r\n      search: ''\r\n    };\r\n  },\r\n  methods: {\r\n    handleClose(done) {\r\n      this.$store.dispatch('orderEntry/search', {});\r\n      done();\r\n    },\r\n    handleOpenDialog() {\r\n      this.dialogVisible = true;\r\n      this.findUnitsByConsignee(constants.TABLES.DEFAULT_PAGE);\r\n    },\r\n    handleSearchChangeLimit(val) {\r\n      this.$store.dispatch('orderEntry/findUnits', { rows: val, page: constants.TABLES.DEFAULT_PAGE });\r\n    },\r\n    handleSearchUnit() {\r\n      this.findUnitsByConsignee(constants.TABLES.DEFAULT_PAGE);\r\n    },\r\n    findUnitsByConsignee(page) {\r\n      const loading = this.$loading(constants.LOADING.DEFAULT_CONFIG);\r\n      return this.$store.dispatch('orderEntry/findUnits', {\r\n        unitsConsolidateId: this.unitsConsolidateId, unitId: this.search, page, returnAllUnitIds: this.getReturnAllUnitIdsExtensions()\r\n      }).then(({ data }) => {\r\n        loading.close();\r\n        // if we are in extensions mode and unitIds comes, then we need to update the unitIds selected for consolidate,\r\n        // this happens when it checks the consolidate, then when we open this detail dialog the selected unitIds are filled.\r\n        if (this.orderEntry.isCreatingExtension && data.unitIds) {\r\n          this.$store.dispatch('extensions/updateUnitsAfterLoadDetail', { consolidateId: this.unitsConsolidateId, consigneeAccountId: this.consigneeAccountId, unitIds: data.unitIds });\r\n        }\r\n      }).catch((error) => {\r\n        this.$message({\r\n          showClose: true,\r\n          message: error.response.data.message,\r\n          type: 'error',\r\n          duration: constants.duration\r\n        });\r\n        loading.close();\r\n      });\r\n    },\r\n    handleDeleteAction(id, close) {\r\n      const loading = this.$loading(constants.LOADING.DEFAULT_CONFIG);\r\n      this.$store.dispatch('orderEntry/deleteUnit', id).then((response) => {\r\n        loading.close();\r\n        this.$message.success(response.message);\r\n        this.$store.dispatch('orderEntry/search', {});\r\n        if (close) {\r\n          this.dialogVisible = false;\r\n        } else {\r\n          this.$store.dispatch('orderEntry/findUnits', { id: this.unitsConsolidateId });\r\n        }\r\n      }).catch((error) => {\r\n        loading.close();\r\n        this.$message({\r\n          showClose: true,\r\n          message: error.response.data.message,\r\n          type: 'error',\r\n          duration: constants.MESSAGES.LONG_DURATION\r\n        });\r\n      });\r\n    },\r\n    handleDelete(id, shipDate) {\r\n      let message = this.$t('warehouse.orderEntry.unitDeleteConfirmation');\r\n      message = message.replace('[id]', id).replace('[shipDate]', shipDate);\r\n\r\n      if (this.orderEntry.searchUnitResponse.data.length === 1) {\r\n        return this.$confirm(this.$t('warehouse.orderEntry.lastUnitDeleteConfirmation'), { confirmButtonText: this.$t('common.yes') })\r\n          .then(() => {\r\n            this.handleDeleteAction(id, true);\r\n          })\r\n          .catch(() => {});\r\n      }\r\n      return this.$confirm(message, { confirmButtonText: this.$t('common.yes') })\r\n        .then(() => {\r\n          this.handleDeleteAction(id);\r\n        });\r\n    },\r\n    showDeleteButton() {\r\n      const hasDeletePermission = this.$can(this.permissions.DATA_ENTRY.DELETE_AFTER_CUTOFF_FINALIZED, this.orderEntry.headerUnitList.status)\r\n           || this.$can(this.permissions.DATA_ENTRY.DELETE_AFTER_CUTOFF_PENDING, this.orderEntry.headerUnitList.status)\r\n           || this.$can(this.permissions.DATA_ENTRY.DELETE_BEFORE_CUTOFF_FINALIZED, this.orderEntry.headerUnitList.status)\r\n           || this.$can(this.permissions.DATA_ENTRY.DELETE_BEFORE_CUTOFF_PENDING, this.orderEntry.headerUnitList.status);\r\n      return hasDeletePermission;\r\n    },\r\n    getActualConsolidateExtensions() {\r\n      if (Object.prototype.hasOwnProperty.call(this.extensions.selectedByConsignee, this.consigneeAccountId)) {\r\n        const consolidationSelected = this.extensions.selectedByConsignee[this.consigneeAccountId].consolidations.find(c => c.id === this.unitsConsolidateId);\r\n        return consolidationSelected;\r\n      }\r\n      return null;\r\n    },\r\n    getReturnAllUnitIdsExtensions() {\r\n      let returnAllUnitIds = false;\r\n      if (this.orderEntry.isCreatingExtension) {\r\n        const consolidationSelectedExists = this.getActualConsolidateExtensions();\r\n        if (consolidationSelectedExists) {\r\n          returnAllUnitIds = consolidationSelectedExists.allDetailsCheckedInitially;\r\n        }\r\n      }\r\n      return returnAllUnitIds;\r\n    },\r\n    isCheckedExtension(unitId) {\r\n      const consolidationSelectedExists = this.getActualConsolidateExtensions();\r\n      if (consolidationSelectedExists) {\r\n        const unitIdSelected = consolidationSelectedExists.units.find(u => u === unitId);\r\n        if (unitIdSelected) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      return false;\r\n    },\r\n    handleUpdateSelectedUnitConsolidate(unitId) {\r\n      const unitConsolidationSelected = {\r\n        consigneeAccountId: this.orderEntry.headerUnitList.consigneeAccountId,\r\n        consigneeAccountName: this.orderEntry.headerUnitList.consigneeName,\r\n        consolidateId: this.unitsConsolidateId,\r\n        consolidateTotal: this.orderEntry.headerUnitList.numberUnits,\r\n        unitId\r\n      };\r\n      this.$store.dispatch('extensions/updateSelecteUnit', unitConsolidationSelected);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style rel=\"stylesheet/scss\" lang=\"scss\">\r\n  .search-unitid-div {\r\n    padding: 0px !important;\r\n    margin-bottom: 20px !important;\r\n  }\r\n\r\n  .label-search-unitid {\r\n    text-align: left !important;\r\n  }\r\n  .btn-ok-dialog-extensions {\r\n    float: right;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/views/warehouse/orderEntry/components/unitsDetail"}]}