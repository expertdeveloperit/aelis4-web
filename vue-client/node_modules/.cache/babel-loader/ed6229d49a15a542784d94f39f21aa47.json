{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/thread-loader/dist/cjs.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/eslint-loader/index.js??ref--13-0!/home/spineor/Downloads/aelis4-web/vue-client/src/utils/request.js","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/utils/request.js","mtime":1562577473000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nvar _this = this;\n\nimport axios from 'axios';\nimport { Message, MessageBox, Loading } from 'element-ui';\nimport constants from '@/utils/constants';\nimport authService from '@/utils/auth/auth0Service'; // axios\n\nvar request = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  // api base_url\n  timeout: 55000\n}); // request\n\nrequest.interceptors.request.use(function (config) {\n  if (authService.accessToken) {\n    config.headers.Authorization = \"Bearer \".concat(authService.accessToken);\n  }\n\n  return config;\n}, function (error) {\n  // Do something with request error\n  Promise.reject(error);\n});\n\nvar getBlobMessageError =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(error) {\n    var blobErrorMessage, responseBlob, responseData, responseText;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(error.response.data instanceof Blob)) {\n              _context.next = 8;\n              break;\n            }\n\n            responseBlob = error.response.data;\n            responseData = null;\n            _context.next = 5;\n            return new Promise(function (resolve, reject) {\n              var reader = new FileReader();\n              reader.addEventListener('abort', reject);\n              reader.addEventListener('error', reject);\n              reader.addEventListener('loadend', function () {\n                resolve(reader.result);\n              });\n              reader.readAsText(responseBlob);\n            });\n\n          case 5:\n            responseText = _context.sent;\n            responseData = JSON.parse(responseText);\n            blobErrorMessage = responseData.message;\n\n          case 8:\n            return _context.abrupt(\"return\", blobErrorMessage);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getBlobMessageError(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // response\n\n\nrequest.interceptors.response.use(function (response) {\n  var res = response.data;\n\n  if (response.status !== 200 && res.code !== 20000) {\n    Message({\n      message: res.message,\n      type: 'error',\n      duration: 5 * 1000\n    });\n\n    if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\n      MessageBox.confirm('You have been logged out, you can cancel to stay on this page, or log in again', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(function () {\n        _this.authService.logOut();\n      });\n    }\n\n    return Promise.reject(new Error('error'));\n  }\n\n  if (response.data instanceof Blob) {\n    return response;\n  }\n\n  return response.data;\n},\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(error) {\n    var loading, blobErrorMessage;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            loading = Loading.service(constants.LOADING.DEFAULT_CONFIG);\n\n            if (!error.response) {\n              _context2.next = 8;\n              break;\n            }\n\n            _context2.next = 4;\n            return getBlobMessageError(error);\n\n          case 4:\n            blobErrorMessage = _context2.sent;\n\n            if (error.response.status === constants.HTTP_STATUS.PRECONDITION_FAILED) {\n              Message.warning(error.response.data.message || blobErrorMessage);\n            } else {\n              Message({\n                showClose: true,\n                message: error.response.data.message || blobErrorMessage,\n                type: 'error',\n                duration: constants.MESSAGES.LONG_DURATION\n              });\n            }\n\n            _context2.next = 10;\n            break;\n\n          case 8:\n            /* Network Error 401 403 */\n            Message({\n              showClose: true,\n              message: constants.HTTP_MESSAGES.INVALID_TOKEN,\n              type: 'error',\n              duration: constants.MESSAGES.LONG_DURATION\n            });\n            authService.login({\n              target: window.location.pathname\n            });\n\n          case 10:\n            loading.close();\n            return _context2.abrupt(\"return\", Promise.reject(error));\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport default request;",{"version":3,"sources":["/home/spineor/Downloads/aelis4-web/vue-client/src/utils/request.js"],"names":["axios","Message","MessageBox","Loading","constants","authService","request","create","baseURL","process","env","VUE_APP_BASE_API","timeout","interceptors","use","config","accessToken","headers","Authorization","error","Promise","reject","getBlobMessageError","response","data","Blob","responseBlob","responseData","resolve","reader","FileReader","addEventListener","result","readAsText","responseText","JSON","parse","blobErrorMessage","message","res","status","code","type","duration","confirm","confirmButtonText","cancelButtonText","then","logOut","Error","loading","service","LOADING","DEFAULT_CONFIG","HTTP_STATUS","PRECONDITION_FAILED","warning","showClose","MESSAGES","LONG_DURATION","HTTP_MESSAGES","INVALID_TOKEN","login","target","window","location","pathname","close"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { Message, MessageBox, Loading } from 'element-ui';\nimport constants from '@/utils/constants';\nimport authService from '@/utils/auth/auth0Service';\n\n// axios\nconst request = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API, // api base_url\n  timeout: 55000\n});\n\n// request\nrequest.interceptors.request.use(\n  (config) => {\n    if (authService.accessToken) {\n      config.headers.Authorization = `Bearer ${authService.accessToken}`;\n    }\n    return config;\n  },\n  (error) => {\n    // Do something with request error\n    Promise.reject(error);\n  }\n);\n\nconst getBlobMessageError = async (error) => {\n  let blobErrorMessage;\n  if (error.response.data instanceof Blob) {\n    const responseBlob = error.response.data;\n    let responseData = null;\n    const responseText = await new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.addEventListener('abort', reject);\n      reader.addEventListener('error', reject);\n      reader.addEventListener('loadend', () => {\n        resolve(reader.result);\n      });\n      reader.readAsText(responseBlob);\n    });\n    responseData = JSON.parse(responseText);\n    blobErrorMessage = responseData.message;\n  }\n  return blobErrorMessage;\n};\n\n// response\nrequest.interceptors.response.use(\n  (response) => {\n    const res = response.data;\n    if (response.status !== 200 && res.code !== 20000) {\n      Message({\n        message: res.message,\n        type: 'error',\n        duration: 5 * 1000\n      });\n\n      if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\n        MessageBox.confirm(\n          'You have been logged out, you can cancel to stay on this page, or log in again',\n          {\n            confirmButtonText: 'Confirm',\n            cancelButtonText: 'Cancel',\n            type: 'warning'\n          }\n        ).then(() => {\n          this.authService.logOut();\n        });\n      }\n      return Promise.reject(new Error('error'));\n    }\n    if (response.data instanceof Blob) {\n      return response;\n    }\n    return response.data;\n  },\n  async (error) => {\n    const loading = Loading.service(constants.LOADING.DEFAULT_CONFIG);\n    if (error.response) {\n      const blobErrorMessage = await getBlobMessageError(error);\n      if (error.response.status === constants.HTTP_STATUS.PRECONDITION_FAILED) {\n        Message.warning(error.response.data.message || blobErrorMessage);\n      } else {\n        Message({\n          showClose: true,\n          message: error.response.data.message || blobErrorMessage,\n          type: 'error',\n          duration: constants.MESSAGES.LONG_DURATION\n        });\n      }\n    } else {\n      /* Network Error 401 403 */\n      Message({\n        showClose: true,\n        message: constants.HTTP_MESSAGES.INVALID_TOKEN,\n        type: 'error',\n        duration: constants.MESSAGES.LONG_DURATION\n      });\n      authService.login({ target: window.location.pathname });\n    }\n    loading.close();\n    return Promise.reject(error);\n  }\n);\n\nexport default request;\n"]}]}