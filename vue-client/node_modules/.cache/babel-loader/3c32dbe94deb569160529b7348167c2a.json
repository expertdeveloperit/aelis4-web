{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/orderEntry/TableSummary.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/orderEntry/TableSummary.vue","mtime":1566984596000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Message } from 'element-ui';\nimport moment from 'moment';\nimport { mapGetters } from 'vuex';\nimport constants from '@/utils/constants';\nimport apiConstants from '@/utils/apiConstants';\nimport Autocomplete from '@/components/Autocomplete';\nimport UnitsDetailDialog from \"./components/unitsDetail/UnitsDetailDialog\";\nimport PrintUnitConsolidateLabel from \"./components/tableSummary/PrintUnitConsolidateLabel\";\nexport default {\n  name: 'TableSummary',\n  components: {\n    Autocomplete: Autocomplete,\n    UnitsDetailDialog: UnitsDetailDialog,\n    PrintUnitConsolidateLabel: PrintUnitConsolidateLabel\n  },\n  computed: _objectSpread({}, mapGetters(['orderEntry'])),\n  filters: {\n    statusFilterType: function statusFilterType(id) {\n      return constants.ORDER_ENTRY.ORDER_STATUS.find(function (status) {\n        return status.value === id;\n      }).typeCss;\n    }\n  },\n  data: function data() {\n    return {\n      editForm: {\n        id: null,\n        shipDate: null,\n        consigneeAccountId: null,\n        unitOfMeasureName: null,\n        measure: null,\n        numberUnits: null,\n        length: null,\n        width: null,\n        height: null,\n        productCode: '',\n        productDescription: '',\n        poNumber: '',\n        farmName: ''\n      },\n      editFormRules: {\n        consigneeAccountId: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.consigneeRequired'),\n          trigger: 'submit'\n        }],\n        length: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.lengthRequired'),\n          trigger: 'blur'\n        }],\n        width: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.widthRequired'),\n          trigger: 'blur'\n        }],\n        height: [{\n          required: true,\n          message: this.$t('warehouse.orderEntry.error.heightRequired'),\n          trigger: 'blur'\n        }]\n      },\n      finalizedId: constants.ORDER_ENTRY.ORDER_STATUS[2].value,\n      unitOfMeasureOptions: constants.ORDER_ENTRY.UNIT_OF_MEASURE_LIST,\n      measureOptions: constants.ORDER_ENTRY.MEASURE_LIST,\n      urlConsignee: apiConstants.END_POINTS.ACCOUNTS.CONSIGNEE_BY_SHIPPER,\n      urlProduct: apiConstants.END_POINTS.PRODUCT_SEARCH,\n      sizes: constants.TABLES.DEFAULT_LIMIT_SIZES,\n      extensionStatus: constants.ORDER_ENTRY.EXTENSION_STATUS,\n      urlFarmName: apiConstants.END_POINTS.ACCOUNTS.FARM_NAME_SEARCH\n    };\n  },\n  methods: {\n    handleSearchChangePage: function handleSearchChangePage(val) {\n      this.$store.dispatch('orderEntry/search', {\n        page: val\n      });\n    },\n    handleSearchChangeLimit: function handleSearchChangeLimit(val) {\n      this.$store.dispatch('orderEntry/search', {\n        rows: val,\n        page: constants.TABLES.DEFAULT_PAGE\n      });\n    },\n    handleSortChange: function handleSortChange(data) {\n      var prop = data.prop;\n      var order = data.order;\n      prop = constants.TABLES.ORDER_ENTRY.COLUMNS_MAP_SORT[prop] || prop;\n      this.$store.dispatch('orderEntry/search', {\n        orderField: prop,\n        orderDirection: constants.TABLES.ORDER_DIRECTION[order]\n      });\n    },\n    handleEdit: function handleEdit(row) {\n      var _this = this;\n\n      this.$store.dispatch('orderEntry/setEditingRow', true);\n      row.edit = true;\n      this.editForm.id = row.id;\n      this.editForm.shipDate = row.shipDate;\n      this.editForm.consigneeAccountId = row.consigneeAccountId;\n      this.editForm.shipperAccountId = row.shipperAccountId;\n      this.editForm.unitOfMeasureName = row.unitOfMeasureName;\n      this.editForm.measure = row.measure;\n      this.editForm.numberUnits = row.numberUnits;\n      this.editForm.length = row.length;\n      this.editForm.width = row.width;\n      this.editForm.height = row.height;\n      this.editForm.productCode = row.productCode;\n      this.editForm.productDescription = row.productDescription;\n      this.editForm.poNumber = row.poNumber;\n      this.editForm.farmName = row.farmName;\n      this.editForm.status = row.status;\n      this.$nextTick(function () {\n        _this.$refs['row-consignee'].setLocalModel(\"\".concat(row.consigneeName, \" - \").concat(row.consigneeAccount));\n\n        _this.$refs['row-productCode'].setLocalModel(row.productCode);\n\n        _this.$refs['row-farm-broker'].setLocalModel(row.farmName);\n\n        if (_this.$refs['row-consignee'].$el) {\n          _this.$refs['row-consignee'].$el.getElementsByTagName('input')[0].focus();\n        }\n      });\n    },\n    handleUpdate: function () {\n      var _handleUpdate = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var minValue, _this$editForm, length, height, width, measure, volume, message, confirm;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                minValue = this.orderEntry.settings.minCubesPerBox;\n                _this$editForm = this.editForm, length = _this$editForm.length, height = _this$editForm.height, width = _this$editForm.width;\n                measure = this.editForm.measure.measure;\n\n                if (measure === constants.ORDER_ENTRY.MEASURE_LIST[1].value) {\n                  length *= constants.ORDER_ENTRY.CONST_VALUE;\n                  width *= constants.ORDER_ENTRY.CONST_VALUE;\n                  height *= constants.ORDER_ENTRY.CONST_VALUE;\n                }\n\n                volume = length * width * height;\n\n                if (!(volume <= minValue)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                message = this.$t('warehouse.orderEntry.error.minValueValidationError');\n                message = message.replace('[unit]', this.editForm.numberUnits).replace('[minValue]', minValue);\n                _context.next = 10;\n                return this.$confirm(message, {\n                  confirmButtonText: this.$t('OK')\n                });\n\n              case 10:\n                confirm = _context.sent;\n\n                if (!confirm) {\n                  _context.next = 13;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.getSubmitForm());\n\n              case 13:\n                return _context.abrupt(\"return\", false);\n\n              case 14:\n                return _context.abrupt(\"return\", this.getSubmitForm());\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleUpdate() {\n        return _handleUpdate.apply(this, arguments);\n      }\n\n      return handleUpdate;\n    }(),\n    clearEdit: function clearEdit() {\n      this.$store.dispatch('orderEntry/setEditingRow', false);\n      this.$refs.editForm.resetFields();\n      this.$refs['row-consignee'].clearLocalModel();\n      this.$refs['row-productCode'].clearLocalModel();\n      this.$refs['row-farm-broker'].clearLocalModel();\n    },\n    cancelEdit: function cancelEdit(row) {\n      row.edit = false;\n      this.clearEdit();\n    },\n    handleDelete: function handleDelete(id, numberUnits, shipDate) {\n      var _this2 = this;\n\n      var message = this.$t('warehouse.orderEntry.deleteConfirmation');\n      message = message.replace('[numberUnits]', numberUnits);\n      message = message.replace('[shipDate]', moment(shipDate, constants.DATES.DEFAULT_BACKEND_FORMAT).format(constants.DATES.DEFAULT_DISPLAY_FORMAT));\n      return this.$confirm(message, {\n        confirmButtonText: this.$t('common.yes')\n      }).then(function () {\n        Message.closeAll();\n\n        var loading = _this2.$loading(constants.LOADING.DEFAULT_CONFIG);\n\n        _this2.$store.dispatch('orderEntry/delete', id).then(function (response) {\n          loading.close();\n\n          _this2.$message.success(response.message);\n\n          _this2.$store.dispatch('orderEntry/search', {});\n        }).catch(function () {\n          loading.close();\n        });\n      }).catch(function () {});\n    },\n    showEditButton: function showEditButton(orderStatus) {\n      var hasEditPermission = this.$can(this.permissions.DATA_ENTRY.EDIT_AFTER_CUTOFF_FINALIZED, orderStatus) || this.$can(this.permissions.DATA_ENTRY.EDIT_AFTER_CUTOFF_PENDING, orderStatus) || this.$can(this.permissions.DATA_ENTRY.EDIT_BEFORE_CUTOFF_FINALIZED, orderStatus) || this.$can(this.permissions.DATA_ENTRY.EDIT_BEFORE_CUTOFF_PENDING, orderStatus);\n      return !this.orderEntry.isEditingRow && hasEditPermission;\n    },\n    showDeleteButton: function showDeleteButton(orderStatus) {\n      var hasDeletePermission = this.$can(this.permissions.DATA_ENTRY.DELETE_AFTER_CUTOFF_FINALIZED, orderStatus) || this.$can(this.permissions.DATA_ENTRY.DELETE_AFTER_CUTOFF_PENDING, orderStatus) || this.$can(this.permissions.DATA_ENTRY.DELETE_BEFORE_CUTOFF_FINALIZED, orderStatus) || this.$can(this.permissions.DATA_ENTRY.DELETE_BEFORE_CUTOFF_PENDING, orderStatus);\n      return hasDeletePermission;\n    },\n    getSubmitForm: function getSubmitForm() {\n      var _this3 = this;\n\n      this.$refs.editForm.validate(function (valid, validationsErrors) {\n        if (valid) {\n          Message.closeAll();\n\n          var loading = _this3.$loading(constants.LOADING.DEFAULT_CONFIG);\n\n          _this3.$store.dispatch('orderEntry/update', {\n            unitsConsolidateId: _this3.editForm.id,\n            orderToUpdate: _this3.editForm\n          }).then(function (response) {\n            loading.close();\n\n            _this3.$message.success(response.message);\n\n            _this3.clearEdit();\n\n            _this3.$store.dispatch('orderEntry/search', {});\n          }).catch(function () {\n            loading.close();\n          });\n        } else {\n          var errorMessage = '';\n          Object.keys(validationsErrors).forEach(function (key) {\n            validationsErrors[key].forEach(function (validation) {\n              errorMessage += \"\".concat(validation.message, \". \");\n            });\n          });\n\n          _this3.$message.warning(errorMessage);\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["TableSummary.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"height-100-p\">\n    <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editForm\">\n    <el-table\n        :data=\"orderEntry.list\"\n        v-loading=\"orderEntry.loadingSearch\"\n        id=\"order-data-list\"\n        size=\"mini\"\n        tooltip-effect=\"dark\"\n        sortable\n        class=\"dark-blue-table\"\n        :empty-text=\"$t('common.notAbleToFindRecords')\"\n        @sort-change=\"handleSortChange\"\n        stripe>\n        <el-table-column\n            prop=\"orderNumber\"\n            sortable=\"custom\"\n            :min-width=\"15\"\n            align=\"center\"\n            :label=\"$t('warehouse.orderEntry.orderNumberShort')\">\n             <template slot-scope=\"scope\">\n              <el-tooltip class=\"item\" effect=\"dark\" :content=\"scope.row.orderNumber\" placement=\"top\">\n                <span> {{ scope.row.orderNumber }} </span>\n              </el-tooltip>\n            </template>\n        </el-table-column>\n        <el-table-column\n            prop=\"consignee\"\n            sortable=\"custom\"\n            :min-width=\"30\"\n            :label=\"$t('warehouse.orderEntry.consignee')\">\n            <template slot-scope=\"scope\">\n              <template v-if=\"scope.row.edit\">\n                <el-form-item prop=\"consigneeAccountId\">\n                  <autocomplete\n                      :model.sync=\"editForm.consigneeAccountId\"\n                      :shipperAccountId=\"orderEntry.settings.shipperAccountId\"\n                      labelFieldLastWithDash=\"number\"\n                      popperAppendToBody\n                      :url=\"urlConsignee\"\n                      labelField=\"name\"\n                      valueField=\"id\"\n                      id=\"row-consignee\"\n                      ref=\"row-consignee\" />\n                </el-form-item>\n              </template>\n              <template v-else>\n                <el-tooltip class=\"item\" effect=\"dark\" :content=\"`${scope.row.consigneeName} - ${ scope.row.consigneeAccount }`\" placement=\"top\">\n                  <span> {{ scope.row.consigneeName }} - {{ scope.row.consigneeAccount }}</span>\n                </el-tooltip>\n              </template>\n            </template>\n        </el-table-column>\n        <el-table-column\n            :min-width=\"10\"\n            prop=\"unitOfMeasure\"\n            :label=\"$t('warehouse.orderEntry.unitOfMeasureShort')\">\n            <template slot-scope=\"scope\">\n              <template v-if=\"scope.row.edit\">\n                <el-form-item prop=\"unitOfMeasureName\">\n                  <el-select v-model=\"editForm.unitOfMeasureName\" id=\"row-unitOfMeasureName\" ref=\"row-unitOfMeasureName\" size=\"mini\">\n                    <el-option\n                        v-for=\"item in unitOfMeasureOptions\"\n                        :key=\"item.value\"\n                        :label=\"item.label\"\n                        :value=\"item.value\">\n                        </el-option>\n                  </el-select>\n                </el-form-item>\n              </template>\n              <span v-else>{{scope.row.unitOfMeasureName}}</span>\n            </template>\n        </el-table-column>\n        <el-table-column\n            :min-width=\"8\"\n            prop=\"numberUnits\"\n            :label=\"$t('warehouse.orderEntry.numberOfUnitsShort')\">\n            <template slot-scope=\"scope\">\n              <template v-if=\"scope.row.edit && scope.row.status !== finalizedId\">\n                <el-form-item prop=\"numberUnits\">\n                  <el-input-number\n                      v-model=\"editForm.numberUnits\"\n                      v-numeric-validation\n                      :precision=\"0\"\n                      :min=\"1\" :max=\"999\"\n                      :maxlength=\"3\"\n                      :controls=\"false\"\n                      size=\"mini\"\n                      class=\"inline-input width-100p\"\n                      id=\"row-number-units\"\n                      ></el-input-number>\n                  </el-form-item>\n               </template>\n              <span v-else>{{scope.row.numberUnits}}</span>\n            </template>\n        </el-table-column>\n        <el-table-column\n            :min-width=\"10\"\n            prop=\"measure\"\n            :label=\"$t('warehouse.orderEntry.measure')\">\n            <template slot-scope=\"scope\">\n              <template v-if=\"scope.row.edit\">\n                <el-form-item prop=\"measure\">\n                  <el-select v-model=\"editForm.measure\" id=\"row-measure\" ref=\"row-measure\" size=\"mini\">\n                      <el-option\n                      v-for=\"item in measureOptions\"\n                      :key=\"item.value\"\n                      :label=\"item.label\"\n                      :value=\"item.value\">\n                      </el-option>\n                  </el-select>\n                </el-form-item>\n               </template>\n              <span v-else>{{scope.row.measure}}</span>\n            </template>\n        </el-table-column>\n        <el-table-column\n            prop=\"length\"\n            :min-width=\"8\"\n            :label=\"$t('warehouse.orderEntry.length')\">\n            <template slot-scope=\"scope\">\n              <template v-if=\"scope.row.edit\">\n                <el-form-item prop=\"length\">\n                  <el-input-number\n                      v-model=\"editForm.length\"\n                      v-numeric-validation\n                      :controls=\"false\"\n                      :precision=\"2\"\n                      :min=\"0\" :max=\"999.99\"\n                      size=\"mini\"\n                      class=\"inline-input width-100p\"\n                      id=\"row-length\"\n                      ref=\"row-length\"\n                      ></el-input-number>\n                </el-form-item>\n              </template>\n              <span v-else>{{scope.row.length}}</span>\n            </template>\n        </el-table-column>\n        <el-table-column\n            prop=\"width\"\n            :min-width=\"8\"\n            :label=\"$t('warehouse.orderEntry.width')\">\n            <template slot-scope=\"scope\">\n              <template v-if=\"scope.row.edit\">\n                <el-form-item prop=\"width\">\n                  <el-input-number\n                      v-model=\"editForm.width\"\n                      v-numeric-validation\n                      :controls=\"false\"\n                      :precision=\"2\"\n                      :min=\"0\" :max=\"999.99\"\n                      size=\"mini\"\n                      class=\"inline-input width-100p\"\n                      id=\"row-width\"\n                      ref=\"row-width\"\n                      ></el-input-number>\n                </el-form-item>\n              </template>\n              <span v-else>{{scope.row.width}}</span>\n            </template>\n        </el-table-column>\n        <el-table-column\n            prop=\"height\"\n            :min-width=\"8\"\n            :label=\"$t('warehouse.orderEntry.height')\">\n            <template slot-scope=\"scope\">\n              <template v-if=\"scope.row.edit\">\n                <el-form-item prop=\"height\">\n                  <el-input-number\n                      v-model=\"editForm.height\"\n                      v-numeric-validation\n                      :controls=\"false\"\n                      :precision=\"2\"\n                      :min=\"0\" :max=\"999.99\"\n                      size=\"mini\"\n                      class=\"inline-input width-100p\"\n                      id=\"row-height\"\n                      ref=\"row-height\"\n                      ></el-input-number>\n                </el-form-item>\n              </template>\n              <span v-else>{{scope.row.height}}</span>\n            </template>\n        </el-table-column>\n        <el-table-column\n            :min-width=\"10\"\n            prop=\"productCode\"\n            :label=\"$t('warehouse.orderEntry.product')\">\n            <template slot-scope=\"scope\">\n              <template v-if=\"scope.row.edit\">\n                <el-form-item prop=\"productCode\">\n                  <autocomplete\n                    :model.sync=\"editForm.productCode\"\n                    :modelAdditional.sync=\"editForm.productDescription\"\n                    popperAppendToBody\n                    :strict=\"false\"\n                    :url=\"urlProduct\"\n                    labelField=\"code\"\n                    labelFieldLastWithDash=\"description\"\n                    labelfieldSelected=\"code\"\n                    valueField=\"code\"\n                    valueFieldAdditional=\"description\"\n                    :maxlength=\"5\"\n                    id=\"row-productCode\"\n                    ref=\"row-productCode\"\n                    />\n                </el-form-item>\n              </template>\n              <span v-else>{{scope.row.productCode}}</span>\n            </template>\n        </el-table-column>\n        <el-table-column\n            prop=\"productDescription\"\n            sortable=\"custom\"\n            :min-width=\"23\"\n            :label=\"$t('warehouse.orderEntry.productDescription')\">\n            <template slot-scope=\"scope\">\n              <template v-if=\"scope.row.edit\">\n                <el-form-item prop=\"productDescription\">\n                  <el-input\n                      v-model=\"editForm.productDescription\"\n                      v-alphanumeric-validation\n                      clearable\n                      maxlength=\"30\"\n                      size=\"mini\"\n                      class=\"inline-input\"\n                      id=\"row-product-description\"\n                      ref=\"row-product-description\"\n                  ></el-input>\n                </el-form-item>\n              </template>\n              <template v-else>\n                <el-tooltip class=\"item\" effect=\"dark\" :content=\"scope.row.productDescription\" placement=\"top\">\n                  <span> {{ scope.row.productDescription }} </span>\n                </el-tooltip>\n              </template>\n            </template>\n        </el-table-column>\n        <el-table-column\n            :min-width=\"8\"\n            prop=\"poNumber\"\n            :label=\"$t('warehouse.orderEntry.poNumber')\">\n            <template slot-scope=\"scope\">\n              <template v-if=\"scope.row.edit\">\n                <el-form-item prop=\"poNumber\">\n                  <el-input\n                    v-model=\"editForm.poNumber\"\n                    v-alphanumeric-validation\n                    clearable\n                    maxlength=\"25\"\n                    size=\"mini\"\n                    class=\"inline-input\"\n                    id=\"row-po-number\"\n                    ref=\"row-po-number\"\n                    ></el-input>\n                </el-form-item>\n              </template>\n              <template v-else>\n                <el-tooltip class=\"item\" effect=\"dark\" :content=\"scope.row.poNumber\" placement=\"top\">\n                  <span> {{ scope.row.poNumber }} </span>\n                </el-tooltip>\n              </template>\n            </template>\n        </el-table-column>\n        <el-table-column\n            :min-width=\"15\"\n            prop=\"farmName\"\n            :label=\"$t('warehouse.orderEntry.farmBroker')\">\n            <template slot-scope=\"scope\">\n              <template v-if=\"scope.row.edit\">\n                <el-form-item prop=\"farmName\">\n                  <autocomplete\n                  :model.sync=\"editForm.farmName\"\n                  popperAppendToBody\n                  :strict=\"false\"\n                  :url=\"urlFarmName\"\n                  labelField=\"name\"\n                  labelfieldSelected=\"name\"\n                  valueField=\"id\"\n                  valueFieldAdditional=\"name\"\n                  :maxlength=\"100\"\n                  id=\"row-farm-broker\"\n                  ref=\"row-farm-broker\"\n                  />\n                  </el-form-item>\n              </template>\n              <template v-else>\n                <el-tooltip class=\"item\" effect=\"dark\" :content=\"scope.row.farmName\" placement=\"top\">\n                  <span> {{ scope.row.farmName }} </span>\n                </el-tooltip>\n              </template>\n            </template>\n        </el-table-column>\n        <el-table-column\n            align=\"center\"\n            :min-width=\"9\"\n            prop=\"status\"\n            :label=\"$t('warehouse.orderEntry.finalized')\">\n            <template slot-scope=\"scope\">\n             <span class=\"icon-status-span\">\n                <i  v-if=\"scope.row.status === finalizedId\" class=\"el-icon-success green-success\"></i>\n             </span>\n             <span class=\"icon-status-span\">\n               <el-tooltip v-if=\"scope.row.lastExtensionNumber\" class=\"item\" effect=\"dark\" :content=\"`${extensionStatus[scope.row.lastExtensionStatus].name} - ${scope.row.lastExtensionNumber}`\" placement=\"top-start\">\n                  <i class=\"far fa-clock\"  :class=\"extensionStatus[scope.row.lastExtensionStatus].colorCssClass\"></i>\n               </el-tooltip>\n             </span>\n            </template>\n        </el-table-column>\n         <el-table-column  :min-width=\"15\" :label=\"$t('common.options')\" align=\"center\" class-name=\"fixed-width\">\n           <template slot-scope=\"scope\">\n              <el-tooltip v-if=\"showEditButton(scope.row.status)\" class=\"item\" effect=\"dark\" :enterable=\"false\" :content=\"$t('warehouse.orderEntry.edit')\" placement=\"top-start\">\n                <i class=\"el-icon-edit icon-action\" @click=\"handleEdit(scope.row)\"></i>\n              </el-tooltip>\n              <template v-else-if=\"scope.row.edit\">\n                <el-button icon=\"el-icon-success\" circle size=\"mini\" @click=\"handleUpdate()\"></el-button>\n                <el-button icon=\"el-icon-circle-close\" circle size=\"mini\" @click=\"cancelEdit(scope.row)\"></el-button>\n              </template>\n              <template v-if=\"!scope.row.edit\">\n                <el-tooltip v-if=\"scope.row.status === finalizedId\" class=\"item\" effect=\"dark\" :enterable=\"false\" :content=\"$t('warehouse.orderEntry.details')\" placement=\"top-start\">\n                  <units-detail-dialog :unitsConsolidateId=\"scope.row.id\"/>\n                </el-tooltip>\n                <el-tooltip v-if=\"scope.row.status === finalizedId\" :unitsConsolidateId=\"scope.row.id\" class=\"item\" effect=\"dark\" :enterable=\"false\" :content=\"$t('warehouse.orderEntry.print')\" placement=\"top-start\">\n                  <print-unit-consolidate-label :unitsConsolidateId=\"scope.row.id\" :labelPrinted.sync=\"scope.row.labelPrinted\" />\n                </el-tooltip>\n                <el-tooltip v-if=\"showDeleteButton(scope.row.status)\" class=\"item\" effect=\"dark\" :enterable=\"false\" :content=\"$t('warehouse.orderEntry.delete')\" placement=\"top-start\">\n                  <i class=\"el-icon-delete icon-action\" type=\"primary\" size=\"mini\" @click=\"handleDelete(scope.row.id, scope.row.numberUnits, scope.row.shipDate)\"></i>\n                </el-tooltip>\n              </template>\n           </template>\n        </el-table-column>\n    </el-table>\n    </el-form>\n     <el-pagination v-show=\"orderEntry.total > 0\"\n      @size-change=\"handleSearchChangeLimit\"\n      :page-sizes=\"sizes\"\n      :page-size=\"orderEntry.actualFilters.rows\"\n      :current-page.sync=\"orderEntry.actualFilters.page\"\n      @current-change=\"handleSearchChangePage\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      :total=\"orderEntry.total\">\n    </el-pagination>\n</div>\n</template>\n\n<script>\nimport { Message } from 'element-ui';\nimport moment from 'moment';\nimport { mapGetters } from 'vuex';\nimport constants from '@/utils/constants';\nimport apiConstants from '@/utils/apiConstants';\nimport Autocomplete from '@/components/Autocomplete';\nimport UnitsDetailDialog from './components/unitsDetail/UnitsDetailDialog';\nimport PrintUnitConsolidateLabel from './components/tableSummary/PrintUnitConsolidateLabel';\n\nexport default {\n  name: 'TableSummary',\n  components: { Autocomplete, UnitsDetailDialog, PrintUnitConsolidateLabel },\n  computed: {\n    ...mapGetters([\n      'orderEntry'\n    ])\n  },\n  filters: {\n    statusFilterType(id) {\n      return constants.ORDER_ENTRY.ORDER_STATUS.find(status => status.value === id).typeCss;\n    }\n  },\n  data() {\n    return {\n      editForm: {\n        id: null,\n        shipDate: null,\n        consigneeAccountId: null,\n        unitOfMeasureName: null,\n        measure: null,\n        numberUnits: null,\n        length: null,\n        width: null,\n        height: null,\n        productCode: '',\n        productDescription: '',\n        poNumber: '',\n        farmName: ''\n      },\n      editFormRules: {\n        consigneeAccountId: [\n          { required: true, message: this.$t('warehouse.orderEntry.error.consigneeRequired'), trigger: 'submit' }\n        ],\n        length: [\n          { required: true, message: this.$t('warehouse.orderEntry.error.lengthRequired'), trigger: 'blur' }\n        ],\n        width: [\n          { required: true, message: this.$t('warehouse.orderEntry.error.widthRequired'), trigger: 'blur' }\n        ],\n        height: [\n          { required: true, message: this.$t('warehouse.orderEntry.error.heightRequired'), trigger: 'blur' }\n        ]\n      },\n      finalizedId: constants.ORDER_ENTRY.ORDER_STATUS[2].value,\n      unitOfMeasureOptions: constants.ORDER_ENTRY.UNIT_OF_MEASURE_LIST,\n      measureOptions: constants.ORDER_ENTRY.MEASURE_LIST,\n      urlConsignee: apiConstants.END_POINTS.ACCOUNTS.CONSIGNEE_BY_SHIPPER,\n      urlProduct: apiConstants.END_POINTS.PRODUCT_SEARCH,\n      sizes: constants.TABLES.DEFAULT_LIMIT_SIZES,\n      extensionStatus: constants.ORDER_ENTRY.EXTENSION_STATUS,\n      urlFarmName: apiConstants.END_POINTS.ACCOUNTS.FARM_NAME_SEARCH\n    };\n  },\n  methods: {\n    handleSearchChangePage(val) {\n      this.$store.dispatch('orderEntry/search', { page: val });\n    },\n    handleSearchChangeLimit(val) {\n      this.$store.dispatch('orderEntry/search', { rows: val, page: constants.TABLES.DEFAULT_PAGE });\n    },\n    handleSortChange(data) {\n      let { prop } = data;\n      const { order } = data;\n      prop = constants.TABLES.ORDER_ENTRY.COLUMNS_MAP_SORT[prop] || prop;\n      this.$store.dispatch('orderEntry/search', { orderField: prop, orderDirection: constants.TABLES.ORDER_DIRECTION[order] });\n    },\n    handleEdit(row) {\n      this.$store.dispatch('orderEntry/setEditingRow', true);\n      row.edit = true;\n      this.editForm.id = row.id;\n      this.editForm.shipDate = row.shipDate;\n      this.editForm.consigneeAccountId = row.consigneeAccountId;\n      this.editForm.shipperAccountId = row.shipperAccountId;\n      this.editForm.unitOfMeasureName = row.unitOfMeasureName;\n      this.editForm.measure = row.measure;\n      this.editForm.numberUnits = row.numberUnits;\n      this.editForm.length = row.length;\n      this.editForm.width = row.width;\n      this.editForm.height = row.height;\n      this.editForm.productCode = row.productCode;\n      this.editForm.productDescription = row.productDescription;\n      this.editForm.poNumber = row.poNumber;\n      this.editForm.farmName = row.farmName;\n      this.editForm.status = row.status;\n      this.$nextTick(() => {\n        this.$refs['row-consignee'].setLocalModel(`${row.consigneeName} - ${row.consigneeAccount}`);\n        this.$refs['row-productCode'].setLocalModel(row.productCode);\n        this.$refs['row-farm-broker'].setLocalModel(row.farmName);\n        if (this.$refs['row-consignee'].$el) {\n          this.$refs['row-consignee'].$el.getElementsByTagName('input')[0].focus();\n        }\n      });\n    },\n    async handleUpdate() {\n      const minValue = this.orderEntry.settings.minCubesPerBox;\n      let { length, height, width } = this.editForm;\n      const { measure } = this.editForm.measure;\n      if (measure === constants.ORDER_ENTRY.MEASURE_LIST[1].value) {\n        length *= constants.ORDER_ENTRY.CONST_VALUE;\n        width *= constants.ORDER_ENTRY.CONST_VALUE;\n        height *= constants.ORDER_ENTRY.CONST_VALUE;\n      }\n      const volume = length * width * height;\n      if (volume <= minValue) {\n        let message = this.$t('warehouse.orderEntry.error.minValueValidationError');\n        message = message.replace('[unit]', this.editForm.numberUnits).replace('[minValue]', minValue);\n        const confirm = await this.$confirm(message, { confirmButtonText: this.$t('OK') });\n        if (confirm) { return this.getSubmitForm(); }\n        return false;\n      }\n      return this.getSubmitForm();\n    },\n    clearEdit() {\n      this.$store.dispatch('orderEntry/setEditingRow', false);\n      this.$refs.editForm.resetFields();\n      this.$refs['row-consignee'].clearLocalModel();\n      this.$refs['row-productCode'].clearLocalModel();\n      this.$refs['row-farm-broker'].clearLocalModel();\n    },\n    cancelEdit(row) {\n      row.edit = false;\n      this.clearEdit();\n    },\n    handleDelete(id, numberUnits, shipDate) {\n      let message = this.$t('warehouse.orderEntry.deleteConfirmation');\n      message = message.replace('[numberUnits]', numberUnits);\n      message = message.replace('[shipDate]', moment(shipDate, constants.DATES.DEFAULT_BACKEND_FORMAT).format(constants.DATES.DEFAULT_DISPLAY_FORMAT));\n      return this.$confirm(message, { confirmButtonText: this.$t('common.yes') })\n        .then(() => {\n          Message.closeAll();\n          const loading = this.$loading(constants.LOADING.DEFAULT_CONFIG);\n          this.$store.dispatch('orderEntry/delete', id).then((response) => {\n            loading.close();\n            this.$message.success(response.message);\n            this.$store.dispatch('orderEntry/search', {});\n          }).catch(() => {\n            loading.close();\n          });\n        })\n        .catch(() => {});\n    },\n    showEditButton(orderStatus) {\n      const hasEditPermission = this.$can(this.permissions.DATA_ENTRY.EDIT_AFTER_CUTOFF_FINALIZED, orderStatus)\n           || this.$can(this.permissions.DATA_ENTRY.EDIT_AFTER_CUTOFF_PENDING, orderStatus)\n           || this.$can(this.permissions.DATA_ENTRY.EDIT_BEFORE_CUTOFF_FINALIZED, orderStatus)\n           || this.$can(this.permissions.DATA_ENTRY.EDIT_BEFORE_CUTOFF_PENDING, orderStatus);\n      return !this.orderEntry.isEditingRow && hasEditPermission;\n    },\n    showDeleteButton(orderStatus) {\n      const hasDeletePermission = this.$can(this.permissions.DATA_ENTRY.DELETE_AFTER_CUTOFF_FINALIZED, orderStatus)\n           || this.$can(this.permissions.DATA_ENTRY.DELETE_AFTER_CUTOFF_PENDING, orderStatus)\n           || this.$can(this.permissions.DATA_ENTRY.DELETE_BEFORE_CUTOFF_FINALIZED, orderStatus)\n           || this.$can(this.permissions.DATA_ENTRY.DELETE_BEFORE_CUTOFF_PENDING, orderStatus);\n      return hasDeletePermission;\n    },\n    getSubmitForm() {\n      this.$refs.editForm.validate((valid, validationsErrors) => {\n        if (valid) {\n          Message.closeAll();\n          const loading = this.$loading(constants.LOADING.DEFAULT_CONFIG);\n          this.$store\n            .dispatch('orderEntry/update', {\n              unitsConsolidateId: this.editForm.id,\n              orderToUpdate: this.editForm\n            })\n            .then((response) => {\n              loading.close();\n              this.$message.success(response.message);\n              this.clearEdit();\n              this.$store.dispatch('orderEntry/search', {});\n            })\n            .catch(() => {\n              loading.close();\n            });\n        } else {\n          let errorMessage = '';\n          Object.keys(validationsErrors).forEach((key) => {\n            validationsErrors[key].forEach((validation) => {\n              errorMessage += `${validation.message}. `;\n            });\n          });\n          this.$message.warning(errorMessage);\n        }\n      });\n    }\n  },\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\">\n</style>\n"],"sourceRoot":"src/views/warehouse/orderEntry"}]}