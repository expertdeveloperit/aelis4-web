{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/thread-loader/dist/cjs.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/uploadXml/UploadResponse.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/uploadXml/UploadResponse.vue","mtime":1562577473000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'UploadResponse',\n  computed: _objectSpread({}, mapGetters(['uploadXmlResponse'])),\n  data: function data() {\n    return {};\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$store.dispatch('clearXmlResponse');\n  }\n};",{"version":3,"sources":["UploadResponse.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,QAAA,oBACA,UAAA,CAAA,CACA,mBADA,CAAA,CADA,CAFA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA,EAAA;AACA,GATA;AAUA,EAAA,aAVA,2BAUA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,kBAAA;AACA;AAZA,CAAA","sourcesContent":["<template>\n  <div>\n    <el-collapse v-show=\"uploadXmlResponse.activeElement.length\" v-model=\"uploadXmlResponse.activeElement\">\n    <el-collapse-item :title=\"$t('uploadXmlFiles.xmlResponse')\" name=\"xml-upload-response-collapsible\" id=\"xml-upload-response-collapsible\">\n        <div class=\"header-response\" id=\"header-response\">\n            <span class=\"response-field\">{{ $t('common.orderNumberShort') }}: {{ uploadXmlResponse.header.orderNumber }}</span>\n            <span class=\"response-field\">{{ $t('common.shipdate') }}: {{ uploadXmlResponse.header.shipdate }}</span>\n            <span class=\"response-field\">{{ $t('common.shipper') }}: {{ uploadXmlResponse.header.shipper }}</span>\n            <span class=\"response-field\">{{ $t('common.unitsInFile') }}: {{ uploadXmlResponse.header.totalUnitsInFile }}</span>\n            <span class=\"response-field\">{{ $t('common.unitsSuccess') }}: {{ uploadXmlResponse.header.totalUnitsSuccess }}</span>\n            <span class=\"response-field\">{{ $t('common.unitsDuplicates') }}: {{ uploadXmlResponse.header.totalUnitsDuplicates }}</span>\n            <span class=\"response-field\">{{ $t('common.unitsDiscrepancy') }}: {{ uploadXmlResponse.header.totalUnitsDiscrepancy }}</span>\n        </div>\n        <div class=\"header-response-message\" id=\"header-response-message\" >\n          <div v-if=\"uploadXmlResponse.header.errorMessage\"><i class=\"el-icon-warning yellow-warning\"></i> &nbsp; <span>{{ uploadXmlResponse.header.errorMessage }}</span></div>\n          <div v-if=\"!uploadXmlResponse.details.length && !uploadXmlResponse.header.errorMessage && uploadXmlResponse.header.fileName\"><i class=\"el-icon-success green-success\"></i>&nbsp;<span>{{ $t('uploadXmlFiles.uploadSuccess') }}</span></div>\n        </div>\n        <el-table v-if=\"uploadXmlResponse.details.length\"\n            id=\"response-data\"\n            size=\"mini\"\n            height=\"100%\"\n            tooltip-effect=\"dark\"\n            class=\"xml-table-response-data\"\n            sortable\n            :data=\"uploadXmlResponse.details\">\n            <el-table-column\n                prop=\"consignee\"\n                width=\"270\"\n                :label=\"$t('common.consigneeAccount')\">\n                <template slot-scope=\"scope\">\n                    <span> {{ scope.row.consignee_name }} - {{ scope.row.consignee }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column\n                prop=\"unitsFailed\"\n                width=\"100\"\n                :label=\"$t('uploadXmlFiles.failedUnits')\">\n            </el-table-column>\n            <el-table-column\n                prop=\"unitFailedDetail.unitID[0]\"\n                width=\"120\"\n                :label=\"$t('uploadXmlFiles.unitIds')\">\n                <template slot-scope=\"scope\">\n                    <span v-if=\"scope.row.unitFailedDetail.unitID.length === 1\">{{scope.row.unitFailedDetail.unitID[0]}}</span>\n                    <template v-else>\n                        <el-popover\n                            placement=\"right\"\n                            width=\"100\"\n                            trigger=\"hover\">\n                            <el-table :data=\"scope.row.unitFailedDetail.unitID\" max-height=\"500\">\n                                <el-table-column width=\"300\" :label=\"$t('uploadXmlFiles.unitIds')\">\n                                    <template slot-scope=\"scopei\">\n                                        {{scopei.row}}\n                                    </template>\n                                </el-table-column>\n                            </el-table>\n                            <el-button slot=\"reference\" type=\"text\" class=\"pop-over-unitIds-error\">{{scope.row.unitFailedDetail.unitID[0]}}...</el-button>\n                        </el-popover>\n                    </template>\n                </template>\n            </el-table-column>\n            <el-table-column\n                prop=\"message\"\n                :label=\"$t('common.message')\">\n            </el-table-column>\n        </el-table>\n    </el-collapse-item>\n    </el-collapse>\n</div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\n\nexport default {\n  name: 'UploadResponse',\n  computed: {\n    ...mapGetters([\n      'uploadXmlResponse'\n    ])\n  },\n  data() {\n    return {};\n  },\n  beforeDestroy() {\n    this.$store.dispatch('clearXmlResponse');\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\">\n.header-response {\n    height: 30px;\n    width: 100%;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    padding-left: 10px;\n    padding-right: 10px;\n    background-color: rgba(0, 51, 91, 1);\n    .response-field {\n        font-size: 12px;\n        font-weight: bold;\n        color: rgba(255, 255, 255, 1);\n        margin-left: 10px;\n        max-width: 160px;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n}\n\n.header-response-message {\n  div {\n    padding-top: 10px;\n  }\n}\n\n.xml-table-response-data.el-table th.is-leaf{\n    font-size: 11px;\n    color: rgba(0, 51, 91, 1);\n    border-bottom: 2px solid rgba(0, 51, 91, 1);\n}\n\n.pop-over-unitIds-error {\n    color: #606266;\n    font-size: 11px;\n}\n\n.upload-response {\n  margin-top: 17px;\n  height: 280px;\n  .el-collapse-item__wrap {\n      height: 100%;\n  }\n  .el-collapse {\n      height: 100%;\n  }\n  .el-collapse-item {\n      height: 100%;\n  }\n  .el-collapse-item__content {\n      height: 100%;\n  }\n}\n// These media queries can be improved\n@media only screen and (max-height: 540px) {\n    .upload-response {\n        height: 100%;\n    }\n}\n\n@media only screen and (min-height: 768px) {\n    .upload-response {\n        height: 470px;\n    }\n}\n\n@media only screen and (min-height: 830px) {\n    .upload-response {\n        height: 470px;\n    }\n}\n\n@media only screen and (min-height: 990px) {\n    .upload-response {\n        height: 700px;\n    }\n}\n\n@media only screen and (max-height: 640px) and (max-width: 320px) {\n    .upload-response {\n        height: 370px;\n    }\n}\n\n@media only screen and (max-height: 320px) and (max-width: 640px) {\n    .upload-response {\n        height: 280px;\n    }\n}\n\n@media only screen and (max-width: 830px) {\n    .header-response {\n        height: 100%;\n        width: 100%;\n        display: block;\n        padding-left: 10px;\n        padding-right: 10px;\n        height: 90px;\n        background-color: #00335b;\n        display: flex;\n        flex-wrap: wrap;\n        .response-field {\n            display: inline;\n        }\n    }\n    .upload-response {\n        height: 270px;\n    }\n}\n\n@media only screen and (min-width: 1420px ) {\n    .header-response {\n        .response-field {\n            max-width: 180px;\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n    }\n    .upload-response {\n        height: 400px;\n    }\n}\n\n</style>\n"],"sourceRoot":"src/views/warehouse/uploadXml"}]}