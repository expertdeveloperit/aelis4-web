{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/src/views/layout/components/Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/views/layout/components/Navbar.vue","mtime":1566984596000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex';\nimport Hamburger from '@/components/Hamburger';\nimport authService from '@/utils/auth/auth0Service';\n\nexport default {\n  components: {\n    Hamburger\n  },\n  computed: {\n    ...mapGetters([\n      'sidebar',\n      'user'\n    ])\n  },\n  methods: {\n    handleLoginEvent(data) {\n      if (!data.loggedIn) {\n        this.$router.replace({ path: '/' });\n      }\n    },\n    toggleSideBar() {\n      this.$store.dispatch('ToggleSideBar');\n    },\n    handleLogOut() {\n      this.$auth.logOut();\n    },\n    async handleChangePassword() {\n      const confirmChangePassword = await this.$confirm(this.$t('signUp.passwordResetConfirmation'), { confirmButtonText: this.$t('common.yes') }).catch(() => {});\n      if (confirmChangePassword) {\n        authService.changePassword().then(() => {\n          this.$message.success(this.$t('signUp.resetPasswordSendLinkSuccess'));\n        });\n      }\n    }\n  }\n};\n",{"version":3,"sources":["Navbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Navbar.vue","sourceRoot":"src/views/layout/components","sourcesContent":["<template>\n  <el-menu class=\"navbar\" mode=\"horizontal\">\n    <hamburger :toggle-click=\"toggleSideBar\" :is-active=\"sidebar.opened\" class=\"hamburger-container\"/>\n    <img src=\"@/assets/logos/Armellini.png\" alt=\"Armellini\" class=\"pic-armellini-logo\">\n    <el-dropdown class=\"avatar-container\" trigger=\"click\">\n      <div class=\"avatar-wrapper\">\n        <img :src=\"user.avatar\" class=\"user-avatar\">\n        <i class=\"el-icon-caret-bottom\"/>\n      </div>\n      <el-dropdown-menu slot=\"dropdown\" class=\"user-dropdown\">\n        <el-dropdown-item>\n          {{ user.name }}\n        </el-dropdown-item>\n        <el-dropdown-item v-if=\"!user.isGoogleAppsUser\">\n          <div @click=\"handleChangePassword\"> {{ $t('signUp.resetPassword') }} </div>\n        </el-dropdown-item>\n        <el-dropdown-item divided>\n          <div @click=\"handleLogOut\"> {{ $t('navbar.logOut') }} </div>\n        </el-dropdown-item>\n      </el-dropdown-menu>\n    </el-dropdown>\n  </el-menu>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport Hamburger from '@/components/Hamburger';\nimport authService from '@/utils/auth/auth0Service';\n\nexport default {\n  components: {\n    Hamburger\n  },\n  computed: {\n    ...mapGetters([\n      'sidebar',\n      'user'\n    ])\n  },\n  methods: {\n    handleLoginEvent(data) {\n      if (!data.loggedIn) {\n        this.$router.replace({ path: '/' });\n      }\n    },\n    toggleSideBar() {\n      this.$store.dispatch('ToggleSideBar');\n    },\n    handleLogOut() {\n      this.$auth.logOut();\n    },\n    async handleChangePassword() {\n      const confirmChangePassword = await this.$confirm(this.$t('signUp.passwordResetConfirmation'), { confirmButtonText: this.$t('common.yes') }).catch(() => {});\n      if (confirmChangePassword) {\n        authService.changePassword().then(() => {\n          this.$message.success(this.$t('signUp.resetPasswordSendLinkSuccess'));\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n.navbar {\n  position: sticky;\n  top: 0;\n  z-index: 10;\n  height: 56px;\n  line-height: 50px;\n  border-radius: 0px !important;\n  box-shadow: 0px 1px 3px rgba(0,0,0, 0.16);\n  .hamburger-container {\n    line-height: 58px;\n    height: 50px;\n    float: left;\n    padding: 0 10px;\n    display: none;\n  }\n  .screenfull {\n    position: absolute;\n    right: 90px;\n    top: 16px;\n    color: red;\n  }\n  .avatar-container {\n    height: 50px;\n    display: inline-block;\n    position: absolute;\n    right: 35px;\n    .avatar-wrapper {\n      cursor: pointer;\n      margin-top: 5px;\n      position: relative;\n      line-height: initial;\n      .user-avatar {\n        width: 40px;\n        height: 40px;\n        border-radius: 10px;\n      }\n      .el-icon-caret-bottom {\n        position: absolute;\n        right: -20px;\n        top: 25px;\n        font-size: 12px;\n      }\n    }\n  }\n}\n.pic-armellini-logo {\n    height: 40px;\n    padding-bottom: 5px;\n    padding-left: 10px;\n    margin-top: 10px;\n}\n//This hamburger container from navbar only shows on mobile divices.\n@media only screen and (max-width: 1026px) {\n  .navbar {\n    .hamburger-container {\n      display: block;\n      margin-left: 10px;\n    }\n  }\n}\n\n</style>\n"]}]}