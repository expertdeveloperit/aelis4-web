{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/uploadXml/UploadDrop.vue?vue&type=template&id=4c7d3822&","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/uploadXml/UploadDrop.vue","mtime":1562577473000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"upload-drop-container\",\n      class: {\n        \"upload-drop-container-mini\": _vm.isMinimized,\n        \"upload-drop-container-max\": !_vm.isMinimized\n      }\n    },\n    [\n      _c(\"div\", { staticClass: \"upload-template-info\" }, [\n        _c(\"i\", { staticClass: \"el-icon-info red-armellini\" }),\n        _vm._v(\" \\n    \"),\n        _c(\"span\", { staticClass: \"font-gray info-text\" }, [\n          _vm._v(\" \" + _vm._s(_vm.$t(\"uploadXmlFiles.youCanDownload\")) + \"  \")\n        ]),\n        _c(\n          \"a\",\n          {\n            staticClass: \"red-link-bold\",\n            attrs: {\n              id: \"xml-upload-download-template-link\",\n              href: _vm.templateExampleUrl,\n              download: \"\"\n            }\n          },\n          [_vm._v(\" \" + _vm._s(_vm.$t(\"uploadXmlFiles.here\")) + \" \")]\n        )\n      ]),\n      _vm.processing\n        ? _c(\n            \"span\",\n            { staticClass: \"xml-loading\", attrs: { id: \"xml-loading\" } },\n            [\n              _c(\"img\", {\n                class: { \"padding-left_28\": _vm.actualFileProcessed },\n                attrs: {\n                  src: require(\"@/assets/svg/loading.svg\"),\n                  alt: \"loading\"\n                }\n              })\n            ]\n          )\n        : _vm._e(),\n      _c(\n        \"div\",\n        {\n          staticClass: \"upload-dropzone-area\",\n          class: {\n            \"upload-dropzone-area-mini\": _vm.isMinimized,\n            \"upload-dropzone-area-max\": !_vm.isMinimized\n          },\n          on: { click: _vm.handleOpenSearchFile }\n        },\n        [\n          _vm.actualFileProcessed\n            ? _c(\"i\", {\n                staticClass: \"collapse-drop-zone el-icon-arrow-right\",\n                attrs: { id: \"collapse-drop-zone\" },\n                on: {\n                  click: function($event) {\n                    $event.stopPropagation()\n                    return _vm.handleMinimized($event)\n                  }\n                }\n              })\n            : _vm._e(),\n          _c(\n            \"el-upload\",\n            {\n              ref: \"upload\",\n              staticClass: \"upload-xml\",\n              attrs: {\n                id: \"upload-xml\",\n                drag: \"\",\n                \"show-file-list\": false,\n                action: _vm.url,\n                headers: _vm.headers,\n                \"on-success\": _vm.handleSuccess,\n                \"on-progress\": _vm.handleProgress,\n                \"on-error\": _vm.handleError,\n                \"before-upload\": _vm.handleBeforeUpload,\n                limit: 1,\n                accept: \".xml\"\n              }\n            },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"upload-icon-container\" },\n                [\n                  _c(\"img\", {\n                    staticClass: \"upload-icon\",\n                    attrs: {\n                      src: require(\"@/assets/png/upload-icon.png\"),\n                      alt: \"upload-icon\"\n                    }\n                  }),\n                  !_vm.isMinimized\n                    ? _c(\"el-progress\", {\n                        attrs: {\n                          type: \"circle\",\n                          percentage: _vm.uploadProgress,\n                          \"show-text\": false\n                        }\n                      })\n                    : _vm._e()\n                ],\n                1\n              ),\n              _c(\"div\", { staticClass: \"el-upload__text\" }, [\n                _c(\"div\", { staticClass: \"drag-and-drop-text\" }, [\n                  _vm._v(\n                    \" \" + _vm._s(_vm.$t(\"uploadXmlFiles.dragAndDrop\")) + \" \"\n                  )\n                ]),\n                _vm._v(\n                  \" \" + _vm._s(_vm.$t(\"uploadXmlFiles.yourFilesOr\")) + \" \"\n                ),\n                _c(\"em\", [_vm._v(_vm._s(_vm.$t(\"uploadXmlFiles.browse\")))])\n              ])\n            ]\n          )\n        ],\n        1\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}