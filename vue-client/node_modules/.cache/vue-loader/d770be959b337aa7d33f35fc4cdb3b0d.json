{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/extensionRequest/extensionDetailsDialog.vue?vue&type=style&index=0&rel=stylesheet%2Fscss&lang=scss&","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/extensionRequest/extensionDetailsDialog.vue","mtime":1565163194498},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/sass-loader/lib/loader.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.dialog-btn {\n      background: transparent !important;\n      border: 0 !important;\n      padding: 0;\n}\n",{"version":3,"sources":["extensionDetailsDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmbA;AACA;AACA;AACA;AACA","file":"extensionDetailsDialog.vue","sourceRoot":"src/views/warehouse/extensionRequest","sourcesContent":["<template>\n  <span v-if=\"isVisible()\">\n    <el-button type=\"success\" plain @click=\"dialogVisible = true\" size=\"mini\" class=\"dialog-btn\">\n      <v-icon class=\"search-icon\">\n        <img src=\"@/assets/svg/search.svg\" alt=\"search\" />\n      </v-icon>\n    </el-button>\n    <el-dialog\n      :close-on-click-modal=\"false\"\n      v-on:open=\"handleOpen\"\n      :title=\"$t('extensionRequest.extensionDetails')\"\n      :visible.sync=\"dialogVisible\"\n      width=\"50%\"\n      :before-close=\"handleClose\"\n    >\n      <el-form\n        :model=\"form\"\n        :rules=\"formRules\"\n        ref=\"form\"\n        v-circular-tab-navigation-dialog\n        label-position=\"top\"\n        size=\"mini\"\n      >\n        <el-col :span=\"24\">\n          <el-col :md=\"9\" :sm=\"12\" :xs=\"24\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.consignee')\" prop=\"consigneeAccountId\">\n              <autocomplete\n                :model.sync=\"form.consigneeAccountId\"\n                :url=\"urlConsignee\"\n                :shipperAccountId=\"orderEntry.settings.shipperAccountId\"\n                labelField=\"name\"\n                labelFieldLastWithDash=\"number\"\n                valueField=\"id\"\n                id=\"form-consignee\"\n                ref=\"form-consignee\"\n              />\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"4\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.unitOfMeasure')\" prop=\"unitOfMeasure\">\n              <el-select v-model=\"form.unitOfMeasure\" id=\"form-unit-of-measure\">\n                <el-option\n                  v-for=\"item in unitOfMeasureOptions\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"3\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.measure')\" prop=\"measure\">\n              <el-select v-model=\"form.measure\" id=\"form-measure\">\n                <el-option\n                  v-for=\"item in measureOptions\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                  ref=\"measure\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"5\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.shipDate')\" prop=\"shipDate\">\n              <el-date-picker\n                v-model=\"form.shipDate\"\n                @change=\"handleChangeDate\"\n                :default-value=\"orderEntry.actualFilters.shipDate\"\n                style=\"width: 100%\"\n                format=\"MM/dd/yyyy\"\n                :picker-options=\"orderEntry.shipDatePickerOptions\"\n                type=\"date\"\n                id=\"form-ship-date\"\n              ></el-date-picker>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"3\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.numberOfUnitsShort')\" prop=\"totalUnits\">\n              <el-input-number\n                v-model=\"form.totalUnits\"\n                v-numeric-validation\n                :precision=\"0\"\n                :min=\"0\"\n                :max=\"999\"\n                class=\"inline-input width-100p\"\n                id=\"form-number-units\"\n                ref=\"unit\"\n              ></el-input-number>\n            </el-form-item>\n          </el-col>\n        </el-col>\n        <el-col :span=\"24\">\n          <el-col :md=\"2\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.length')\" prop=\"length\">\n              <el-input-number\n                v-model=\"form.length\"\n                v-numeric-validation\n                :controls=\"false\"\n                :precision=\"3\"\n                :min=\"0\"\n                :max=\"999.999\"\n                class=\"inline-input width-100p\"\n                id=\"form-length\"\n                ref=\"length\"\n              ></el-input-number>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"2\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.width')\" prop=\"width\">\n              <el-input-number\n                v-model=\"form.width\"\n                v-numeric-validation\n                :controls=\"false\"\n                :precision=\"3\"\n                :min=\"0\"\n                :max=\"999.999\"\n                class=\"inline-input width-100p\"\n                id=\"form-width\"\n                ref=\"width\"\n              ></el-input-number>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"2\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.height')\" prop=\"height\">\n              <el-input-number\n                v-model=\"form.height\"\n                v-numeric-validation\n                :controls=\"false\"\n                :precision=\"3\"\n                :min=\"0\"\n                :max=\"999.999\"\n                class=\"inline-input width-100p\"\n                id=\"form-height\"\n                ref=\"height\"\n              ></el-input-number>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"3\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.product')\" prop=\"productCode\">\n              <autocomplete\n                :model.sync=\"form.productCode\"\n                :modelAdditional.sync=\"form.productDescription\"\n                :strict=\"false\"\n                :url=\"urlProduct\"\n                labelField=\"description\"\n                labelfieldSelected=\"code\"\n                valueField=\"code\"\n                valueFieldAdditional=\"description\"\n                :maxlength=\"5\"\n                id=\"form-product\"\n                ref=\"form-product\"\n              />\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"6\" :sm=\"24\" :xs=\"24\" class=\"form-vertical-item\">\n            <el-form-item\n              :label=\"$t('warehouse.orderEntry.productDescription')\"\n              prop=\"productDescription\"\n            >\n              <el-input\n                v-model=\"form.productDescription\"\n                v-alphanumeric-validation\n                maxlength=\"30\"\n                clearable\n                class=\"inline-input\"\n                id=\"form-product-description\"\n              ></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"3\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.poNumber')\" prop=\"po\">\n              <el-input\n                v-model=\"form.po\"\n                v-alphanumeric-validation\n                maxlength=\"25\"\n                clearable\n                class=\"inline-input\"\n                id=\"form-po-number\"\n              ></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"3\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.farmName')\" prop=\"farmName\">\n              <el-input\n                v-model=\"form.farmName\"\n                v-alphanumeric-validation\n                maxlength=\"100\"\n                clearable\n                class=\"inline-input\"\n                id=\"form-farm-name\"\n              ></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"3\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n            <div class=\"el-form-item el-form-item--mini\">\n              <el-tooltip\n                class=\"item\"\n                effect=\"dark\"\n                :content=\"$t('warehouse.orderEntry.addOrder')\"\n                placement=\"top-start\"\n              >\n                <el-button\n                  id=\"form-save-button\"\n                  @click=\"submitForm()\"\n                  icon=\"el-icon-plus\"\n                  size=\"mini\"\n                  class=\"button-action-default margin-t-38\"\n                ></el-button>\n              </el-tooltip>\n              <el-tooltip\n                class=\"item\"\n                effect=\"dark\"\n                :content=\"$t('warehouse.orderEntry.clear')\"\n                placement=\"top-start\"\n              >\n                <el-button\n                  id=\"form-refresh-button\"\n                  @click=\"resetForm()\"\n                  icon=\"fa fa-eraser\"\n                  size=\"mini\"\n                  class=\"button-action-default\"\n                ></el-button>\n              </el-tooltip>\n            </div>\n          </el-col>\n        </el-col>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">&nbsp;</span>\n    </el-dialog>\n  </span>\n</template>\n\n<script>\nimport { Message } from 'element-ui';\nimport moment from 'moment';\nimport { mapGetters } from 'vuex';\nimport constants from '@/utils/constants';\nimport apiConstants from '@/utils/apiConstants';\nimport Autocomplete from '@/components/Autocomplete';\n\nconst formConsignee = 'form-consignee';\n\nexport default {\n  components: { Autocomplete },\n  computed: {\n    ...mapGetters(['orderEntry'])\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      form: {\n        consigneeAccountId: null,\n        unitOfMeasure: constants.ORDER_ENTRY.UNIT_OF_MEASURE_LIST[0].value,\n        measure: constants.ORDER_ENTRY.MEASURE_LIST[0].value,\n        shipDate: new Date(),\n        totalUnits: null,\n        length: null,\n        width: null,\n        height: null,\n        productCode: '',\n        productDescription: '',\n        po: '',\n        farmName: ''\n      },\n      formRules: {\n        consigneeAccountId: [\n          {\n            required: true,\n            message: this.$t('warehouse.orderEntry.error.consigneeRequired'),\n            trigger: 'submit'\n          }\n        ],\n        unitOfMeasure: [\n          {\n            required: true,\n            message: this.$t(\n              'warehouse.orderEntry.error.unitOfMeasureRequired'\n            ),\n            trigger: 'blur'\n          }\n        ],\n        shipDate: [\n          {\n            required: true,\n            message: this.$t('warehouse.orderEntry.error.shipDateRequired'),\n            trigger: 'blur'\n          }\n        ],\n        length: [\n          {\n            required: true,\n            message: this.$t('warehouse.orderEntry.error.lengthRequired'),\n            trigger: 'blur'\n          }\n        ],\n        width: [\n          {\n            required: true,\n            message: this.$t('warehouse.orderEntry.error.widthRequired'),\n            trigger: 'blur'\n          }\n        ],\n        height: [\n          {\n            required: true,\n            message: this.$t('warehouse.orderEntry.error.heightRequired'),\n            trigger: 'blur'\n          }\n        ],\n        totalUnits: [\n          {\n            required: true,\n            message: this.$t('warehouse.orderEntry.error.numberUnitsRequired'),\n            trigger: 'blur'\n          }\n        ]\n      },\n      unitOfMeasureOptions: constants.ORDER_ENTRY.UNIT_OF_MEASURE_LIST,\n      measureOptions: constants.ORDER_ENTRY.MEASURE_LIST,\n      urlConsignee: apiConstants.END_POINTS.ACCOUNTS.CONSIGNEE_BY_SHIPPER,\n      urlProduct: apiConstants.END_POINTS.PRODUCT_SEARCH\n    };\n  },\n  methods: {\n    handleOpen() {\n      this.form.shipDate = moment(\n        this.orderEntry.actualFilters.shipDate,\n        'YYYY-MM-DD'\n      ).toDate();\n      this.$nextTick(() => {\n        this.form.consigneeAccountId = this.orderEntry.actualFilters.consigneeAccountId;\n        this.$refs[formConsignee].setLocalModel(\n          this.orderEntry.actualFilters.consigneeName\n        );\n        this.$refs.form.$el[0].focus();\n      });\n    },\n    handleClose(done) {\n      this.resetForm();\n      done();\n    },\n    async submitForm() {\n      const minValue = this.orderEntry.settings.minCubesPerBox;\n\n      let length;\n      let width;\n      let height;\n\n      if (this.form.measure === constants.ORDER_ENTRY.MEASURE_LIST[1].value) {\n        length = this.$refs.length.value * constants.ORDER_ENTRY.CONST_VALUE;\n        width = this.$refs.width.value * constants.ORDER_ENTRY.CONST_VALUE;\n        height = this.$refs.height.value * constants.ORDER_ENTRY.CONST_VALUE;\n      } else {\n        length = this.$refs.length.value;\n        width = this.$refs.width.value;\n        height = this.$refs.height.value;\n      }\n      const volume = length * width * height;\n      if (volume <= minValue) {\n        let message = this.$t('warehouse.orderEntry.error.minValueValidationError');\n        message = message.replace('[unit]', this.$refs.unit.value).replace('[minValue]', minValue);\n        const confirm = await this.$confirm(message, { confirmButtonText: this.$t('OK') });\n        if (confirm) {\n          return this.getSubmitForm();\n        }\n        return false;\n      } if (volume > constants.ORDER_ENTRY.MAX_VALUE) {\n        let message = this.$t('warehouse.orderEntry.error.maxValueValidationError');\n        message = message.replace('[minValue]', minValue).replace('[max_value]', constants.ORDER_ENTRY.MAX_VALUE);\n        this.$message.warning(message);\n        return false;\n      }\n      return this.getSubmitForm();\n    },\n    resetForm() {\n      this.$refs.form.resetFields();\n      this.form.consigneeId = null;\n      this.form.productCode = '';\n      this.form.productDescription = '';\n      this.$refs['form-product'].clearLocalModel();\n      this.$refs[formConsignee].clearLocalModel();\n      this.form.shipDate = moment(\n        this.orderEntry.actualFilters.shipDate,\n        'YYYY-MM-DD'\n      ).toDate();\n      this.$nextTick(() => {\n        this.form.consigneeAccountId = this.orderEntry.actualFilters.consigneeAccountId;\n        this.$refs[formConsignee].setLocalModel(\n          this.orderEntry.actualFilters.consigneeName\n        );\n      });\n      this.$refs.form.$el[0].focus();\n    },\n    /* The datepicker has an issue when change manually, the focus is lost. */\n    handleChangeDate() {\n      this.$refs.form.$el[4].focus();\n    },\n    isVisible() {\n      return (\n        this.$can(this.permissions.DATA_ENTRY.ADD_SHIPMENT)\n        || this.$can(this.permissions.DATA_ENTRY.ADD_SHIPMENT_AFTER_CUTOFF)\n      );\n    },\n    getSubmitForm() {\n      return new Promise((resolve, reject) => {\n        this.$refs.form.validate((valid) => {\n          if (valid) {\n            Message.closeAll();\n            const loading = this.$loading(constants.LOADING.DEFAULT_CONFIG);\n            this.$store\n              .dispatch('orderEntry/save', this.form)\n              .then((response) => {\n                loading.close();\n                this.$message.success(response.message);\n                this.resetForm();\n                this.$refs.form.$el[0].focus();\n                this.$store.dispatch('orderEntry/search', {});\n                resolve(response);\n              })\n              .catch((error) => {\n                loading.close();\n                reject(error);\n              });\n          } else {\n            reject(new Error(this.$t('common.invalid')));\n          }\n        });\n      });\n    }\n  }\n};\n</script>\n<style rel=\"stylesheet/scss\" lang=\"scss\">\n\n  .dialog-btn {\n        background: transparent !important;\n        border: 0 !important;\n        padding: 0;\n  }\n</style>\n"]}]}