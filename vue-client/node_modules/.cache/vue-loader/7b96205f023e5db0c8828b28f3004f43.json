{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/orderEntry/components/extensions/SubmitExtensionButton.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/orderEntry/components/extensions/SubmitExtensionButton.vue","mtime":1566984596000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment';\nimport { mapGetters } from 'vuex';\n\nexport default {\n  components: {},\n  computed: {\n    ...mapGetters([\n      'orderEntry',\n      'user',\n      'extensions'\n    ])\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      datePickerHourOptions: {\n        step: '00:15',\n        end: '23:59'\n      },\n      form: {\n        shipDate: new Date(),\n        shippingHour: null,\n        applicantName: null,\n        contactNumber: null,\n        email: null\n      },\n      summary: [],\n      formRules: {\n        shipDate: [\n          { required: true, message: this.$t('warehouse.orderEntry.error.shipDateRequired'), trigger: 'blur' }\n        ],\n        shippingHour: [\n          { required: true, message: this.$t('warehouse.orderEntry.error.hourRequired'), trigger: 'blur' }\n        ],\n        applicantName: [\n          { required: true, message: this.$t('warehouse.orderEntry.error.applicantNameRequired'), trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: this.$t('signUp.errors.emailRequired'), trigger: 'blur' },\n          { type: 'email', message: this.$t('signUp.errors.emailValid'), trigger: 'blur' }\n        ]\n      },\n    };\n  },\n  methods: {\n    handleClose(done) {\n      done();\n    },\n    handleOpen() {\n      this.form.applicantName = this.user.name;\n      this.form.email = this.user.email;\n      const currentHour = moment();\n      const cutOffHour = moment(this.orderEntry.settings.cutoffHourForToday, 'HH:mm:ss');\n      const minHour = currentHour.isAfter(cutOffHour) ? currentHour.format('HH:mm') : cutOffHour.format('HH:mm');\n      this.datePickerHourOptions.start = minHour;\n\n      // Clear summary info and update with the store value.\n      this.summary = [];\n      for (const consigneeAccountId in this.extensions.selectedByConsignee) {\n        if (Object.prototype.hasOwnProperty.call(this.extensions.selectedByConsignee, consigneeAccountId)) {\n          this.summary.push(this.extensions.selectedByConsignee[consigneeAccountId]);\n        }\n      }\n\n      // NextTick is excecuted when from is ready and then we can put the focus.\n      this.$nextTick(() => {\n        this.$refs['form-shipping-hour'].focus();\n      });\n    },\n    formValidate() {\n      return new Promise((resolve) => {\n        this.$refs.form.validate((valid) => {\n          let validLengthExtensionDetail = false;\n          if (valid) {\n            for (const consigneeAccountId in this.extensions.selectedByConsignee) {\n              if (Object.prototype.hasOwnProperty.call(this.extensions.selectedByConsignee, consigneeAccountId)) {\n                validLengthExtensionDetail = this.extensions.selectedByConsignee[consigneeAccountId].consolidations.length > 0;\n                if (validLengthExtensionDetail) {\n                  break;\n                }\n              }\n            }\n            if (!validLengthExtensionDetail) {\n              this.$message.warning(this.$t('warehouse.orderEntry.extensions.selectShipmentsFirst'));\n            }\n          }\n          resolve(valid && validLengthExtensionDetail);\n        });\n      });\n    },\n    async handleSubmit() {\n      const valid = await this.formValidate();\n      if (valid) {\n        const confirmSubmitExtension = await this.$confirm(this.$t('warehouse.orderEntry.extensions.confirmSubmitExplanation'), { confirmButtonText: this.$t('common.yes'), dangerouslyUseHTMLString: true }).catch(() => {});\n        if (confirmSubmitExtension) {\n          const response = await this.$store.dispatch('extensions/submit', Object.assign({ shipperAccountId: this.orderEntry.actualFilters.shipperAccountId }, this.form)).catch(() => {});\n          if (response) {\n            this.$store.dispatch('orderEntry/setIsCreatingExtension', false);\n            this.dialogVisible = false;\n            this.$refs.form.resetFields();\n            const message = `<div class=\"alert-success-extension-submit\">\n              <div class=\"container-clock-extension\">\n                <i class=\"far fa-clock icon-clock-extension\"></i>\n              </div>\n              <div class=\"text-message-extension\">\n                ${response.message}\n              </div>\n            </div>`;\n            this.$store.dispatch('orderEntry/search', {});\n            this.$alert(message, {\n              dangerouslyUseHTMLString: true\n            });\n          }\n        }\n      }\n    }\n  }\n};\n",{"version":3,"sources":["SubmitExtensionButton.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"SubmitExtensionButton.vue","sourceRoot":"src/views/warehouse/orderEntry/components/extensions","sourcesContent":["<template>\n<span>\n  <el-button id=\"btn-open-dialog-submit-extension\" type=\"primary\" size=\"mini\" @click=\"dialogVisible = true\"> {{ $t('common.submit') }}</el-button>\n  <el-dialog\n    :close-on-click-modal=\"false\"\n    v-on:open=\"handleOpen\"\n    :title=\"$t('warehouse.orderEntry.extensions.extensionRequest')\"\n    :visible.sync=\"dialogVisible\"\n    width=\"40%\"\n    id=\"submit-extension-dialog\"\n    class=\"dialog-with-cols\"\n    :before-close=\"handleClose\">\n    <div id=\"submit-extension-div\">\n      <el-form :model=\"form\" :rules=\"formRules\" ref=\"form\" label-position=\"top\" size=\"mini\" class=\"form-with-cols\">\n      <el-col :span=\"24\">\n          <el-col :md=\"12\" :sm=\"24\" :xs=\"24\" class=\"form-vertical-item\">\n              <el-form-item :label=\"$t('warehouse.orderEntry.shipDate')\" prop=\"shipDate\">\n                <el-date-picker\n                  v-model=\"form.shipDate\"\n                  :disabled=\"true\"\n                  :default-value=\"orderEntry.actualFilters.shipDate\"\n                  style=\"width: 100%\"\n                  format=\"MM/dd/yyyy\"\n                  :picker-options=\"orderEntry.shipDatePickerOptions\"\n                  type=\"date\"\n                  id=\"form-extensions-ship-date\">\n                </el-date-picker>\n              </el-form-item>\n          </el-col>\n          <el-col :md=\"12\" :sm=\"12\" :xs=\"12\" class=\"form-vertical-item\">\n              <el-form-item :label=\"$t('warehouse.orderEntry.hour')\" prop=\"shippingHour\">\n                <el-time-select\n                  id=\"form-extensions-shipping-hour\"\n                  ref=\"form-shipping-hour\"\n                  style=\"width: 100%\"\n                  placeholder=\"Start time\"\n                  v-model=\"form.shippingHour\"\n                  :picker-options=\"datePickerHourOptions\">\n                </el-time-select>\n              </el-form-item>\n          </el-col>\n          <el-col :md=\"24\" :sm=\"24\" :xs=\"24\" class=\"form-vertical-item\">\n              <el-form-item :label=\"$t('warehouse.orderEntry.applicantName')\" prop=\"applicantName\">\n                <el-input\n                  v-model=\"form.applicantName\"\n                  maxlength=\"80\"\n                  clearable\n                  class=\"inline-input\"\n                  id=\"form-extensions-applicant-name\">\n                </el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"12\" :sm=\"24\" :xs=\"24\" class=\"form-vertical-item\">\n              <el-form-item :label=\"$t('common.email')\" prop=\"email\">\n                <el-input\n                  v-model=\"form.email\"\n                  maxlength=\"100\"\n                  clearable\n                  class=\"inline-input\"\n                  id=\"form-extensions-email\">\n                </el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"12\" :sm=\"24\" :xs=\"24\" class=\"form-vertical-item\">\n              <el-form-item :label=\"$t('warehouse.orderEntry.contactNumber')\" prop=\"contactNumber\">\n                <el-input\n                  v-model=\"form.contactNumber\"\n                  maxlength=\"15\"\n                  clearable\n                  class=\"inline-input\"\n                  id=\"form-extensions-contact-number\">\n                </el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :md=\"24\" :sm=\"24\" :xs=\"24\" class=\"form-vertical-item\">\n            <el-form-item :label=\"$t('warehouse.orderEntry.extensions.notes')\" prop=\"notes\">\n              <el-input\n                v-model=\"form.notes\"\n                type=\"textarea\"\n                maxlength=\"200\"\n                show-word-limit\n                clearable\n                class=\"inline-input\"\n                id=\"form-extensions-notes\"\n              >\n              </el-input>\n            </el-form-item>\n          </el-col>\n          <!--- TABLE SUMMARY --->\n          <el-col :md=\"24\" :sm=\"24\" :xs=\"24\">\n            <div class=\"height-100-p summary-extension-submit\">\n              <el-table\n                :data=\"summary\"\n                id=\"summary-extension-submit-list\"\n                size=\"mini\"\n                tooltip-effect=\"dark\"\n                sortable\n                class=\"dark-blue-table\"\n                :empty-text=\"$t('warehouse.orderEntry.extensions.noShipmentsSelected')\"\n                stripe>\n                <el-table-column\n                  prop=\"consigneeAccountName\"\n                  :sortable=\"true\"\n                  :min-width=\"75\"\n                  align=\"center\"\n                  :label=\"$t('warehouse.orderEntry.consignee')\">\n                </el-table-column>\n                <el-table-column\n                  prop=\"totalUnits\"\n                  :sortable=\"true\"\n                  :min-width=\"25\"\n                  :label=\"$t('warehouse.orderEntry.units')\">\n                </el-table-column>\n                </el-table>\n              </div>\n            </el-col>\n            <!--- END TABLE SUMMARY --->\n        </el-col>\n        </el-form>\n    </div>\n    <div slot=\"footer\" class=\"dialog-footer\">\n       <el-button @click=\"dialogVisible = false\" size=\"mini\">{{ $t('common.cancel') }}</el-button>\n       <el-button type=\"primary\" @click=\"handleSubmit\" size=\"mini\" class=\"margin-r-18\" id=\"btn-submit-extension\">{{ $t('common.submit') }}</el-button>\n    </div>\n  </el-dialog>\n</span>\n</template>\n\n<script>\nimport moment from 'moment';\nimport { mapGetters } from 'vuex';\n\nexport default {\n  components: {},\n  computed: {\n    ...mapGetters([\n      'orderEntry',\n      'user',\n      'extensions'\n    ])\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      datePickerHourOptions: {\n        step: '00:15',\n        end: '23:59'\n      },\n      form: {\n        shipDate: new Date(),\n        shippingHour: null,\n        applicantName: null,\n        contactNumber: null,\n        email: null\n      },\n      summary: [],\n      formRules: {\n        shipDate: [\n          { required: true, message: this.$t('warehouse.orderEntry.error.shipDateRequired'), trigger: 'blur' }\n        ],\n        shippingHour: [\n          { required: true, message: this.$t('warehouse.orderEntry.error.hourRequired'), trigger: 'blur' }\n        ],\n        applicantName: [\n          { required: true, message: this.$t('warehouse.orderEntry.error.applicantNameRequired'), trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: this.$t('signUp.errors.emailRequired'), trigger: 'blur' },\n          { type: 'email', message: this.$t('signUp.errors.emailValid'), trigger: 'blur' }\n        ]\n      },\n    };\n  },\n  methods: {\n    handleClose(done) {\n      done();\n    },\n    handleOpen() {\n      this.form.applicantName = this.user.name;\n      this.form.email = this.user.email;\n      const currentHour = moment();\n      const cutOffHour = moment(this.orderEntry.settings.cutoffHourForToday, 'HH:mm:ss');\n      const minHour = currentHour.isAfter(cutOffHour) ? currentHour.format('HH:mm') : cutOffHour.format('HH:mm');\n      this.datePickerHourOptions.start = minHour;\n\n      // Clear summary info and update with the store value.\n      this.summary = [];\n      for (const consigneeAccountId in this.extensions.selectedByConsignee) {\n        if (Object.prototype.hasOwnProperty.call(this.extensions.selectedByConsignee, consigneeAccountId)) {\n          this.summary.push(this.extensions.selectedByConsignee[consigneeAccountId]);\n        }\n      }\n\n      // NextTick is excecuted when from is ready and then we can put the focus.\n      this.$nextTick(() => {\n        this.$refs['form-shipping-hour'].focus();\n      });\n    },\n    formValidate() {\n      return new Promise((resolve) => {\n        this.$refs.form.validate((valid) => {\n          let validLengthExtensionDetail = false;\n          if (valid) {\n            for (const consigneeAccountId in this.extensions.selectedByConsignee) {\n              if (Object.prototype.hasOwnProperty.call(this.extensions.selectedByConsignee, consigneeAccountId)) {\n                validLengthExtensionDetail = this.extensions.selectedByConsignee[consigneeAccountId].consolidations.length > 0;\n                if (validLengthExtensionDetail) {\n                  break;\n                }\n              }\n            }\n            if (!validLengthExtensionDetail) {\n              this.$message.warning(this.$t('warehouse.orderEntry.extensions.selectShipmentsFirst'));\n            }\n          }\n          resolve(valid && validLengthExtensionDetail);\n        });\n      });\n    },\n    async handleSubmit() {\n      const valid = await this.formValidate();\n      if (valid) {\n        const confirmSubmitExtension = await this.$confirm(this.$t('warehouse.orderEntry.extensions.confirmSubmitExplanation'), { confirmButtonText: this.$t('common.yes'), dangerouslyUseHTMLString: true }).catch(() => {});\n        if (confirmSubmitExtension) {\n          const response = await this.$store.dispatch('extensions/submit', Object.assign({ shipperAccountId: this.orderEntry.actualFilters.shipperAccountId }, this.form)).catch(() => {});\n          if (response) {\n            this.$store.dispatch('orderEntry/setIsCreatingExtension', false);\n            this.dialogVisible = false;\n            this.$refs.form.resetFields();\n            const message = `<div class=\"alert-success-extension-submit\">\n              <div class=\"container-clock-extension\">\n                <i class=\"far fa-clock icon-clock-extension\"></i>\n              </div>\n              <div class=\"text-message-extension\">\n                ${response.message}\n              </div>\n            </div>`;\n            this.$store.dispatch('orderEntry/search', {});\n            this.$alert(message, {\n              dangerouslyUseHTMLString: true\n            });\n          }\n        }\n      }\n    }\n  }\n};\n</script>\n<style rel=\"stylesheet/scss\" lang=\"scss\">\n#btn-open-dialog-submit-extension {\n  margin-left: 10px;\n}\n.summary-extension-submit {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n.alert-success-extension-submit {\n  display: flex;\n  align-items: center;\n  .container-clock-extension {\n    width: 20%;\n    display: inline;\n    .icon-clock-extension {\n      font-size: 62px;\n      color: orange\n    }\n  }\n  .text-message-extension {\n    width: 80%;\n    display: inline;\n  }\n}\n</style>\n"]}]}