{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/orderEntry/TableSummary.vue?vue&type=template&id=4a568de6&","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/views/warehouse/orderEntry/TableSummary.vue","mtime":1566984596000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"height-100-p\" },\n    [\n      _c(\n        \"el-form\",\n        {\n          ref: \"editForm\",\n          attrs: { model: _vm.editForm, rules: _vm.editFormRules }\n        },\n        [\n          _c(\n            \"el-table\",\n            {\n              directives: [\n                {\n                  name: \"loading\",\n                  rawName: \"v-loading\",\n                  value: _vm.orderEntry.loadingSearch,\n                  expression: \"orderEntry.loadingSearch\"\n                }\n              ],\n              staticClass: \"dark-blue-table\",\n              attrs: {\n                data: _vm.orderEntry.list,\n                id: \"order-data-list\",\n                size: \"mini\",\n                \"tooltip-effect\": \"dark\",\n                sortable: \"\",\n                \"empty-text\": _vm.$t(\"common.notAbleToFindRecords\"),\n                stripe: \"\"\n              },\n              on: { \"sort-change\": _vm.handleSortChange }\n            },\n            [\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"orderNumber\",\n                  sortable: \"custom\",\n                  \"min-width\": 15,\n                  align: \"center\",\n                  label: _vm.$t(\"warehouse.orderEntry.orderNumberShort\")\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\n                          \"el-tooltip\",\n                          {\n                            staticClass: \"item\",\n                            attrs: {\n                              effect: \"dark\",\n                              content: scope.row.orderNumber,\n                              placement: \"top\"\n                            }\n                          },\n                          [\n                            _c(\"span\", [\n                              _vm._v(\" \" + _vm._s(scope.row.orderNumber) + \" \")\n                            ])\n                          ]\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"consignee\",\n                  sortable: \"custom\",\n                  \"min-width\": 30,\n                  label: _vm.$t(\"warehouse.orderEntry.consignee\")\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        scope.row.edit\n                          ? [\n                              _c(\n                                \"el-form-item\",\n                                { attrs: { prop: \"consigneeAccountId\" } },\n                                [\n                                  _c(\"autocomplete\", {\n                                    ref: \"row-consignee\",\n                                    attrs: {\n                                      model: _vm.editForm.consigneeAccountId,\n                                      shipperAccountId:\n                                        _vm.orderEntry.settings\n                                          .shipperAccountId,\n                                      labelFieldLastWithDash: \"number\",\n                                      popperAppendToBody: \"\",\n                                      url: _vm.urlConsignee,\n                                      labelField: \"name\",\n                                      valueField: \"id\",\n                                      id: \"row-consignee\"\n                                    },\n                                    on: {\n                                      \"update:model\": function($event) {\n                                        return _vm.$set(\n                                          _vm.editForm,\n                                          \"consigneeAccountId\",\n                                          $event\n                                        )\n                                      }\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ]\n                          : [\n                              _c(\n                                \"el-tooltip\",\n                                {\n                                  staticClass: \"item\",\n                                  attrs: {\n                                    effect: \"dark\",\n                                    content:\n                                      scope.row.consigneeName +\n                                      \" - \" +\n                                      scope.row.consigneeAccount,\n                                    placement: \"top\"\n                                  }\n                                },\n                                [\n                                  _c(\"span\", [\n                                    _vm._v(\n                                      \" \" +\n                                        _vm._s(scope.row.consigneeName) +\n                                        \" - \" +\n                                        _vm._s(scope.row.consigneeAccount)\n                                    )\n                                  ])\n                                ]\n                              )\n                            ]\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"min-width\": 10,\n                  prop: \"unitOfMeasure\",\n                  label: _vm.$t(\"warehouse.orderEntry.unitOfMeasureShort\")\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        scope.row.edit\n                          ? [\n                              _c(\n                                \"el-form-item\",\n                                { attrs: { prop: \"unitOfMeasureName\" } },\n                                [\n                                  _c(\n                                    \"el-select\",\n                                    {\n                                      ref: \"row-unitOfMeasureName\",\n                                      attrs: {\n                                        id: \"row-unitOfMeasureName\",\n                                        size: \"mini\"\n                                      },\n                                      model: {\n                                        value: _vm.editForm.unitOfMeasureName,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.editForm,\n                                            \"unitOfMeasureName\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"editForm.unitOfMeasureName\"\n                                      }\n                                    },\n                                    _vm._l(_vm.unitOfMeasureOptions, function(\n                                      item\n                                    ) {\n                                      return _c(\"el-option\", {\n                                        key: item.value,\n                                        attrs: {\n                                          label: item.label,\n                                          value: item.value\n                                        }\n                                      })\n                                    }),\n                                    1\n                                  )\n                                ],\n                                1\n                              )\n                            ]\n                          : _c(\"span\", [\n                              _vm._v(_vm._s(scope.row.unitOfMeasureName))\n                            ])\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"min-width\": 8,\n                  prop: \"numberUnits\",\n                  label: _vm.$t(\"warehouse.orderEntry.numberOfUnitsShort\")\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        scope.row.edit && scope.row.status !== _vm.finalizedId\n                          ? [\n                              _c(\n                                \"el-form-item\",\n                                { attrs: { prop: \"numberUnits\" } },\n                                [\n                                  _c(\"el-input-number\", {\n                                    directives: [\n                                      {\n                                        name: \"numeric-validation\",\n                                        rawName: \"v-numeric-validation\"\n                                      }\n                                    ],\n                                    staticClass: \"inline-input width-100p\",\n                                    attrs: {\n                                      precision: 0,\n                                      min: 1,\n                                      max: 999,\n                                      maxlength: 3,\n                                      controls: false,\n                                      size: \"mini\",\n                                      id: \"row-number-units\"\n                                    },\n                                    model: {\n                                      value: _vm.editForm.numberUnits,\n                                      callback: function($$v) {\n                                        _vm.$set(\n                                          _vm.editForm,\n                                          \"numberUnits\",\n                                          $$v\n                                        )\n                                      },\n                                      expression: \"editForm.numberUnits\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ]\n                          : _c(\"span\", [_vm._v(_vm._s(scope.row.numberUnits))])\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"min-width\": 10,\n                  prop: \"measure\",\n                  label: _vm.$t(\"warehouse.orderEntry.measure\")\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        scope.row.edit\n                          ? [\n                              _c(\n                                \"el-form-item\",\n                                { attrs: { prop: \"measure\" } },\n                                [\n                                  _c(\n                                    \"el-select\",\n                                    {\n                                      ref: \"row-measure\",\n                                      attrs: {\n                                        id: \"row-measure\",\n                                        size: \"mini\"\n                                      },\n                                      model: {\n                                        value: _vm.editForm.measure,\n                                        callback: function($$v) {\n                                          _vm.$set(_vm.editForm, \"measure\", $$v)\n                                        },\n                                        expression: \"editForm.measure\"\n                                      }\n                                    },\n                                    _vm._l(_vm.measureOptions, function(item) {\n                                      return _c(\"el-option\", {\n                                        key: item.value,\n                                        attrs: {\n                                          label: item.label,\n                                          value: item.value\n                                        }\n                                      })\n                                    }),\n                                    1\n                                  )\n                                ],\n                                1\n                              )\n                            ]\n                          : _c(\"span\", [_vm._v(_vm._s(scope.row.measure))])\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"length\",\n                  \"min-width\": 8,\n                  label: _vm.$t(\"warehouse.orderEntry.length\")\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        scope.row.edit\n                          ? [\n                              _c(\n                                \"el-form-item\",\n                                { attrs: { prop: \"length\" } },\n                                [\n                                  _c(\"el-input-number\", {\n                                    directives: [\n                                      {\n                                        name: \"numeric-validation\",\n                                        rawName: \"v-numeric-validation\"\n                                      }\n                                    ],\n                                    ref: \"row-length\",\n                                    staticClass: \"inline-input width-100p\",\n                                    attrs: {\n                                      controls: false,\n                                      precision: 2,\n                                      min: 0,\n                                      max: 999.99,\n                                      size: \"mini\",\n                                      id: \"row-length\"\n                                    },\n                                    model: {\n                                      value: _vm.editForm.length,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.editForm, \"length\", $$v)\n                                      },\n                                      expression: \"editForm.length\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ]\n                          : _c(\"span\", [_vm._v(_vm._s(scope.row.length))])\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"width\",\n                  \"min-width\": 8,\n                  label: _vm.$t(\"warehouse.orderEntry.width\")\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        scope.row.edit\n                          ? [\n                              _c(\n                                \"el-form-item\",\n                                { attrs: { prop: \"width\" } },\n                                [\n                                  _c(\"el-input-number\", {\n                                    directives: [\n                                      {\n                                        name: \"numeric-validation\",\n                                        rawName: \"v-numeric-validation\"\n                                      }\n                                    ],\n                                    ref: \"row-width\",\n                                    staticClass: \"inline-input width-100p\",\n                                    attrs: {\n                                      controls: false,\n                                      precision: 2,\n                                      min: 0,\n                                      max: 999.99,\n                                      size: \"mini\",\n                                      id: \"row-width\"\n                                    },\n                                    model: {\n                                      value: _vm.editForm.width,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.editForm, \"width\", $$v)\n                                      },\n                                      expression: \"editForm.width\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ]\n                          : _c(\"span\", [_vm._v(_vm._s(scope.row.width))])\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"height\",\n                  \"min-width\": 8,\n                  label: _vm.$t(\"warehouse.orderEntry.height\")\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        scope.row.edit\n                          ? [\n                              _c(\n                                \"el-form-item\",\n                                { attrs: { prop: \"height\" } },\n                                [\n                                  _c(\"el-input-number\", {\n                                    directives: [\n                                      {\n                                        name: \"numeric-validation\",\n                                        rawName: \"v-numeric-validation\"\n                                      }\n                                    ],\n                                    ref: \"row-height\",\n                                    staticClass: \"inline-input width-100p\",\n                                    attrs: {\n                                      controls: false,\n                                      precision: 2,\n                                      min: 0,\n                                      max: 999.99,\n                                      size: \"mini\",\n                                      id: \"row-height\"\n                                    },\n                                    model: {\n                                      value: _vm.editForm.height,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.editForm, \"height\", $$v)\n                                      },\n                                      expression: \"editForm.height\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ]\n                          : _c(\"span\", [_vm._v(_vm._s(scope.row.height))])\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"min-width\": 10,\n                  prop: \"productCode\",\n                  label: _vm.$t(\"warehouse.orderEntry.product\")\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        scope.row.edit\n                          ? [\n                              _c(\n                                \"el-form-item\",\n                                { attrs: { prop: \"productCode\" } },\n                                [\n                                  _c(\"autocomplete\", {\n                                    ref: \"row-productCode\",\n                                    attrs: {\n                                      model: _vm.editForm.productCode,\n                                      modelAdditional:\n                                        _vm.editForm.productDescription,\n                                      popperAppendToBody: \"\",\n                                      strict: false,\n                                      url: _vm.urlProduct,\n                                      labelField: \"code\",\n                                      labelFieldLastWithDash: \"description\",\n                                      labelfieldSelected: \"code\",\n                                      valueField: \"code\",\n                                      valueFieldAdditional: \"description\",\n                                      maxlength: 5,\n                                      id: \"row-productCode\"\n                                    },\n                                    on: {\n                                      \"update:model\": function($event) {\n                                        return _vm.$set(\n                                          _vm.editForm,\n                                          \"productCode\",\n                                          $event\n                                        )\n                                      },\n                                      \"update:modelAdditional\": function(\n                                        $event\n                                      ) {\n                                        return _vm.$set(\n                                          _vm.editForm,\n                                          \"productDescription\",\n                                          $event\n                                        )\n                                      },\n                                      \"update:model-additional\": function(\n                                        $event\n                                      ) {\n                                        return _vm.$set(\n                                          _vm.editForm,\n                                          \"productDescription\",\n                                          $event\n                                        )\n                                      }\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ]\n                          : _c(\"span\", [_vm._v(_vm._s(scope.row.productCode))])\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"productDescription\",\n                  sortable: \"custom\",\n                  \"min-width\": 23,\n                  label: _vm.$t(\"warehouse.orderEntry.productDescription\")\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        scope.row.edit\n                          ? [\n                              _c(\n                                \"el-form-item\",\n                                { attrs: { prop: \"productDescription\" } },\n                                [\n                                  _c(\"el-input\", {\n                                    directives: [\n                                      {\n                                        name: \"alphanumeric-validation\",\n                                        rawName: \"v-alphanumeric-validation\"\n                                      }\n                                    ],\n                                    ref: \"row-product-description\",\n                                    staticClass: \"inline-input\",\n                                    attrs: {\n                                      clearable: \"\",\n                                      maxlength: \"30\",\n                                      size: \"mini\",\n                                      id: \"row-product-description\"\n                                    },\n                                    model: {\n                                      value: _vm.editForm.productDescription,\n                                      callback: function($$v) {\n                                        _vm.$set(\n                                          _vm.editForm,\n                                          \"productDescription\",\n                                          $$v\n                                        )\n                                      },\n                                      expression: \"editForm.productDescription\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ]\n                          : [\n                              _c(\n                                \"el-tooltip\",\n                                {\n                                  staticClass: \"item\",\n                                  attrs: {\n                                    effect: \"dark\",\n                                    content: scope.row.productDescription,\n                                    placement: \"top\"\n                                  }\n                                },\n                                [\n                                  _c(\"span\", [\n                                    _vm._v(\n                                      \" \" +\n                                        _vm._s(scope.row.productDescription) +\n                                        \" \"\n                                    )\n                                  ])\n                                ]\n                              )\n                            ]\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"min-width\": 8,\n                  prop: \"poNumber\",\n                  label: _vm.$t(\"warehouse.orderEntry.poNumber\")\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        scope.row.edit\n                          ? [\n                              _c(\n                                \"el-form-item\",\n                                { attrs: { prop: \"poNumber\" } },\n                                [\n                                  _c(\"el-input\", {\n                                    directives: [\n                                      {\n                                        name: \"alphanumeric-validation\",\n                                        rawName: \"v-alphanumeric-validation\"\n                                      }\n                                    ],\n                                    ref: \"row-po-number\",\n                                    staticClass: \"inline-input\",\n                                    attrs: {\n                                      clearable: \"\",\n                                      maxlength: \"25\",\n                                      size: \"mini\",\n                                      id: \"row-po-number\"\n                                    },\n                                    model: {\n                                      value: _vm.editForm.poNumber,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.editForm, \"poNumber\", $$v)\n                                      },\n                                      expression: \"editForm.poNumber\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ]\n                          : [\n                              _c(\n                                \"el-tooltip\",\n                                {\n                                  staticClass: \"item\",\n                                  attrs: {\n                                    effect: \"dark\",\n                                    content: scope.row.poNumber,\n                                    placement: \"top\"\n                                  }\n                                },\n                                [\n                                  _c(\"span\", [\n                                    _vm._v(\n                                      \" \" + _vm._s(scope.row.poNumber) + \" \"\n                                    )\n                                  ])\n                                ]\n                              )\n                            ]\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"min-width\": 15,\n                  prop: \"farmName\",\n                  label: _vm.$t(\"warehouse.orderEntry.farmBroker\")\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        scope.row.edit\n                          ? [\n                              _c(\n                                \"el-form-item\",\n                                { attrs: { prop: \"farmName\" } },\n                                [\n                                  _c(\"autocomplete\", {\n                                    ref: \"row-farm-broker\",\n                                    attrs: {\n                                      model: _vm.editForm.farmName,\n                                      popperAppendToBody: \"\",\n                                      strict: false,\n                                      url: _vm.urlFarmName,\n                                      labelField: \"name\",\n                                      labelfieldSelected: \"name\",\n                                      valueField: \"id\",\n                                      valueFieldAdditional: \"name\",\n                                      maxlength: 100,\n                                      id: \"row-farm-broker\"\n                                    },\n                                    on: {\n                                      \"update:model\": function($event) {\n                                        return _vm.$set(\n                                          _vm.editForm,\n                                          \"farmName\",\n                                          $event\n                                        )\n                                      }\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ]\n                          : [\n                              _c(\n                                \"el-tooltip\",\n                                {\n                                  staticClass: \"item\",\n                                  attrs: {\n                                    effect: \"dark\",\n                                    content: scope.row.farmName,\n                                    placement: \"top\"\n                                  }\n                                },\n                                [\n                                  _c(\"span\", [\n                                    _vm._v(\n                                      \" \" + _vm._s(scope.row.farmName) + \" \"\n                                    )\n                                  ])\n                                ]\n                              )\n                            ]\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  align: \"center\",\n                  \"min-width\": 9,\n                  prop: \"status\",\n                  label: _vm.$t(\"warehouse.orderEntry.finalized\")\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"span\", { staticClass: \"icon-status-span\" }, [\n                          scope.row.status === _vm.finalizedId\n                            ? _c(\"i\", {\n                                staticClass: \"el-icon-success green-success\"\n                              })\n                            : _vm._e()\n                        ]),\n                        _c(\n                          \"span\",\n                          { staticClass: \"icon-status-span\" },\n                          [\n                            scope.row.lastExtensionNumber\n                              ? _c(\n                                  \"el-tooltip\",\n                                  {\n                                    staticClass: \"item\",\n                                    attrs: {\n                                      effect: \"dark\",\n                                      content:\n                                        _vm.extensionStatus[\n                                          scope.row.lastExtensionStatus\n                                        ].name +\n                                        \" - \" +\n                                        scope.row.lastExtensionNumber,\n                                      placement: \"top-start\"\n                                    }\n                                  },\n                                  [\n                                    _c(\"i\", {\n                                      staticClass: \"far fa-clock\",\n                                      class:\n                                        _vm.extensionStatus[\n                                          scope.row.lastExtensionStatus\n                                        ].colorCssClass\n                                    })\n                                  ]\n                                )\n                              : _vm._e()\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _c(\"el-table-column\", {\n                attrs: {\n                  \"min-width\": 15,\n                  label: _vm.$t(\"common.options\"),\n                  align: \"center\",\n                  \"class-name\": \"fixed-width\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _vm.showEditButton(scope.row.status)\n                          ? _c(\n                              \"el-tooltip\",\n                              {\n                                staticClass: \"item\",\n                                attrs: {\n                                  effect: \"dark\",\n                                  enterable: false,\n                                  content: _vm.$t(\"warehouse.orderEntry.edit\"),\n                                  placement: \"top-start\"\n                                }\n                              },\n                              [\n                                _c(\"i\", {\n                                  staticClass: \"el-icon-edit icon-action\",\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.handleEdit(scope.row)\n                                    }\n                                  }\n                                })\n                              ]\n                            )\n                          : scope.row.edit\n                          ? [\n                              _c(\"el-button\", {\n                                attrs: {\n                                  icon: \"el-icon-success\",\n                                  circle: \"\",\n                                  size: \"mini\"\n                                },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.handleUpdate()\n                                  }\n                                }\n                              }),\n                              _c(\"el-button\", {\n                                attrs: {\n                                  icon: \"el-icon-circle-close\",\n                                  circle: \"\",\n                                  size: \"mini\"\n                                },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.cancelEdit(scope.row)\n                                  }\n                                }\n                              })\n                            ]\n                          : _vm._e(),\n                        !scope.row.edit\n                          ? [\n                              scope.row.status === _vm.finalizedId\n                                ? _c(\n                                    \"el-tooltip\",\n                                    {\n                                      staticClass: \"item\",\n                                      attrs: {\n                                        effect: \"dark\",\n                                        enterable: false,\n                                        content: _vm.$t(\n                                          \"warehouse.orderEntry.details\"\n                                        ),\n                                        placement: \"top-start\"\n                                      }\n                                    },\n                                    [\n                                      _c(\"units-detail-dialog\", {\n                                        attrs: {\n                                          unitsConsolidateId: scope.row.id\n                                        }\n                                      })\n                                    ],\n                                    1\n                                  )\n                                : _vm._e(),\n                              scope.row.status === _vm.finalizedId\n                                ? _c(\n                                    \"el-tooltip\",\n                                    {\n                                      staticClass: \"item\",\n                                      attrs: {\n                                        unitsConsolidateId: scope.row.id,\n                                        effect: \"dark\",\n                                        enterable: false,\n                                        content: _vm.$t(\n                                          \"warehouse.orderEntry.print\"\n                                        ),\n                                        placement: \"top-start\"\n                                      }\n                                    },\n                                    [\n                                      _c(\"print-unit-consolidate-label\", {\n                                        attrs: {\n                                          unitsConsolidateId: scope.row.id,\n                                          labelPrinted: scope.row.labelPrinted\n                                        },\n                                        on: {\n                                          \"update:labelPrinted\": function(\n                                            $event\n                                          ) {\n                                            return _vm.$set(\n                                              scope.row,\n                                              \"labelPrinted\",\n                                              $event\n                                            )\n                                          },\n                                          \"update:label-printed\": function(\n                                            $event\n                                          ) {\n                                            return _vm.$set(\n                                              scope.row,\n                                              \"labelPrinted\",\n                                              $event\n                                            )\n                                          }\n                                        }\n                                      })\n                                    ],\n                                    1\n                                  )\n                                : _vm._e(),\n                              _vm.showDeleteButton(scope.row.status)\n                                ? _c(\n                                    \"el-tooltip\",\n                                    {\n                                      staticClass: \"item\",\n                                      attrs: {\n                                        effect: \"dark\",\n                                        enterable: false,\n                                        content: _vm.$t(\n                                          \"warehouse.orderEntry.delete\"\n                                        ),\n                                        placement: \"top-start\"\n                                      }\n                                    },\n                                    [\n                                      _c(\"i\", {\n                                        staticClass:\n                                          \"el-icon-delete icon-action\",\n                                        attrs: {\n                                          type: \"primary\",\n                                          size: \"mini\"\n                                        },\n                                        on: {\n                                          click: function($event) {\n                                            return _vm.handleDelete(\n                                              scope.row.id,\n                                              scope.row.numberUnits,\n                                              scope.row.shipDate\n                                            )\n                                          }\n                                        }\n                                      })\n                                    ]\n                                  )\n                                : _vm._e()\n                            ]\n                          : _vm._e()\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\"el-pagination\", {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.orderEntry.total > 0,\n            expression: \"orderEntry.total > 0\"\n          }\n        ],\n        attrs: {\n          \"page-sizes\": _vm.sizes,\n          \"page-size\": _vm.orderEntry.actualFilters.rows,\n          \"current-page\": _vm.orderEntry.actualFilters.page,\n          layout: \"total, sizes, prev, pager, next, jumper\",\n          total: _vm.orderEntry.total\n        },\n        on: {\n          \"size-change\": _vm.handleSearchChangeLimit,\n          \"update:currentPage\": function($event) {\n            return _vm.$set(_vm.orderEntry.actualFilters, \"page\", $event)\n          },\n          \"update:current-page\": function($event) {\n            return _vm.$set(_vm.orderEntry.actualFilters, \"page\", $event)\n          },\n          \"current-change\": _vm.handleSearchChangePage\n        }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}