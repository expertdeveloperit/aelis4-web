{"remainingRequest":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/spineor/Downloads/aelis4-web/vue-client/src/views/layout/components/Sidebar/SidebarItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/spineor/Downloads/aelis4-web/vue-client/src/views/layout/components/Sidebar/SidebarItem.vue","mtime":1566984596000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/spineor/Downloads/aelis4-web/vue-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex';\nimport validator from 'validator';\nimport path from 'path';\nimport Item from './Item';\nimport AppLink from './Link';\n\nexport default {\n  name: 'SidebarItem',\n  components: { Item, AppLink },\n  props: {\n    // route object\n    item: {\n      type: Object,\n      required: true\n    },\n    isNest: {\n      type: Boolean,\n      default: false\n    },\n    basePath: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'user'\n    ]),\n    children() {\n      return this.item.children.filter(child => this.hasRoles(child));\n    }\n  },\n  data() {\n    return {\n      onlyOneChild: null\n    };\n  },\n  methods: {\n    hasOneShowingChild(children, parent) {\n      const showingChildren = children.filter((item) => {\n        if (item.hidden) {\n          return false;\n        }\n        // Temp set(will be used if only has one showing child)\n        this.onlyOneChild = item;\n        return true;\n      });\n\n      // When there is only one child router, the child router is displayed by default\n      if (showingChildren.length === 1) {\n        return true;\n      }\n\n      // Show parent if there are no child router to display\n      if (showingChildren.length === 0) {\n        this.onlyOneChild = { ...parent, path: '', noShowingChildren: true };\n        return true;\n      }\n\n      return false;\n    },\n    resolvePath(routePath) {\n      if (this.isExternalLink(routePath)) {\n        return routePath;\n      }\n      return path.resolve(this.basePath, routePath);\n    },\n    isExternalLink(routePath) {\n      return validator.isURL(routePath);\n    },\n    hasRoles(item) {\n      const routeRequiredRoles = (item.meta || {}).roles || [];\n      return routeRequiredRoles.length && routeRequiredRoles.some(role => this.user.roles.includes(role));\n    },\n    isVisible() {\n      return (!this.item.hidden && this.item.children)\n        && this.hasRoles(this.item);\n    }\n  }\n};\n",{"version":3,"sources":["SidebarItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SidebarItem.vue","sourceRoot":"src/views/layout/components/Sidebar","sourcesContent":["<template>\n  <div v-if=\"isVisible()\" class=\"menu-wrapper\">\n\n    <template v-if=\"hasOneShowingChild(item.children,item) && (!onlyOneChild.children||onlyOneChild.noShowingChildren)&&!item.alwaysShow\">\n      <app-link :to=\"resolvePath(onlyOneChild.path)\">\n        <el-menu-item :index=\"resolvePath(onlyOneChild.path)\" :class=\"{'submenu-title-noDropdown':!isNest}\">\n          <item v-if=\"onlyOneChild.meta\" :icon=\"onlyOneChild.meta.icon||item.meta.icon\" :title=\"$t('route.' + onlyOneChild.meta.title)\" />\n        </el-menu-item>\n      </app-link>\n    </template>\n\n    <el-submenu v-else :index=\"resolvePath(item.path)\">\n      <template slot=\"title\">\n        <item v-if=\"item.meta\" :icon=\"item.meta.icon\" :title=\"$t('route.' + item.meta.title)\" />\n      </template>\n\n      <template v-for=\"child in children\">\n        <sidebar-item\n          v-if=\"child.children&&child.children.length>0\"\n          :is-nest=\"true\"\n          :item=\"child\"\n          :key=\"child.path\"\n          :base-path=\"resolvePath(child.path)\"\n          class=\"nest-menu\" />\n        <app-link v-else :to=\"resolvePath(child.path)\" :key=\"child.name\">\n          <el-menu-item :index=\"resolvePath(child.path)\">\n            <item v-if=\"child.meta\" :icon=\"child.meta.icon\" :title=\"$t('route.' + child.meta.title)\" />\n          </el-menu-item>\n        </app-link>\n      </template>\n    </el-submenu>\n\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport validator from 'validator';\nimport path from 'path';\nimport Item from './Item';\nimport AppLink from './Link';\n\nexport default {\n  name: 'SidebarItem',\n  components: { Item, AppLink },\n  props: {\n    // route object\n    item: {\n      type: Object,\n      required: true\n    },\n    isNest: {\n      type: Boolean,\n      default: false\n    },\n    basePath: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'user'\n    ]),\n    children() {\n      return this.item.children.filter(child => this.hasRoles(child));\n    }\n  },\n  data() {\n    return {\n      onlyOneChild: null\n    };\n  },\n  methods: {\n    hasOneShowingChild(children, parent) {\n      const showingChildren = children.filter((item) => {\n        if (item.hidden) {\n          return false;\n        }\n        // Temp set(will be used if only has one showing child)\n        this.onlyOneChild = item;\n        return true;\n      });\n\n      // When there is only one child router, the child router is displayed by default\n      if (showingChildren.length === 1) {\n        return true;\n      }\n\n      // Show parent if there are no child router to display\n      if (showingChildren.length === 0) {\n        this.onlyOneChild = { ...parent, path: '', noShowingChildren: true };\n        return true;\n      }\n\n      return false;\n    },\n    resolvePath(routePath) {\n      if (this.isExternalLink(routePath)) {\n        return routePath;\n      }\n      return path.resolve(this.basePath, routePath);\n    },\n    isExternalLink(routePath) {\n      return validator.isURL(routePath);\n    },\n    hasRoles(item) {\n      const routeRequiredRoles = (item.meta || {}).roles || [];\n      return routeRequiredRoles.length && routeRequiredRoles.some(role => this.user.roles.includes(role));\n    },\n    isVisible() {\n      return (!this.item.hidden && this.item.children)\n        && this.hasRoles(this.item);\n    }\n  }\n};\n</script>\n"]}]}